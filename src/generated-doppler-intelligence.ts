/**
 * Generated Doppler Intelligence Database
 * 
 * Phase 3 (KAYA-21): Doppler Integration Intelligence
 * Auto-generated from 20 Doppler documentation files
 * 
 * Total Intelligence Patterns: 1899
 * Categories: 10
 * Generated: 2025-06-22T12:08:05.128Z
 */

export interface DopplerIntelligencePattern {
  name: string;
  description: string;
  pattern: string;
  category: string;
  type: string;
  complexity: 'low' | 'moderate' | 'high' | 'expert';
  safety: 'safe' | 'moderate' | 'careful' | 'critical';
  filename: string;
  lineNumber: number;
  section: string;
  subsection: string;
  usage: string;
  examples: string[];
  recommendations: string[];
  warnings: string[];
  topics?: string[];
}

export const DOPPLER_INTELLIGENCE_PATTERNS: DopplerIntelligencePattern[] = [
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "---",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "access-control.md",
    "lineNumber": 1,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "---"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "title: \"Doppler Access Control & Permissions\"",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 2,
    "section": "",
    "subsection": "",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "description: \"Guide to managing user permissions and access control in Doppler\"",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 3,
    "section": "",
    "subsection": "",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "tags: [\"doppler\", \"access-control\", \"permissions\", \"security\"]",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "tags: [\"doppler\", \"access-control\", \"permissions\", \"security\"]",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "access-control.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "tags: [\"doppler\", \"access-control\", \"permissions\", \"security\"]"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "# Doppler Access Control & Permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 12,
    "section": "Doppler Access Control & Permissions",
    "subsection": "",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "## Permission Levels Overview",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 14,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Permission Levels Overview",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "Doppler uses a hierarchical permission system with three project-based access levels:",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 16,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Permission Levels Overview",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "- Can manage service tokens",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "access-control.md",
    "lineNumber": 25,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Permission Levels Overview",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "ip_access_control",
    "description": "IP allowlisting for enhanced security in production environments",
    "pattern": "- Can configure trusted IPs",
    "category": "security",
    "type": "access_control",
    "complexity": "high",
    "safety": "critical",
    "filename": "access-control.md",
    "lineNumber": 26,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Permission Levels Overview",
    "usage": "Configure trusted IPs for production token access",
    "examples": [
      "Add CI/CD server IPs to allowlist",
      "Configure production server IP ranges"
    ],
    "recommendations": [
      "Always use IP allowlisting in production",
      "Regular audit of trusted IPs"
    ],
    "warnings": [
      "Incorrect IP configuration can break production access"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- All Collaborator permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 31,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Permission Levels Overview",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "## Workplace-Level Permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 35,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Workplace-Level Permissions",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- Environment permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 67,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Access Management",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "## Service Token Permissions",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "access-control.md",
    "lineNumber": 83,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Service Token Permissions",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "## Service Token Permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 83,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Service Token Permissions",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "Service tokens inherit permissions based on:",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "access-control.md",
    "lineNumber": 85,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Service Token Permissions",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "Service tokens inherit permissions based on:",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 85,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Service Token Permissions",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- **Read-Only**: Can only fetch secrets",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "access-control.md",
    "lineNumber": 91,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Service Token Permissions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- **Read-Only**: Can only fetch secrets"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- **Read/Write**: Can fetch and modify secrets",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "access-control.md",
    "lineNumber": 92,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Service Token Permissions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- **Read/Write**: Can fetch and modify secrets"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "## Advanced Permission Features",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 95,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Advanced Permission Features",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- Granular permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 102,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Advanced Permission Features",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- Permission templates",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 103,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Advanced Permission Features",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- Audit logging",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "access-control.md",
    "lineNumber": 104,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Advanced Permission Features",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "ip_access_control",
    "description": "IP allowlisting for enhanced security in production environments",
    "pattern": "### Trusted IP Restrictions",
    "category": "security",
    "type": "access_control",
    "complexity": "high",
    "safety": "critical",
    "filename": "access-control.md",
    "lineNumber": 106,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Advanced Permission Features",
    "usage": "Configure trusted IPs for production token access",
    "examples": [
      "Add CI/CD server IPs to allowlist",
      "Configure production server IP ranges"
    ],
    "recommendations": [
      "Always use IP allowlisting in production",
      "Regular audit of trusted IPs"
    ],
    "warnings": [
      "Incorrect IP configuration can break production access"
    ]
  },
  {
    "name": "ip_access_control",
    "description": "IP allowlisting for enhanced security in production environments",
    "pattern": "- IP allowlists for specific environments",
    "category": "security",
    "type": "access_control",
    "complexity": "high",
    "safety": "critical",
    "filename": "access-control.md",
    "lineNumber": 108,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Advanced Permission Features",
    "usage": "Configure trusted IPs for production token access",
    "examples": [
      "Add CI/CD server IPs to allowlist",
      "Configure production server IP ranges"
    ],
    "recommendations": [
      "Always use IP allowlisting in production",
      "Regular audit of trusted IPs"
    ],
    "warnings": [
      "Incorrect IP configuration can break production access"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "- Service token IP restrictions",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "access-control.md",
    "lineNumber": 109,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Advanced Permission Features",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "## Permission Best Practices",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 112,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Permission Best Practices",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- Grant minimum necessary permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 115,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Permission Best Practices",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- Regularly audit permissions",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "access-control.md",
    "lineNumber": 117,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Permission Best Practices",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- Regularly audit permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 117,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Permission Best Practices",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "### 3. Service Token Management",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "access-control.md",
    "lineNumber": 130,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Permission Best Practices",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "secret_rotation_strategy",
    "description": "Secret rotation best practices for security and compliance",
    "pattern": "- Rotate tokens regularly",
    "category": "best_practices",
    "type": "security_lifecycle",
    "complexity": "high",
    "safety": "critical",
    "filename": "access-control.md",
    "lineNumber": 133,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Permission Best Practices",
    "usage": "Implement regular secret rotation for security compliance",
    "examples": [
      "Automated rotation via API",
      "Zero-downtime rotation strategies"
    ],
    "recommendations": [
      "Automate rotation where possible",
      "Test rotation procedures"
    ],
    "warnings": [
      "Improper rotation can cause service outages"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "## Common Permission Scenarios",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 136,
    "section": "Doppler Access Control & Permissions",
    "subsection": "Common Permission Scenarios",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "# Create read-only token for production deployments",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "access-control.md",
    "lineNumber": 148,
    "section": "Create read-only token for production deployments",
    "subsection": "Common Permission Scenarios",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "Type: Service Token (Read-Only)",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "access-control.md",
    "lineNumber": 151,
    "section": "Create read-only token for production deployments",
    "subsection": "Common Permission Scenarios",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "environment_promotion_strategy",
    "description": "Best practices for promoting secrets between environments",
    "pattern": "Environments: [dev, staging]",
    "category": "best_practices",
    "type": "environment_management",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "access-control.md",
    "lineNumber": 159,
    "section": "Frontend team needs backend secrets",
    "subsection": "Common Permission Scenarios",
    "usage": "Systematically promote secrets from development to production",
    "examples": [
      "doppler secrets download --no-file -c dev | doppler secrets upload -c staging",
      "Exclude environment-specific secrets like DATABASE_URL"
    ],
    "recommendations": [
      "Test in staging before production",
      "Exclude environment-specific secrets"
    ],
    "warnings": [
      "Always validate promoted secrets before deployment"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- Conduct monthly permission audits",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "access-control.md",
    "lineNumber": 166,
    "section": "Frontend team needs backend secrets",
    "subsection": "Security Considerations",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- Conduct monthly permission audits",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 166,
    "section": "Frontend team needs backend secrets",
    "subsection": "Security Considerations",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "- Review service token usage",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "access-control.md",
    "lineNumber": 168,
    "section": "Frontend team needs backend secrets",
    "subsection": "Security Considerations",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- Document permission changes",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 172,
    "section": "Frontend team needs backend secrets",
    "subsection": "Security Considerations",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "## Troubleshooting Permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 175,
    "section": "Frontend team needs backend secrets",
    "subsection": "Troubleshooting Permissions",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- Check environment-specific permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 181,
    "section": "Frontend team needs backend secrets",
    "subsection": "Troubleshooting Permissions",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- Confirm workplace-level permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 182,
    "section": "Frontend team needs backend secrets",
    "subsection": "Troubleshooting Permissions",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "2. **Service Token Not Working**",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "access-control.md",
    "lineNumber": 184,
    "section": "Frontend team needs backend secrets",
    "subsection": "Troubleshooting Permissions",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "## Permission Matrix",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "access-control.md",
    "lineNumber": 194,
    "section": "Frontend team needs backend secrets",
    "subsection": "Permission Matrix",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "|--------|--------|--------------|-------|-----------------|",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "access-control.md",
    "lineNumber": 197,
    "section": "Frontend team needs backend secrets",
    "subsection": "Permission Matrix",
    "usage": "Use as template for integration configuration",
    "examples": [
      "|--------|--------|--------------|-------|-----------------|"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "| Create service tokens | ✗ | ✓ | ✓ | ✓ |",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "access-control.md",
    "lineNumber": 200,
    "section": "Frontend team needs backend secrets",
    "subsection": "Permission Matrix",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "file_access_control",
    "description": "Comprehensive guide: access-control.md",
    "pattern": "Documentation file: access-control.md",
    "category": "security",
    "type": "documentation",
    "complexity": "high",
    "safety": "safe",
    "filename": "access-control.md",
    "lineNumber": 1,
    "section": "file_overview",
    "subsection": "",
    "usage": "Reference guide for access control",
    "examples": [
      "Study access-control.md for detailed information"
    ],
    "recommendations": [
      "Follow practices outlined in access-control.md"
    ],
    "warnings": [],
    "topics": [
      "Permission Levels Overview",
      "Workplace-Level Permissions",
      "Access Management",
      "Environment-Specific Access",
      "Service Token Permissions",
      "Advanced Permission Features",
      "Permission Best Practices",
      "Common Permission Scenarios",
      "Security Considerations",
      "Troubleshooting Permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "---",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 1,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "---"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "description: \"Learn multiple methods for accessing secrets in Doppler, including environment injection, file mounting, API/SDK integration, and direct download with security considerations\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 3,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "description: \"Learn multiple methods for accessing secrets in Doppler, including environment injection, file mounting, API/SDK integration, and direct download with security considerations\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "category: \"secrets-management\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 4,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "category: \"secrets-management\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "tags: [\"doppler\", \"secrets\", \"environment-variables\", \"api\", \"sdk\", \"security\"]",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "tags: [\"doppler\", \"secrets\", \"environment-variables\", \"api\", \"sdk\", \"security\"]"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "|--------|----------|----------|------------|",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 21,
    "section": "Accessing Secrets in Doppler",
    "subsection": "Access Methods Comparison",
    "usage": "Use as template for integration configuration",
    "examples": [
      "|--------|----------|----------|------------|"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "| Environment Injection | Development, simple apps | Good | Low |",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 22,
    "section": "Accessing Secrets in Doppler",
    "subsection": "Access Methods Comparison",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 34,
    "section": "Run application with injected secrets",
    "subsection": "1. Environment Variable Injection",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- npm start",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 34,
    "section": "Run application with injected secrets",
    "subsection": "1. Environment Variable Injection",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler run --project api --config production -- python app.py",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 37,
    "section": "Specific project/config",
    "subsection": "1. Environment Variable Injection",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_run_--project",
    "description": "CLI command: run --project command",
    "pattern": "doppler run --project api --config production -- python app.py",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 37,
    "section": "Specific project/config",
    "subsection": "1. Environment Variable Injection",
    "usage": "Use doppler run --project for run operations",
    "examples": [
      "doppler run --project api --config production -- python app.py",
      "doppler run --project --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--project",
    "description": "Doppler CLI command: run --project",
    "pattern": "doppler run --project api --config production -- python app.py",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 37,
    "section": "Specific project/config",
    "subsection": "1. Environment Variable Injection",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --project api --config production -- python app.py"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- env | grep API_KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 40,
    "section": "Verify injection",
    "subsection": "1. Environment Variable Injection",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- env | grep API_KEY",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- env | grep API_KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 40,
    "section": "Verify injection",
    "subsection": "1. Environment Variable Injection",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- env | grep API_KEY"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--mount",
    "description": "CLI command: run --mount command",
    "pattern": "doppler run --mount .env -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 71,
    "section": "Mount as .env file",
    "subsection": "2. File Mounting",
    "usage": "Use doppler run --mount for run operations",
    "examples": [
      "doppler run --mount .env -- npm start",
      "doppler run --mount --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--mount",
    "description": "Doppler CLI command: run --mount",
    "pattern": "doppler run --mount .env -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 71,
    "section": "Mount as .env file",
    "subsection": "2. File Mounting",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --mount .env -- npm start"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--mount",
    "description": "CLI command: run --mount command",
    "pattern": "doppler run --mount /tmp/.env -- python app.py",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 74,
    "section": "Custom location",
    "subsection": "2. File Mounting",
    "usage": "Use doppler run --mount for run operations",
    "examples": [
      "doppler run --mount /tmp/.env -- python app.py",
      "doppler run --mount --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--mount",
    "description": "Doppler CLI command: run --mount",
    "pattern": "doppler run --mount /tmp/.env -- python app.py",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 74,
    "section": "Custom location",
    "subsection": "2. File Mounting",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --mount /tmp/.env -- python app.py"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--mount",
    "description": "CLI command: run --mount command",
    "pattern": "doppler run --mount secrets.json -- node app.js",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 84,
    "section": "Mount as JSON",
    "subsection": "2. File Mounting",
    "usage": "Use doppler run --mount for run operations",
    "examples": [
      "doppler run --mount secrets.json -- node app.js",
      "doppler run --mount --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--mount",
    "description": "Doppler CLI command: run --mount",
    "pattern": "doppler run --mount secrets.json -- node app.js",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 84,
    "section": "Mount as JSON",
    "subsection": "2. File Mounting",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --mount secrets.json -- node app.js"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--mount",
    "description": "CLI command: run --mount command",
    "pattern": "doppler run --mount config.yaml -- python app.py",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 94,
    "section": "Mount as YAML",
    "subsection": "2. File Mounting",
    "usage": "Use doppler run --mount for run operations",
    "examples": [
      "doppler run --mount config.yaml -- python app.py",
      "doppler run --mount --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--mount",
    "description": "Doppler CLI command: run --mount",
    "pattern": "doppler run --mount config.yaml -- python app.py",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 94,
    "section": "Mount as YAML",
    "subsection": "2. File Mounting",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --mount config.yaml -- python app.py"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 107,
    "section": "Create template file: config.tmpl",
    "subsection": "2. File Mounting",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"database\": {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 108,
    "section": "Create template file: config.tmpl",
    "subsection": "2. File Mounting",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"database\": {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"host\": \"{{.DB_HOST}}\",",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 109,
    "section": "Create template file: config.tmpl",
    "subsection": "2. File Mounting",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"host\": \"{{.DB_HOST}}\","
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"port\": {{.DB_PORT}},",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 110,
    "section": "Create template file: config.tmpl",
    "subsection": "2. File Mounting",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"port\": {{.DB_PORT}},"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"name\": \"{{.DB_NAME}}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 111,
    "section": "Create template file: config.tmpl",
    "subsection": "2. File Mounting",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"name\": \"{{.DB_NAME}}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"api\": {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 113,
    "section": "Create template file: config.tmpl",
    "subsection": "2. File Mounting",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"api\": {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"key\": \"{{.API_KEY}}\",",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 114,
    "section": "Create template file: config.tmpl",
    "subsection": "2. File Mounting",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"key\": \"{{.API_KEY}}\","
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"url\": \"{{.API_URL}}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 115,
    "section": "Create template file: config.tmpl",
    "subsection": "2. File Mounting",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"url\": \"{{.API_URL}}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_run_--mount-template",
    "description": "CLI command: run --mount-template command",
    "pattern": "doppler run --mount-template config.tmpl=config.json -- node app.js",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 121,
    "section": "Mount using template",
    "subsection": "2. File Mounting",
    "usage": "Use doppler run --mount-template for run operations",
    "examples": [
      "doppler run --mount-template config.tmpl=config.json -- node app.js",
      "doppler run --mount-template --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--mount-template",
    "description": "Doppler CLI command: run --mount-template",
    "pattern": "doppler run --mount-template config.tmpl=config.json -- node app.js",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 121,
    "section": "Mount using template",
    "subsection": "2. File Mounting",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --mount-template config.tmpl=config.json -- node app.js"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- Proper file permissions (readable only by user)",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "accessing-secrets.md",
    "lineNumber": 126,
    "section": "Mount using template",
    "subsection": "2. File Mounting",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "API_KEY=$(doppler secrets get API_KEY --plain)",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 136,
    "section": "Get value for scripts",
    "subsection": "3. Direct Secret Retrieval",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "API_KEY=$(doppler secrets get API_KEY --plain)"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "echo \"Using API key: ${API_KEY:0:4}...\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 137,
    "section": "Get value for scripts",
    "subsection": "3. Direct Secret Retrieval",
    "usage": "Use as template for integration configuration",
    "examples": [
      "echo \"Using API key: ${API_KEY:0:4}...\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_secrets_get",
    "description": "CLI command: secrets get command",
    "pattern": "doppler secrets get CERTIFICATE --plain > cert.pem",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 140,
    "section": "Pipe to file",
    "subsection": "3. Direct Secret Retrieval",
    "usage": "Use doppler secrets get for secrets operations",
    "examples": [
      "doppler secrets get CERTIFICATE --plain > cert.pem",
      "doppler secrets get --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "doppler secrets get CERTIFICATE --plain > cert.pem",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 140,
    "section": "Pipe to file",
    "subsection": "3. Direct Secret Retrieval",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets get CERTIFICATE --plain > cert.pem"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_get",
    "description": "CLI command: secrets get command",
    "pattern": "doppler secrets get API_KEY DATABASE_URL --json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 146,
    "section": "Get as JSON",
    "subsection": "3. Direct Secret Retrieval",
    "usage": "Use doppler secrets get for secrets operations",
    "examples": [
      "doppler secrets get API_KEY DATABASE_URL --json",
      "doppler secrets get --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "doppler secrets get API_KEY DATABASE_URL --json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 146,
    "section": "Get as JSON",
    "subsection": "3. Direct Secret Retrieval",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets get API_KEY DATABASE_URL --json"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "eval $(doppler secrets get API_KEY DB_URL --json | jq -r 'to_entries | .[] | \"export \\(.key)=\\(.value)\"')",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 149,
    "section": "Parse with jq",
    "subsection": "3. Direct Secret Retrieval",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "eval $(doppler secrets get API_KEY DB_URL --json | jq -r 'to_entries | .[] | \"export \\(.key)=\\(.value)\"')"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "eval $(doppler secrets get API_KEY DB_URL --json | jq -r 'to_entries | .[] | \"export \\(.key)=\\(.value)\"')",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "accessing-secrets.md",
    "lineNumber": 149,
    "section": "Parse with jq",
    "subsection": "3. Direct Secret Retrieval",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 155,
    "section": "As environment variables",
    "subsection": "3. Direct Secret Retrieval",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format env",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 155,
    "section": "As environment variables",
    "subsection": "3. Direct Secret Retrieval",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format env"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 158,
    "section": "As JSON",
    "subsection": "3. Direct Secret Retrieval",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format json",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 158,
    "section": "As JSON",
    "subsection": "3. Direct Secret Retrieval",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format json"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 161,
    "section": "As YAML",
    "subsection": "3. Direct Secret Retrieval",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format yaml",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 161,
    "section": "As YAML",
    "subsection": "3. Direct Secret Retrieval",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format yaml"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "docker_secret_injection",
    "description": "Docker container secret injection using Doppler CLI",
    "pattern": "doppler secrets download --no-file --format docker",
    "category": "integration",
    "type": "container_deployment",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "accessing-secrets.md",
    "lineNumber": 164,
    "section": "Docker format",
    "subsection": "3. Direct Secret Retrieval",
    "usage": "Inject secrets into Docker containers using Doppler CLI",
    "examples": [
      "doppler run -- docker build -t myapp .",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use Doppler CLI for secret injection",
      "Never bake secrets into images"
    ],
    "warnings": [
      "Ensure Doppler CLI is available in container"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format docker",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 164,
    "section": "Docker format",
    "subsection": "3. Direct Secret Retrieval",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format docker",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format docker",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 164,
    "section": "Docker format",
    "subsection": "3. Direct Secret Retrieval",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format docker"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format env | grep \"^DATABASE_\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 172,
    "section": "Get secrets matching pattern",
    "subsection": "4. Filtering and Transformation",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format env | grep \"^DATABASE_\"",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format env | grep \"^DATABASE_\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 172,
    "section": "Get secrets matching pattern",
    "subsection": "4. Filtering and Transformation",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format env | grep \"^DATABASE_\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format json | jq 'with_entries(select(.key | startswith(\"API_\")))'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 175,
    "section": "With jq for JSON",
    "subsection": "4. Filtering and Transformation",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format json | jq 'with_entries(select(.key | startswith(\"API_\")))'",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format json | jq 'with_entries(select(.key | startswith(\"API_\")))'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 175,
    "section": "With jq for JSON",
    "subsection": "4. Filtering and Transformation",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format json | jq 'with_entries(select(.key | startswith(\"API_\")))'"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format env --name-transformer lowercase",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 181,
    "section": "Convert to lowercase (for some frameworks)",
    "subsection": "4. Filtering and Transformation",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format env --name-transformer lowercase",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format env --name-transformer lowercase",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 181,
    "section": "Convert to lowercase (for some frameworks)",
    "subsection": "4. Filtering and Transformation",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format env --name-transformer lowercase"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "api_endpoint_usage",
    "description": "Doppler REST API endpoint usage pattern",
    "pattern": "\"https://api.doppler.com/v3/configs/config/secrets\" \\",
    "category": "api_usage",
    "type": "rest_api",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "accessing-secrets.md",
    "lineNumber": 198,
    "section": "Get all secrets",
    "subsection": "5. API and SDK Access",
    "usage": "Use Doppler REST API for programmatic access",
    "examples": [
      "\"https://api.doppler.com/v3/configs/config/secrets\" \\"
    ],
    "recommendations": [
      "Use service tokens for API access",
      "Implement proper error handling"
    ],
    "warnings": [
      "Rate limiting applies to API calls"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"https://api.doppler.com/v3/configs/config/secrets\" \\",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 198,
    "section": "Get all secrets",
    "subsection": "5. API and SDK Access",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"https://api.doppler.com/v3/configs/config/secrets\" \\"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "-H \"Authorization: Bearer ${DOPPLER_TOKEN}\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "accessing-secrets.md",
    "lineNumber": 199,
    "section": "Get all secrets",
    "subsection": "5. API and SDK Access",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "-H \"Authorization: Bearer ${DOPPLER_TOKEN}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 199,
    "section": "Get all secrets",
    "subsection": "5. API and SDK Access",
    "usage": "Use as template for integration configuration",
    "examples": [
      "-H \"Authorization: Bearer ${DOPPLER_TOKEN}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "api_endpoint_usage",
    "description": "Doppler REST API endpoint usage pattern",
    "pattern": "\"https://api.doppler.com/v3/configs/config/secret?name=API_KEY\" \\",
    "category": "api_usage",
    "type": "rest_api",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "accessing-secrets.md",
    "lineNumber": 203,
    "section": "Get specific secret",
    "subsection": "5. API and SDK Access",
    "usage": "Use Doppler REST API for programmatic access",
    "examples": [
      "\"https://api.doppler.com/v3/configs/config/secret?name=API_KEY\" \\"
    ],
    "recommendations": [
      "Use service tokens for API access",
      "Implement proper error handling"
    ],
    "warnings": [
      "Rate limiting applies to API calls"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"https://api.doppler.com/v3/configs/config/secret?name=API_KEY\" \\",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 203,
    "section": "Get specific secret",
    "subsection": "5. API and SDK Access",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"https://api.doppler.com/v3/configs/config/secret?name=API_KEY\" \\"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "const { DopplerClient } = require('@dopplerhq/node-sdk');",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 209,
    "section": "Get specific secret",
    "subsection": "5. API and SDK Access",
    "usage": "Use as template for integration configuration",
    "examples": [
      "const { DopplerClient } = require('@dopplerhq/node-sdk');"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "const client = new DopplerClient({ apiKey: process.env.DOPPLER_TOKEN });",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "accessing-secrets.md",
    "lineNumber": 211,
    "section": "Get specific secret",
    "subsection": "5. API and SDK Access",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "const client = new DopplerClient({ apiKey: process.env.DOPPLER_TOKEN });",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 211,
    "section": "Get specific secret",
    "subsection": "5. API and SDK Access",
    "usage": "Use as template for integration configuration",
    "examples": [
      "const client = new DopplerClient({ apiKey: process.env.DOPPLER_TOKEN });"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "const secrets = await client.secrets.list({",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 214,
    "section": "Get specific secret",
    "subsection": "5. API and SDK Access",
    "usage": "Use as template for integration configuration",
    "examples": [
      "const secrets = await client.secrets.list({"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "config: 'production'",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 216,
    "section": "Get specific secret",
    "subsection": "5. API and SDK Access",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "const secret = await client.secrets.get({",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 220,
    "section": "Get specific secret",
    "subsection": "5. API and SDK Access",
    "usage": "Use as template for integration configuration",
    "examples": [
      "const secret = await client.secrets.get({"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "config: 'production',",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 222,
    "section": "Get specific secret",
    "subsection": "5. API and SDK Access",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "sdk = DopplerSDK(api_key=os.environ['DOPPLER_TOKEN'])",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "accessing-secrets.md",
    "lineNumber": 231,
    "section": "Get specific secret",
    "subsection": "5. API and SDK Access",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "config='production'",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 236,
    "section": "Fetch all secrets",
    "subsection": "5. API and SDK Access",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "config='production',",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 242,
    "section": "Get specific secret",
    "subsection": "5. API and SDK Access",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "## 6. Service Token Authentication",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "accessing-secrets.md",
    "lineNumber": 247,
    "section": "Get specific secret",
    "subsection": "6. Service Token Authentication",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "Use service tokens for production access.",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "accessing-secrets.md",
    "lineNumber": 249,
    "section": "Get specific secret",
    "subsection": "6. Service Token Authentication",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "### Create Service Token",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "accessing-secrets.md",
    "lineNumber": 251,
    "section": "Get specific secret",
    "subsection": "6. Service Token Authentication",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "cli_service-tokens_create",
    "description": "CLI command: service-tokens create command",
    "pattern": "doppler service-tokens create prod-reader --access read-only",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 254,
    "section": "Read-only token",
    "subsection": "6. Service Token Authentication",
    "usage": "Use doppler service-tokens create for service-tokens operations",
    "examples": [
      "doppler service-tokens create prod-reader --access read-only",
      "doppler service-tokens create --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_service-tokens_create",
    "description": "Doppler CLI command: service-tokens create",
    "pattern": "doppler service-tokens create prod-reader --access read-only",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 254,
    "section": "Read-only token",
    "subsection": "6. Service Token Authentication",
    "usage": "Execute service-tokens operations via CLI",
    "examples": [
      "doppler service-tokens create prod-reader --access read-only"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_service-tokens_create",
    "description": "CLI command: service-tokens create command",
    "pattern": "doppler service-tokens create ci-token --access read/write",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 257,
    "section": "Full access token",
    "subsection": "6. Service Token Authentication",
    "usage": "Use doppler service-tokens create for service-tokens operations",
    "examples": [
      "doppler service-tokens create ci-token --access read/write",
      "doppler service-tokens create --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_service-tokens_create",
    "description": "Doppler CLI command: service-tokens create",
    "pattern": "doppler service-tokens create ci-token --access read/write",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 257,
    "section": "Full access token",
    "subsection": "6. Service Token Authentication",
    "usage": "Execute service-tokens operations via CLI",
    "examples": [
      "doppler service-tokens create ci-token --access read/write"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "### Use Service Token",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "accessing-secrets.md",
    "lineNumber": 260,
    "section": "Full access token",
    "subsection": "6. Service Token Authentication",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "export DOPPLER_TOKEN=\"dp.st.production_xxxxx\"",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "accessing-secrets.md",
    "lineNumber": 263,
    "section": "Set as environment variable",
    "subsection": "6. Service Token Authentication",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_TOKEN=\"dp.st.production_xxxxx\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "accessing-secrets.md",
    "lineNumber": 263,
    "section": "Set as environment variable",
    "subsection": "6. Service Token Authentication",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "curl -H \"Authorization: Bearer ${DOPPLER_TOKEN}\" \\",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "accessing-secrets.md",
    "lineNumber": 269,
    "section": "Use with API",
    "subsection": "6. Service Token Authentication",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "curl -H \"Authorization: Bearer ${DOPPLER_TOKEN}\" \\",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 269,
    "section": "Use with API",
    "subsection": "6. Service Token Authentication",
    "usage": "Use as template for integration configuration",
    "examples": [
      "curl -H \"Authorization: Bearer ${DOPPLER_TOKEN}\" \\"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "api_endpoint_usage",
    "description": "Doppler REST API endpoint usage pattern",
    "pattern": "https://api.doppler.com/v3/configs/config/secrets",
    "category": "api_usage",
    "type": "rest_api",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "accessing-secrets.md",
    "lineNumber": 270,
    "section": "Use with API",
    "subsection": "6. Service Token Authentication",
    "usage": "Use Doppler REST API for programmatic access",
    "examples": [
      "https://api.doppler.com/v3/configs/config/secrets"
    ],
    "recommendations": [
      "Use service tokens for API access",
      "Implement proper error handling"
    ],
    "warnings": [
      "Rate limiting applies to API calls"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "https://api.doppler.com/v3/configs/config/secrets",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 270,
    "section": "Use with API",
    "subsection": "6. Service Token Authentication",
    "usage": "Use as template for integration configuration",
    "examples": [
      "https://api.doppler.com/v3/configs/config/secrets"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "### Local Development",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 275,
    "section": "Use with API",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "doppler setup",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 278,
    "section": "Interactive setup",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "cli_setup",
    "description": "CLI command: setup command",
    "pattern": "doppler setup",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 278,
    "section": "Interactive setup",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Use doppler setup for setup operations",
    "examples": [
      "doppler setup",
      "doppler setup --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_setup",
    "description": "Doppler CLI command: setup",
    "pattern": "doppler setup",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 278,
    "section": "Interactive setup",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Execute setup operations via CLI",
    "examples": [
      "doppler setup"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- npm run dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 281,
    "section": "Daily workflow",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- npm run dev",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- npm run dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 281,
    "section": "Daily workflow",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- npm run dev"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "curl -sLf --retry 3 --tlsv1.2 --proto \"=https\" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | apt-key add - && \\",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 290,
    "section": "Install Doppler CLI",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Use as template for integration configuration",
    "examples": [
      "curl -sLf --retry 3 --tlsv1.2 --proto \"=https\" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | apt-key add - && \\"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "echo \"deb https://packages.doppler.com/public/cli/deb/debian any-version main\" | tee /etc/apt/sources.list.d/doppler-cli.list && \\",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 291,
    "section": "Install Doppler CLI",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Use as template for integration configuration",
    "examples": [
      "echo \"deb https://packages.doppler.com/public/cli/deb/debian any-version main\" | tee /etc/apt/sources.list.d/doppler-cli.list && \\"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "ENV DOPPLER_TOKEN=${DOPPLER_TOKEN}",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "accessing-secrets.md",
    "lineNumber": 295,
    "section": "Run with Doppler",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "ENV DOPPLER_TOKEN=${DOPPLER_TOKEN}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 295,
    "section": "Run with Doppler",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Use as template for integration configuration",
    "examples": [
      "ENV DOPPLER_TOKEN=${DOPPLER_TOKEN}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "github_actions_integration",
    "description": "GitHub Actions workflow integration with Doppler secrets",
    "pattern": "# GitHub Actions",
    "category": "integration",
    "type": "ci_cd_workflow",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 301,
    "section": "GitHub Actions",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Integrate Doppler secrets into GitHub Actions workflows",
    "examples": [
      "uses: dopplerhq/secrets-fetch-action@v1.1.0",
      "with: doppler-token: ${{ secrets.DOPPLER_TOKEN }}"
    ],
    "recommendations": [
      "Use GitHub Actions integration action",
      "Store Doppler token in GitHub Secrets"
    ],
    "warnings": [
      "Never expose Doppler tokens in workflow logs"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "DOPPLER_TOKEN: ${{ secrets.DOPPLER_CI_TOKEN }}",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "accessing-secrets.md",
    "lineNumber": 304,
    "section": "GitHub Actions",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "DOPPLER_TOKEN: ${{ secrets.DOPPLER_CI_TOKEN }}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 304,
    "section": "GitHub Actions",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Use as template for integration configuration",
    "examples": [
      "DOPPLER_TOKEN: ${{ secrets.DOPPLER_CI_TOKEN }}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "run: doppler run -- npm test",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 305,
    "section": "GitHub Actions",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Execute run operations via CLI",
    "examples": [
      "run: doppler run -- npm test"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "run: doppler run -- npm test",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 305,
    "section": "GitHub Actions",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Use as template for integration configuration",
    "examples": [
      "run: doppler run -- npm test"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "- export DOPPLER_TOKEN=$DOPPLER_CI_TOKEN",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "accessing-secrets.md",
    "lineNumber": 310,
    "section": "GitLab CI",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "- doppler run -- npm test",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 311,
    "section": "GitLab CI",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Execute run operations via CLI",
    "examples": [
      "- doppler run -- npm test"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "### Kubernetes",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "accessing-secrets.md",
    "lineNumber": 314,
    "section": "GitLab CI",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- name: doppler",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 318,
    "section": "Using init container",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- name: doppler"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "image: dopplerhq/cli:latest",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 319,
    "section": "Using init container",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Use as template for integration configuration",
    "examples": [
      "image: dopplerhq/cli:latest"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "command: ['sh', '-c', 'doppler secrets download --no-file --format env > /shared/secrets.env']",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 320,
    "section": "Using init container",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "command: ['sh', '-c', 'doppler secrets download --no-file --format env > /shared/secrets.env']"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "command: ['sh', '-c', 'doppler secrets download --no-file --format env > /shared/secrets.env']",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 320,
    "section": "Using init container",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Use as template for integration configuration",
    "examples": [
      "command: ['sh', '-c', 'doppler secrets download --no-file --format env > /shared/secrets.env']"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "- name: DOPPLER_TOKEN",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "accessing-secrets.md",
    "lineNumber": 322,
    "section": "Using init container",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "secretKeyRef:",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 324,
    "section": "Using init container",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Use as template for integration configuration",
    "examples": [
      "secretKeyRef:"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "name: doppler-token",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 325,
    "section": "Using init container",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Use as template for integration configuration",
    "examples": [
      "name: doppler-token"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- name: secrets",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 328,
    "section": "Using init container",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- name: secrets"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "exports.handler = async (event) => {",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "accessing-secrets.md",
    "lineNumber": 337,
    "section": "Using init container",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "exports.handler = async (event) => {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 337,
    "section": "Using init container",
    "subsection": "7. Access Patterns by Use Case",
    "usage": "Use as template for integration configuration",
    "examples": [
      "exports.handler = async (event) => {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "- Development: Environment injection",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 346,
    "section": "Using init container",
    "subsection": "Security Best Practices",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "- Production: Service tokens + mounting",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "accessing-secrets.md",
    "lineNumber": 347,
    "section": "Using init container",
    "subsection": "Security Best Practices",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "- CI/CD: Read-only service tokens",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "accessing-secrets.md",
    "lineNumber": 348,
    "section": "Using init container",
    "subsection": "Security Best Practices",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "cli_service-tokens_create",
    "description": "CLI command: service-tokens create command",
    "pattern": "doppler service-tokens create prod-reader \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 353,
    "section": "Create environment-specific tokens",
    "subsection": "Security Best Practices",
    "usage": "Use doppler service-tokens create for service-tokens operations",
    "examples": [
      "doppler service-tokens create prod-reader \\",
      "doppler service-tokens create --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_service-tokens_create",
    "description": "Doppler CLI command: service-tokens create",
    "pattern": "doppler service-tokens create prod-reader \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 353,
    "section": "Create environment-specific tokens",
    "subsection": "Security Best Practices",
    "usage": "Execute service-tokens operations via CLI",
    "examples": [
      "doppler service-tokens create prod-reader \\"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "--config production",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 355,
    "section": "Create environment-specific tokens",
    "subsection": "Security Best Practices",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_service-tokens_create",
    "description": "CLI command: service-tokens create command",
    "pattern": "doppler service-tokens create dev-full \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 357,
    "section": "Create environment-specific tokens",
    "subsection": "Security Best Practices",
    "usage": "Use doppler service-tokens create for service-tokens operations",
    "examples": [
      "doppler service-tokens create dev-full \\",
      "doppler service-tokens create --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_service-tokens_create",
    "description": "Doppler CLI command: service-tokens create",
    "pattern": "doppler service-tokens create dev-full \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 357,
    "section": "Create environment-specific tokens",
    "subsection": "Security Best Practices",
    "usage": "Execute service-tokens operations via CLI",
    "examples": [
      "doppler service-tokens create dev-full \\"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "--config development",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 359,
    "section": "Create environment-specific tokens",
    "subsection": "Security Best Practices",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "--config development",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 359,
    "section": "Create environment-specific tokens",
    "subsection": "Security Best Practices",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "secret_rotation_strategy",
    "description": "Secret rotation best practices for security and compliance",
    "pattern": "- Rotate tokens regularly",
    "category": "best_practices",
    "type": "security_lifecycle",
    "complexity": "high",
    "safety": "critical",
    "filename": "accessing-secrets.md",
    "lineNumber": 369,
    "section": "Create environment-specific tokens",
    "subsection": "Security Best Practices",
    "usage": "Implement regular secret rotation for security compliance",
    "examples": [
      "Automated rotation via API",
      "Zero-downtime rotation strategies"
    ],
    "recommendations": [
      "Automate rotation where possible",
      "Test rotation procedures"
    ],
    "warnings": [
      "Improper rotation can cause service outages"
    ]
  },
  {
    "name": "cli_configure",
    "description": "CLI command: configure command",
    "pattern": "doppler configure",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 377,
    "section": "Verify configuration",
    "subsection": "Troubleshooting Access Issues",
    "usage": "Use doppler configure for configure operations",
    "examples": [
      "doppler configure",
      "doppler configure --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configure",
    "description": "Doppler CLI command: configure",
    "pattern": "doppler configure",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 377,
    "section": "Verify configuration",
    "subsection": "Troubleshooting Access Issues",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "doppler configure"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_get",
    "description": "CLI command: secrets get command",
    "pattern": "doppler secrets get DOPPLER_PROJECT",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 380,
    "section": "Test secret access",
    "subsection": "Troubleshooting Access Issues",
    "usage": "Use doppler secrets get for secrets operations",
    "examples": [
      "doppler secrets get DOPPLER_PROJECT",
      "doppler secrets get --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "doppler secrets get DOPPLER_PROJECT",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 380,
    "section": "Test secret access",
    "subsection": "Troubleshooting Access Issues",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets get DOPPLER_PROJECT"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "doppler secrets get DOPPLER_PROJECT",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "accessing-secrets.md",
    "lineNumber": 380,
    "section": "Test secret access",
    "subsection": "Troubleshooting Access Issues",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "# Check token permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "accessing-secrets.md",
    "lineNumber": 382,
    "section": "Check token permissions",
    "subsection": "Troubleshooting Access Issues",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "cli_me",
    "description": "CLI command: me command",
    "pattern": "doppler me",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 383,
    "section": "Check token permissions",
    "subsection": "Troubleshooting Access Issues",
    "usage": "Use doppler me for me operations",
    "examples": [
      "doppler me",
      "doppler me --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_me",
    "description": "Doppler CLI command: me",
    "pattern": "doppler me",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 383,
    "section": "Check token permissions",
    "subsection": "Troubleshooting Access Issues",
    "usage": "Execute me operations via CLI",
    "examples": [
      "doppler me"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- Check token permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "accessing-secrets.md",
    "lineNumber": 390,
    "section": "Check token permissions",
    "subsection": "Troubleshooting Access Issues",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- Check mount path permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "accessing-secrets.md",
    "lineNumber": 397,
    "section": "Check token permissions",
    "subsection": "Troubleshooting Access Issues",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "file_accessing_secrets",
    "description": "Comprehensive guide: accessing-secrets.md",
    "pattern": "Documentation file: accessing-secrets.md",
    "category": "best_practices",
    "type": "documentation",
    "complexity": "expert",
    "safety": "safe",
    "filename": "accessing-secrets.md",
    "lineNumber": 1,
    "section": "file_overview",
    "subsection": "",
    "usage": "Reference guide for accessing secrets",
    "examples": [
      "Study accessing-secrets.md for detailed information"
    ],
    "recommendations": [
      "Follow practices outlined in accessing-secrets.md"
    ],
    "warnings": [],
    "topics": [
      "Overview",
      "Access Methods Comparison",
      "1. Environment Variable Injection",
      "2. File Mounting",
      "3. Direct Secret Retrieval",
      "4. Filtering and Transformation",
      "5. API and SDK Access",
      "6. Service Token Authentication",
      "7. Access Patterns by Use Case",
      "Security Best Practices"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "---",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 1,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "---"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "tags: [\"doppler\", \"cli\", \"advanced\", \"restart\", \"automation\", \"process-management\"]",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "tags: [\"doppler\", \"cli\", \"advanced\", \"restart\", \"automation\", \"process-management\"]"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_run_--watch",
    "description": "CLI command: run --watch command",
    "pattern": "doppler run --watch -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 22,
    "section": "Enable automatic restart with --watch flag",
    "subsection": "Automatic Restart",
    "usage": "Use doppler run --watch for run operations",
    "examples": [
      "doppler run --watch -- npm start",
      "doppler run --watch --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--watch",
    "description": "Doppler CLI command: run --watch",
    "pattern": "doppler run --watch -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 22,
    "section": "Enable automatic restart with --watch flag",
    "subsection": "Automatic Restart",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --watch -- npm start"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--watch",
    "description": "CLI command: run --watch command",
    "pattern": "doppler run --watch --restart-delay 5 -- python app.py",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 25,
    "section": "With specific restart delay",
    "subsection": "Automatic Restart",
    "usage": "Use doppler run --watch for run operations",
    "examples": [
      "doppler run --watch --restart-delay 5 -- python app.py",
      "doppler run --watch --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--watch",
    "description": "Doppler CLI command: run --watch",
    "pattern": "doppler run --watch --restart-delay 5 -- python app.py",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 25,
    "section": "With specific restart delay",
    "subsection": "Automatic Restart",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --watch --restart-delay 5 -- python app.py"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--watch",
    "description": "CLI command: run --watch command",
    "pattern": "doppler run --watch -- node server.js 2>&1 | tee app.log",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 42,
    "section": "Production usage with logging",
    "subsection": "Automatic Restart",
    "usage": "Use doppler run --watch for run operations",
    "examples": [
      "doppler run --watch -- node server.js 2>&1 | tee app.log",
      "doppler run --watch --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--watch",
    "description": "Doppler CLI command: run --watch",
    "pattern": "doppler run --watch -- node server.js 2>&1 | tee app.log",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 42,
    "section": "Production usage with logging",
    "subsection": "Automatic Restart",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --watch -- node server.js 2>&1 | tee app.log"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "# Development with nodemon",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 44,
    "section": "Development with nodemon",
    "subsection": "Automatic Restart",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "cli_run_--watch",
    "description": "CLI command: run --watch command",
    "pattern": "doppler run --watch -- nodemon index.js",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 45,
    "section": "Development with nodemon",
    "subsection": "Automatic Restart",
    "usage": "Use doppler run --watch for run operations",
    "examples": [
      "doppler run --watch -- nodemon index.js",
      "doppler run --watch --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--watch",
    "description": "Doppler CLI command: run --watch",
    "pattern": "doppler run --watch -- nodemon index.js",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 45,
    "section": "Development with nodemon",
    "subsection": "Automatic Restart",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --watch -- nodemon index.js"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "- Consider Kubernetes Operator for production use",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "advanced-features.md",
    "lineNumber": 52,
    "section": "Development with nodemon",
    "subsection": "Automatic Restart",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "cli_run_--command",
    "description": "CLI command: run --command command",
    "pattern": "doppler run --command=\"npm run build && npm run test && npm start\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 62,
    "section": "Run commands in sequence",
    "subsection": "Running Multiple Commands",
    "usage": "Use doppler run --command for run operations",
    "examples": [
      "doppler run --command=\"npm run build && npm run test && npm start\"",
      "doppler run --command --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--command",
    "description": "Doppler CLI command: run --command",
    "pattern": "doppler run --command=\"npm run build && npm run test && npm start\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 62,
    "section": "Run commands in sequence",
    "subsection": "Running Multiple Commands",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --command=\"npm run build && npm run test && npm start\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--command",
    "description": "CLI command: run --command command",
    "pattern": "doppler run --command=\"npm test || echo 'Tests failed' && npm start\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 65,
    "section": "With error handling",
    "subsection": "Running Multiple Commands",
    "usage": "Use doppler run --command for run operations",
    "examples": [
      "doppler run --command=\"npm test || echo 'Tests failed' && npm start\"",
      "doppler run --command --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--command",
    "description": "Doppler CLI command: run --command",
    "pattern": "doppler run --command=\"npm test || echo 'Tests failed' && npm start\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 65,
    "section": "With error handling",
    "subsection": "Running Multiple Commands",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --command=\"npm test || echo 'Tests failed' && npm start\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--command",
    "description": "CLI command: run --command command",
    "pattern": "doppler run --command=\"npm run worker & npm run server & wait\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 72,
    "section": "Run background processes",
    "subsection": "Running Multiple Commands",
    "usage": "Use doppler run --command for run operations",
    "examples": [
      "doppler run --command=\"npm run worker & npm run server & wait\"",
      "doppler run --command --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--command",
    "description": "Doppler CLI command: run --command",
    "pattern": "doppler run --command=\"npm run worker & npm run server & wait\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 72,
    "section": "Run background processes",
    "subsection": "Running Multiple Commands",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --command=\"npm run worker & npm run server & wait\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--command",
    "description": "CLI command: run --command command",
    "pattern": "doppler run --command=\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 75,
    "section": "Complex workflows",
    "subsection": "Running Multiple Commands",
    "usage": "Use doppler run --command for run operations",
    "examples": [
      "doppler run --command=\"",
      "doppler run --command --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--command",
    "description": "Doppler CLI command: run --command",
    "pattern": "doppler run --command=\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 75,
    "section": "Complex workflows",
    "subsection": "Running Multiple Commands",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --command=\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--command",
    "description": "CLI command: run --command command",
    "pattern": "doppler run --command='",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 88,
    "section": "Run based on environment",
    "subsection": "Running Multiple Commands",
    "usage": "Use doppler run --command for run operations",
    "examples": [
      "doppler run --command='",
      "doppler run --command --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--command",
    "description": "Doppler CLI command: run --command",
    "pattern": "doppler run --command='",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 88,
    "section": "Run based on environment",
    "subsection": "Running Multiple Commands",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --command='"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_login_--scope",
    "description": "CLI command: login --scope command",
    "pattern": "doppler login --scope .",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 115,
    "section": "Login to specific workplace",
    "subsection": "Managing Multiple Workplaces",
    "usage": "Use doppler login --scope for login operations",
    "examples": [
      "doppler login --scope .",
      "doppler login --scope --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_login_--scope",
    "description": "Doppler CLI command: login --scope",
    "pattern": "doppler login --scope .",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 115,
    "section": "Login to specific workplace",
    "subsection": "Managing Multiple Workplaces",
    "usage": "Execute login operations via CLI",
    "examples": [
      "doppler login --scope ."
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_login_--scope",
    "description": "CLI command: login --scope command",
    "pattern": "doppler login --scope ~/projects/client-a/",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 125,
    "section": "Set scope for specific directory",
    "subsection": "Managing Multiple Workplaces",
    "usage": "Use doppler login --scope for login operations",
    "examples": [
      "doppler login --scope ~/projects/client-a/",
      "doppler login --scope --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_login_--scope",
    "description": "Doppler CLI command: login --scope",
    "pattern": "doppler login --scope ~/projects/client-a/",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 125,
    "section": "Set scope for specific directory",
    "subsection": "Managing Multiple Workplaces",
    "usage": "Execute login operations via CLI",
    "examples": [
      "doppler login --scope ~/projects/client-a/"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--scope",
    "description": "CLI command: run --scope command",
    "pattern": "doppler run --scope ~/projects/client-a/ -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 128,
    "section": "Use scope in commands",
    "subsection": "Managing Multiple Workplaces",
    "usage": "Use doppler run --scope for run operations",
    "examples": [
      "doppler run --scope ~/projects/client-a/ -- npm start",
      "doppler run --scope --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--scope",
    "description": "Doppler CLI command: run --scope",
    "pattern": "doppler run --scope ~/projects/client-a/ -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 128,
    "section": "Use scope in commands",
    "subsection": "Managing Multiple Workplaces",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --scope ~/projects/client-a/ -- npm start"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_configure_--scope",
    "description": "CLI command: configure --scope command",
    "pattern": "doppler configure --scope ~/projects/client-a/",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 131,
    "section": "View scope configuration",
    "subsection": "Managing Multiple Workplaces",
    "usage": "Use doppler configure --scope for configure operations",
    "examples": [
      "doppler configure --scope ~/projects/client-a/",
      "doppler configure --scope --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configure_--scope",
    "description": "Doppler CLI command: configure --scope",
    "pattern": "doppler configure --scope ~/projects/client-a/",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 131,
    "section": "View scope configuration",
    "subsection": "Managing Multiple Workplaces",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "doppler configure --scope ~/projects/client-a/"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "doppler-switch() {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 140,
    "section": "Add to ~/.bashrc or ~/.zshrc",
    "subsection": "Managing Multiple Workplaces",
    "usage": "Use as template for integration configuration",
    "examples": [
      "doppler-switch() {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_SCOPE=\"$scope_dir/$selected\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "advanced-features.md",
    "lineNumber": 145,
    "section": "Add to ~/.bashrc or ~/.zshrc",
    "subsection": "Managing Multiple Workplaces",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 152,
    "section": "Usage",
    "subsection": "Managing Multiple Workplaces",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- npm start",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 152,
    "section": "Usage",
    "subsection": "Managing Multiple Workplaces",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "host: {{.HOST}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 164,
    "section": "config.yaml.tmpl",
    "subsection": "Secret Templates and Injection",
    "usage": "Use as template for integration configuration",
    "examples": [
      "host: {{.HOST}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "port: {{.PORT}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 165,
    "section": "config.yaml.tmpl",
    "subsection": "Secret Templates and Injection",
    "usage": "Use as template for integration configuration",
    "examples": [
      "port: {{.PORT}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "url: {{.DATABASE_URL}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 167,
    "section": "config.yaml.tmpl",
    "subsection": "Secret Templates and Injection",
    "usage": "Use as template for integration configuration",
    "examples": [
      "url: {{.DATABASE_URL}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{if .REDIS_URL}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 168,
    "section": "config.yaml.tmpl",
    "subsection": "Secret Templates and Injection",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{if .REDIS_URL}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "url: {{.REDIS_URL}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 170,
    "section": "config.yaml.tmpl",
    "subsection": "Secret Templates and Injection",
    "usage": "Use as template for integration configuration",
    "examples": [
      "url: {{.REDIS_URL}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{end}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 171,
    "section": "config.yaml.tmpl",
    "subsection": "Secret Templates and Injection",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{end}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_secrets_substitute",
    "description": "CLI command: secrets substitute command",
    "pattern": "doppler secrets substitute config.yaml.tmpl > config.yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 176,
    "section": "Generate config from template",
    "subsection": "Secret Templates and Injection",
    "usage": "Use doppler secrets substitute for secrets operations",
    "examples": [
      "doppler secrets substitute config.yaml.tmpl > config.yaml",
      "doppler secrets substitute --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_substitute",
    "description": "Doppler CLI command: secrets substitute",
    "pattern": "doppler secrets substitute config.yaml.tmpl > config.yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 176,
    "section": "Generate config from template",
    "subsection": "Secret Templates and Injection",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets substitute config.yaml.tmpl > config.yaml"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{/* Parse JSON secret */}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 183,
    "section": "Advanced template with functions",
    "subsection": "Secret Templates and Injection",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{/* Parse JSON secret */}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{with fromjson .SERVICE_ACCOUNT}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 184,
    "section": "Advanced template with functions",
    "subsection": "Secret Templates and Injection",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{with fromjson .SERVICE_ACCOUNT}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "client_id: {{.client_id}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 186,
    "section": "Advanced template with functions",
    "subsection": "Secret Templates and Injection",
    "usage": "Use as template for integration configuration",
    "examples": [
      "client_id: {{.client_id}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "private_key: {{tojson .private_key}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 187,
    "section": "Advanced template with functions",
    "subsection": "Secret Templates and Injection",
    "usage": "Use as template for integration configuration",
    "examples": [
      "private_key: {{tojson .private_key}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{/* Conditional sections */}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 190,
    "section": "Advanced template with functions",
    "subsection": "Secret Templates and Injection",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{/* Conditional sections */}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{if eq .ENVIRONMENT \"production\"}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 191,
    "section": "Advanced template with functions",
    "subsection": "Secret Templates and Injection",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{if eq .ENVIRONMENT \"production\"}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{else}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 195,
    "section": "Advanced template with functions",
    "subsection": "Secret Templates and Injection",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{else}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{/* Range over comma-separated values */}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 201,
    "section": "Advanced template with functions",
    "subsection": "Secret Templates and Injection",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{/* Range over comma-separated values */}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{range $i, $origin := split .ALLOWED_ORIGINS \",\"}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 203,
    "section": "Advanced template with functions",
    "subsection": "Secret Templates and Injection",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{range $i, $origin := split .ALLOWED_ORIGINS \",\"}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- {{trim $origin}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 204,
    "section": "Advanced template with functions",
    "subsection": "Secret Templates and Injection",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- {{trim $origin}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "# Apply to Kubernetes",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "advanced-features.md",
    "lineNumber": 211,
    "section": "Apply to Kubernetes",
    "subsection": "Secret Templates and Injection",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "kubectl apply -f <(doppler secrets substitute k8s-deployment.yaml)",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "advanced-features.md",
    "lineNumber": 212,
    "section": "Apply to Kubernetes",
    "subsection": "Secret Templates and Injection",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "kubectl apply -f <(doppler secrets substitute k8s-deployment.yaml)",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "advanced-features.md",
    "lineNumber": 212,
    "section": "Apply to Kubernetes",
    "subsection": "Secret Templates and Injection",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "command_secrets_substitute",
    "description": "Doppler CLI command: secrets substitute",
    "pattern": "kubectl apply -f <(doppler secrets substitute k8s-deployment.yaml)",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 212,
    "section": "Apply to Kubernetes",
    "subsection": "Secret Templates and Injection",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "kubectl apply -f <(doppler secrets substitute k8s-deployment.yaml)"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_substitute",
    "description": "CLI command: secrets substitute command",
    "pattern": "doppler secrets substitute -c $env template.yaml > config-$env.yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 216,
    "section": "Generate multiple configs",
    "subsection": "Secret Templates and Injection",
    "usage": "Use doppler secrets substitute for secrets operations",
    "examples": [
      "doppler secrets substitute -c $env template.yaml > config-$env.yaml",
      "doppler secrets substitute --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_substitute",
    "description": "Doppler CLI command: secrets substitute",
    "pattern": "doppler secrets substitute -c $env template.yaml > config-$env.yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 216,
    "section": "Generate multiple configs",
    "subsection": "Secret Templates and Injection",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets substitute -c $env template.yaml > config-$env.yaml"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run",
    "description": "CLI command: run command",
    "pattern": "doppler run \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 228,
    "section": "Mount different formats simultaneously",
    "subsection": "File Mounting Options",
    "usage": "Use doppler run for run operations",
    "examples": [
      "doppler run \\",
      "doppler run --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run",
    "description": "Doppler CLI command: run",
    "pattern": "doppler run \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 228,
    "section": "Mount different formats simultaneously",
    "subsection": "File Mounting Options",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run \\"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "### Mount with Permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "advanced-features.md",
    "lineNumber": 245,
    "section": "Mount to specific locations",
    "subsection": "File Mounting Options",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "# Create mounted files with specific permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "advanced-features.md",
    "lineNumber": 248,
    "section": "Create mounted files with specific permissions",
    "subsection": "File Mounting Options",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "cli_run_--forward-signals",
    "description": "CLI command: run --forward-signals command",
    "pattern": "doppler run --forward-signals -- node server.js",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 261,
    "section": "Forward all signals to child process",
    "subsection": "Signal Forwarding",
    "usage": "Use doppler run --forward-signals for run operations",
    "examples": [
      "doppler run --forward-signals -- node server.js",
      "doppler run --forward-signals --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--forward-signals",
    "description": "Doppler CLI command: run --forward-signals",
    "pattern": "doppler run --forward-signals -- node server.js",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 261,
    "section": "Forward all signals to child process",
    "subsection": "Signal Forwarding",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --forward-signals -- node server.js"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--forward-signals",
    "description": "CLI command: run --forward-signals command",
    "pattern": "doppler run --forward-signals SIGTERM,SIGINT -- python app.py",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 264,
    "section": "Specific signal handling",
    "subsection": "Signal Forwarding",
    "usage": "Use doppler run --forward-signals for run operations",
    "examples": [
      "doppler run --forward-signals SIGTERM,SIGINT -- python app.py",
      "doppler run --forward-signals --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--forward-signals",
    "description": "Doppler CLI command: run --forward-signals",
    "pattern": "doppler run --forward-signals SIGTERM,SIGINT -- python app.py",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 264,
    "section": "Specific signal handling",
    "subsection": "Signal Forwarding",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --forward-signals SIGTERM,SIGINT -- python app.py"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_ENABLE_CONNECTION_REUSE=1",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "advanced-features.md",
    "lineNumber": 273,
    "section": "Keep connection alive for multiple runs",
    "subsection": "Performance Optimization",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- ./script1.sh",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 274,
    "section": "Keep connection alive for multiple runs",
    "subsection": "Performance Optimization",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- ./script1.sh",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- ./script1.sh",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 274,
    "section": "Keep connection alive for multiple runs",
    "subsection": "Performance Optimization",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- ./script1.sh"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- ./script2.sh",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 275,
    "section": "Keep connection alive for multiple runs",
    "subsection": "Performance Optimization",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- ./script2.sh",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- ./script2.sh",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 275,
    "section": "Keep connection alive for multiple runs",
    "subsection": "Performance Optimization",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- ./script2.sh"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_ENABLE_CACHE=1",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "advanced-features.md",
    "lineNumber": 282,
    "section": "Enable local caching",
    "subsection": "Performance Optimization",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_CACHE_TTL=300  # 5 minutes",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "advanced-features.md",
    "lineNumber": 283,
    "section": "Enable local caching",
    "subsection": "Performance Optimization",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 292,
    "section": "Set multiple secrets efficiently",
    "subsection": "Performance Optimization",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set \\",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 292,
    "section": "Set multiple secrets efficiently",
    "subsection": "Performance Optimization",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set \\"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_LOG_LEVEL=debug",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "advanced-features.md",
    "lineNumber": 305,
    "section": "Enable debug logging",
    "subsection": "Debugging and Troubleshooting",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_ENABLE_HTTP_TRACE=1",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "advanced-features.md",
    "lineNumber": 309,
    "section": "Trace HTTP requests",
    "subsection": "Debugging and Troubleshooting",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_secrets",
    "description": "CLI command: secrets command",
    "pattern": "doppler secrets",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 310,
    "section": "Trace HTTP requests",
    "subsection": "Debugging and Troubleshooting",
    "usage": "Use doppler secrets for secrets operations",
    "examples": [
      "doppler secrets",
      "doppler secrets --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets",
    "description": "Doppler CLI command: secrets",
    "pattern": "doppler secrets",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 310,
    "section": "Trace HTTP requests",
    "subsection": "Debugging and Troubleshooting",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--dry-run",
    "description": "CLI command: run --dry-run command",
    "pattern": "doppler run --dry-run -- env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 317,
    "section": "Preview what would be injected",
    "subsection": "Debugging and Troubleshooting",
    "usage": "Use doppler run --dry-run for run operations",
    "examples": [
      "doppler run --dry-run -- env",
      "doppler run --dry-run --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--dry-run",
    "description": "Doppler CLI command: run --dry-run",
    "pattern": "doppler run --dry-run -- env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 317,
    "section": "Preview what would be injected",
    "subsection": "Debugging and Troubleshooting",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --dry-run -- env"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_substitute",
    "description": "CLI command: secrets substitute command",
    "pattern": "doppler secrets substitute --dry-run template.yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 320,
    "section": "Test template substitution",
    "subsection": "Debugging and Troubleshooting",
    "usage": "Use doppler secrets substitute for secrets operations",
    "examples": [
      "doppler secrets substitute --dry-run template.yaml",
      "doppler secrets substitute --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_substitute",
    "description": "Doppler CLI command: secrets substitute",
    "pattern": "doppler secrets substitute --dry-run template.yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 320,
    "section": "Test template substitution",
    "subsection": "Debugging and Troubleshooting",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets substitute --dry-run template.yaml"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "FROM doppler/cli:latest AS doppler",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 345,
    "section": "Multi-stage build with Doppler",
    "subsection": "Integration Patterns",
    "usage": "Use as template for integration configuration",
    "examples": [
      "FROM doppler/cli:latest AS doppler"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "github_actions_integration",
    "description": "GitHub Actions workflow integration with Doppler secrets",
    "pattern": "# GitHub Actions example",
    "category": "integration",
    "type": "ci_cd_workflow",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 359,
    "section": "GitHub Actions example",
    "subsection": "Integration Patterns",
    "usage": "Integrate Doppler secrets into GitHub Actions workflows",
    "examples": [
      "uses: dopplerhq/secrets-fetch-action@v1.1.0",
      "with: doppler-token: ${{ secrets.DOPPLER_TOKEN }}"
    ],
    "recommendations": [
      "Use GitHub Actions integration action",
      "Store Doppler token in GitHub Secrets"
    ],
    "warnings": [
      "Never expose Doppler tokens in workflow logs"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "advanced-features.md",
    "lineNumber": 362,
    "section": "GitHub Actions example",
    "subsection": "Integration Patterns",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 362,
    "section": "GitHub Actions example",
    "subsection": "Integration Patterns",
    "usage": "Use as template for integration configuration",
    "examples": [
      "DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "### Local Development",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 371,
    "section": "GitHub Actions example",
    "subsection": "Integration Patterns",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "# Development helper script",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 374,
    "section": "Development helper script",
    "subsection": "Integration Patterns",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "if ! doppler configure get project >/dev/null 2>&1; then",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 379,
    "section": "Ensure Doppler is configured",
    "subsection": "Integration Patterns",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "command_configure_get",
    "description": "Doppler CLI command: configure get",
    "pattern": "if ! doppler configure get project >/dev/null 2>&1; then",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 379,
    "section": "Ensure Doppler is configured",
    "subsection": "Integration Patterns",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "if ! doppler configure get project >/dev/null 2>&1; then"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "doppler setup",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 381,
    "section": "Ensure Doppler is configured",
    "subsection": "Integration Patterns",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "cli_setup",
    "description": "CLI command: setup command",
    "pattern": "doppler setup",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 381,
    "section": "Ensure Doppler is configured",
    "subsection": "Integration Patterns",
    "usage": "Use doppler setup for setup operations",
    "examples": [
      "doppler setup",
      "doppler setup --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_setup",
    "description": "Doppler CLI command: setup",
    "pattern": "doppler setup",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 381,
    "section": "Ensure Doppler is configured",
    "subsection": "Integration Patterns",
    "usage": "Execute setup operations via CLI",
    "examples": [
      "doppler setup"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--watch",
    "description": "CLI command: run --watch command",
    "pattern": "doppler run --watch -- nodemon \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 385,
    "section": "Run with watch mode and auto-restart",
    "subsection": "Integration Patterns",
    "usage": "Use doppler run --watch for run operations",
    "examples": [
      "doppler run --watch -- nodemon \\",
      "doppler run --watch --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--watch",
    "description": "Doppler CLI command: run --watch",
    "pattern": "doppler run --watch -- nodemon \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 385,
    "section": "Run with watch mode and auto-restart",
    "subsection": "Integration Patterns",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --watch -- nodemon \\"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "file_advanced_features",
    "description": "Comprehensive guide: advanced-features.md",
    "pattern": "Documentation file: advanced-features.md",
    "category": "best_practices",
    "type": "documentation",
    "complexity": "expert",
    "safety": "safe",
    "filename": "advanced-features.md",
    "lineNumber": 1,
    "section": "file_overview",
    "subsection": "",
    "usage": "Reference guide for advanced features",
    "examples": [
      "Study advanced-features.md for detailed information"
    ],
    "recommendations": [
      "Follow practices outlined in advanced-features.md"
    ],
    "warnings": [],
    "topics": [
      "Automatic Restart",
      "Running Multiple Commands",
      "Managing Multiple Workplaces",
      "Secret Templates and Injection",
      "File Mounting Options",
      "Signal Forwarding",
      "Performance Optimization",
      "Debugging and Troubleshooting",
      "Integration Patterns"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "---",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 1,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "---"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "tags: [\"doppler\", \"cli\", \"commands\", \"reference\"]",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "tags: [\"doppler\", \"cli\", \"commands\", \"reference\"]"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_login",
    "description": "CLI command: login command",
    "pattern": "doppler login",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 23,
    "section": "Interactive browser login",
    "subsection": "Authentication",
    "usage": "Use doppler login for login operations",
    "examples": [
      "doppler login",
      "doppler login --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_login",
    "description": "Doppler CLI command: login",
    "pattern": "doppler login",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 23,
    "section": "Interactive browser login",
    "subsection": "Authentication",
    "usage": "Execute login operations via CLI",
    "examples": [
      "doppler login"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_login_--scope",
    "description": "CLI command: login --scope command",
    "pattern": "doppler login --scope ~/dev/project",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 26,
    "section": "Login with specific scope",
    "subsection": "Authentication",
    "usage": "Use doppler login --scope for login operations",
    "examples": [
      "doppler login --scope ~/dev/project",
      "doppler login --scope --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_login_--scope",
    "description": "Doppler CLI command: login --scope",
    "pattern": "doppler login --scope ~/dev/project",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 26,
    "section": "Login with specific scope",
    "subsection": "Authentication",
    "usage": "Execute login operations via CLI",
    "examples": [
      "doppler login --scope ~/dev/project"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "doppler login --token dp.st.xxxx",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "cli-commands.md",
    "lineNumber": 29,
    "section": "Login with auth token",
    "subsection": "Authentication",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "cli_login_--token",
    "description": "CLI command: login --token command",
    "pattern": "doppler login --token dp.st.xxxx",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 29,
    "section": "Login with auth token",
    "subsection": "Authentication",
    "usage": "Use doppler login --token for login operations",
    "examples": [
      "doppler login --token dp.st.xxxx",
      "doppler login --token --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_login_--token",
    "description": "Doppler CLI command: login --token",
    "pattern": "doppler login --token dp.st.xxxx",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 29,
    "section": "Login with auth token",
    "subsection": "Authentication",
    "usage": "Execute login operations via CLI",
    "examples": [
      "doppler login --token dp.st.xxxx"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_logout",
    "description": "CLI command: logout command",
    "pattern": "doppler logout",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 35,
    "section": "Logout from current scope",
    "subsection": "Authentication",
    "usage": "Use doppler logout for logout operations",
    "examples": [
      "doppler logout",
      "doppler logout --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_logout",
    "description": "Doppler CLI command: logout",
    "pattern": "doppler logout",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 35,
    "section": "Logout from current scope",
    "subsection": "Authentication",
    "usage": "Execute logout operations via CLI",
    "examples": [
      "doppler logout"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_logout_--all",
    "description": "CLI command: logout --all command",
    "pattern": "doppler logout --all",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 38,
    "section": "Logout from all scopes",
    "subsection": "Authentication",
    "usage": "Use doppler logout --all for logout operations",
    "examples": [
      "doppler logout --all",
      "doppler logout --all --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_logout_--all",
    "description": "Doppler CLI command: logout --all",
    "pattern": "doppler logout --all",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 38,
    "section": "Logout from all scopes",
    "subsection": "Authentication",
    "usage": "Execute logout operations via CLI",
    "examples": [
      "doppler logout --all"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "# Interactive project setup",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 45,
    "section": "Interactive project setup",
    "subsection": "Project Configuration",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "doppler setup",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 46,
    "section": "Interactive project setup",
    "subsection": "Project Configuration",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "cli_setup",
    "description": "CLI command: setup command",
    "pattern": "doppler setup",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 46,
    "section": "Interactive project setup",
    "subsection": "Project Configuration",
    "usage": "Use doppler setup for setup operations",
    "examples": [
      "doppler setup",
      "doppler setup --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_setup",
    "description": "Doppler CLI command: setup",
    "pattern": "doppler setup",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 46,
    "section": "Interactive project setup",
    "subsection": "Project Configuration",
    "usage": "Execute setup operations via CLI",
    "examples": [
      "doppler setup"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "doppler setup --project api-service --config dev",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 49,
    "section": "Non-interactive setup",
    "subsection": "Project Configuration",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler setup --project api-service --config dev",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 49,
    "section": "Non-interactive setup",
    "subsection": "Project Configuration",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_setup_--project",
    "description": "CLI command: setup --project command",
    "pattern": "doppler setup --project api-service --config dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 49,
    "section": "Non-interactive setup",
    "subsection": "Project Configuration",
    "usage": "Use doppler setup --project for setup operations",
    "examples": [
      "doppler setup --project api-service --config dev",
      "doppler setup --project --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_setup_--project",
    "description": "Doppler CLI command: setup --project",
    "pattern": "doppler setup --project api-service --config dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 49,
    "section": "Non-interactive setup",
    "subsection": "Project Configuration",
    "usage": "Execute setup operations via CLI",
    "examples": [
      "doppler setup --project api-service --config dev"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "doppler setup --scope /path/to/project",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 52,
    "section": "Setup with specific directory scope",
    "subsection": "Project Configuration",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "cli_setup_--scope",
    "description": "CLI command: setup --scope command",
    "pattern": "doppler setup --scope /path/to/project",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 52,
    "section": "Setup with specific directory scope",
    "subsection": "Project Configuration",
    "usage": "Use doppler setup --scope for setup operations",
    "examples": [
      "doppler setup --scope /path/to/project",
      "doppler setup --scope --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_setup_--scope",
    "description": "Doppler CLI command: setup --scope",
    "pattern": "doppler setup --scope /path/to/project",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 52,
    "section": "Setup with specific directory scope",
    "subsection": "Project Configuration",
    "usage": "Execute setup operations via CLI",
    "examples": [
      "doppler setup --scope /path/to/project"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_configure",
    "description": "CLI command: configure command",
    "pattern": "doppler configure",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 58,
    "section": "View current configuration",
    "subsection": "Project Configuration",
    "usage": "Use doppler configure for configure operations",
    "examples": [
      "doppler configure",
      "doppler configure --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configure",
    "description": "Doppler CLI command: configure",
    "pattern": "doppler configure",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 58,
    "section": "View current configuration",
    "subsection": "Project Configuration",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "doppler configure"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_configure_set",
    "description": "CLI command: configure set command",
    "pattern": "doppler configure set project api-service",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 61,
    "section": "Set project",
    "subsection": "Project Configuration",
    "usage": "Use doppler configure set for configure operations",
    "examples": [
      "doppler configure set project api-service",
      "doppler configure set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configure_set",
    "description": "Doppler CLI command: configure set",
    "pattern": "doppler configure set project api-service",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 61,
    "section": "Set project",
    "subsection": "Project Configuration",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "doppler configure set project api-service"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler configure set config dev",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 64,
    "section": "Set config",
    "subsection": "Project Configuration",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_configure_set",
    "description": "CLI command: configure set command",
    "pattern": "doppler configure set config dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 64,
    "section": "Set config",
    "subsection": "Project Configuration",
    "usage": "Use doppler configure set for configure operations",
    "examples": [
      "doppler configure set config dev",
      "doppler configure set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configure_set",
    "description": "Doppler CLI command: configure set",
    "pattern": "doppler configure set config dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 64,
    "section": "Set config",
    "subsection": "Project Configuration",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "doppler configure set config dev"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_configure_--scope",
    "description": "CLI command: configure --scope command",
    "pattern": "doppler configure --scope $(pwd)",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 67,
    "section": "View specific scope configuration",
    "subsection": "Project Configuration",
    "usage": "Use doppler configure --scope for configure operations",
    "examples": [
      "doppler configure --scope $(pwd)",
      "doppler configure --scope --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configure_--scope",
    "description": "Doppler CLI command: configure --scope",
    "pattern": "doppler configure --scope $(pwd)",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 67,
    "section": "View specific scope configuration",
    "subsection": "Project Configuration",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "doppler configure --scope $(pwd)"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_configure_reset",
    "description": "CLI command: configure reset command",
    "pattern": "doppler configure reset",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 70,
    "section": "Reset configuration",
    "subsection": "Project Configuration",
    "usage": "Use doppler configure reset for configure operations",
    "examples": [
      "doppler configure reset",
      "doppler configure reset --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configure_reset",
    "description": "Doppler CLI command: configure reset",
    "pattern": "doppler configure reset",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 70,
    "section": "Reset configuration",
    "subsection": "Project Configuration",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "doppler configure reset"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets",
    "description": "CLI command: secrets command",
    "pattern": "doppler secrets",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 79,
    "section": "List all secrets",
    "subsection": "Secrets Management",
    "usage": "Use doppler secrets for secrets operations",
    "examples": [
      "doppler secrets",
      "doppler secrets --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets",
    "description": "Doppler CLI command: secrets",
    "pattern": "doppler secrets",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 79,
    "section": "List all secrets",
    "subsection": "Secrets Management",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_get",
    "description": "CLI command: secrets get command",
    "pattern": "doppler secrets get API_KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 82,
    "section": "Get specific secret value",
    "subsection": "Secrets Management",
    "usage": "Use doppler secrets get for secrets operations",
    "examples": [
      "doppler secrets get API_KEY",
      "doppler secrets get --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "doppler secrets get API_KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 82,
    "section": "Get specific secret value",
    "subsection": "Secrets Management",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets get API_KEY"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_get",
    "description": "CLI command: secrets get command",
    "pattern": "doppler secrets get DATABASE_URL --plain",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 85,
    "section": "Get secret in plain text",
    "subsection": "Secrets Management",
    "usage": "Use doppler secrets get for secrets operations",
    "examples": [
      "doppler secrets get DATABASE_URL --plain",
      "doppler secrets get --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "doppler secrets get DATABASE_URL --plain",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 85,
    "section": "Get secret in plain text",
    "subsection": "Secrets Management",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets get DATABASE_URL --plain"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_get",
    "description": "CLI command: secrets get command",
    "pattern": "doppler secrets get API_KEY DATABASE_URL --json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 88,
    "section": "Get multiple secrets",
    "subsection": "Secrets Management",
    "usage": "Use doppler secrets get for secrets operations",
    "examples": [
      "doppler secrets get API_KEY DATABASE_URL --json",
      "doppler secrets get --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "doppler secrets get API_KEY DATABASE_URL --json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 88,
    "section": "Get multiple secrets",
    "subsection": "Secrets Management",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets get API_KEY DATABASE_URL --json"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 91,
    "section": "Download secrets in different formats",
    "subsection": "Secrets Management",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format env",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 91,
    "section": "Download secrets in different formats",
    "subsection": "Secrets Management",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format env"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 92,
    "section": "Download secrets in different formats",
    "subsection": "Secrets Management",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format json",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 92,
    "section": "Download secrets in different formats",
    "subsection": "Secrets Management",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format json"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 93,
    "section": "Download secrets in different formats",
    "subsection": "Secrets Management",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format yaml",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 93,
    "section": "Download secrets in different formats",
    "subsection": "Secrets Management",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format yaml"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set API_KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 100,
    "section": "Interactive mode (recommended for sensitive values)",
    "subsection": "Secrets Management",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set API_KEY",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set API_KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 100,
    "section": "Interactive mode (recommended for sensitive values)",
    "subsection": "Secrets Management",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set API_KEY"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set PORT=\"3000\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 103,
    "section": "Direct setting",
    "subsection": "Secrets Management",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set PORT=\"3000\"",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set PORT=\"3000\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 103,
    "section": "Direct setting",
    "subsection": "Secrets Management",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set PORT=\"3000\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set NODE_ENV=\"production\" DEBUG=\"false\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 106,
    "section": "Multiple secrets",
    "subsection": "Secrets Management",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set NODE_ENV=\"production\" DEBUG=\"false\"",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set NODE_ENV=\"production\" DEBUG=\"false\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 106,
    "section": "Multiple secrets",
    "subsection": "Secrets Management",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set NODE_ENV=\"production\" DEBUG=\"false\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "echo \"my-secret-value\" | doppler secrets set SECRET_KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 109,
    "section": "From stdin",
    "subsection": "Secrets Management",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "echo \"my-secret-value\" | doppler secrets set SECRET_KEY"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "cat certificate.pem | doppler secrets set TLS_CERT",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 112,
    "section": "From file",
    "subsection": "Secrets Management",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "cat certificate.pem | doppler secrets set TLS_CERT"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set API_KEY --visibility masked",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 115,
    "section": "With visibility",
    "subsection": "Secrets Management",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set API_KEY --visibility masked",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set API_KEY --visibility masked",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 115,
    "section": "With visibility",
    "subsection": "Secrets Management",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set API_KEY --visibility masked"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_delete",
    "description": "CLI command: secrets delete command",
    "pattern": "doppler secrets delete API_KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 122,
    "section": "Delete single secret",
    "subsection": "Secrets Management",
    "usage": "Use doppler secrets delete for secrets operations",
    "examples": [
      "doppler secrets delete API_KEY",
      "doppler secrets delete --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": [
      "Deletion is irreversible"
    ]
  },
  {
    "name": "command_secrets_delete",
    "description": "Doppler CLI command: secrets delete",
    "pattern": "doppler secrets delete API_KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 122,
    "section": "Delete single secret",
    "subsection": "Secrets Management",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets delete API_KEY"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_delete",
    "description": "CLI command: secrets delete command",
    "pattern": "doppler secrets delete API_KEY DATABASE_URL",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 125,
    "section": "Delete multiple secrets",
    "subsection": "Secrets Management",
    "usage": "Use doppler secrets delete for secrets operations",
    "examples": [
      "doppler secrets delete API_KEY DATABASE_URL",
      "doppler secrets delete --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": [
      "Deletion is irreversible"
    ]
  },
  {
    "name": "command_secrets_delete",
    "description": "Doppler CLI command: secrets delete",
    "pattern": "doppler secrets delete API_KEY DATABASE_URL",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 125,
    "section": "Delete multiple secrets",
    "subsection": "Secrets Management",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets delete API_KEY DATABASE_URL"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_delete",
    "description": "CLI command: secrets delete command",
    "pattern": "doppler secrets delete API_KEY --yes",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 128,
    "section": "Delete with confirmation",
    "subsection": "Secrets Management",
    "usage": "Use doppler secrets delete for secrets operations",
    "examples": [
      "doppler secrets delete API_KEY --yes",
      "doppler secrets delete --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": [
      "Deletion is irreversible"
    ]
  },
  {
    "name": "command_secrets_delete",
    "description": "Doppler CLI command: secrets delete",
    "pattern": "doppler secrets delete API_KEY --yes",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 128,
    "section": "Delete with confirmation",
    "subsection": "Secrets Management",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets delete API_KEY --yes"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_upload",
    "description": "CLI command: secrets upload command",
    "pattern": "doppler secrets upload .env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 135,
    "section": "Upload from .env file",
    "subsection": "Secrets Management",
    "usage": "Use doppler secrets upload for secrets operations",
    "examples": [
      "doppler secrets upload .env",
      "doppler secrets upload --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_upload",
    "description": "Doppler CLI command: secrets upload",
    "pattern": "doppler secrets upload .env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 135,
    "section": "Upload from .env file",
    "subsection": "Secrets Management",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets upload .env"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_upload",
    "description": "CLI command: secrets upload command",
    "pattern": "doppler secrets upload secrets.json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 138,
    "section": "Upload from JSON",
    "subsection": "Secrets Management",
    "usage": "Use doppler secrets upload for secrets operations",
    "examples": [
      "doppler secrets upload secrets.json",
      "doppler secrets upload --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_upload",
    "description": "Doppler CLI command: secrets upload",
    "pattern": "doppler secrets upload secrets.json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 138,
    "section": "Upload from JSON",
    "subsection": "Secrets Management",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets upload secrets.json"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_upload",
    "description": "CLI command: secrets upload command",
    "pattern": "doppler secrets upload config.yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 141,
    "section": "Upload from YAML",
    "subsection": "Secrets Management",
    "usage": "Use doppler secrets upload for secrets operations",
    "examples": [
      "doppler secrets upload config.yaml",
      "doppler secrets upload --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_upload",
    "description": "Doppler CLI command: secrets upload",
    "pattern": "doppler secrets upload config.yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 141,
    "section": "Upload from YAML",
    "subsection": "Secrets Management",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets upload config.yaml"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 149,
    "section": "Run with injected environment variables",
    "subsection": "Running Applications",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- npm start",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 149,
    "section": "Run with injected environment variables",
    "subsection": "Running Applications",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_-p",
    "description": "CLI command: run -p command",
    "pattern": "doppler run -p api-service -c production -- python app.py",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 152,
    "section": "Run with specific project/config",
    "subsection": "Running Applications",
    "usage": "Use doppler run -p for run operations",
    "examples": [
      "doppler run -p api-service -c production -- python app.py",
      "doppler run -p --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_-p",
    "description": "Doppler CLI command: run -p",
    "pattern": "doppler run -p api-service -c production -- python app.py",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 152,
    "section": "Run with specific project/config",
    "subsection": "Running Applications",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -p api-service -c production -- python app.py"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--mount",
    "description": "CLI command: run --mount command",
    "pattern": "doppler run --mount .env -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 158,
    "section": "Mount secrets as file",
    "subsection": "Running Applications",
    "usage": "Use doppler run --mount for run operations",
    "examples": [
      "doppler run --mount .env -- npm start",
      "doppler run --mount --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--mount",
    "description": "Doppler CLI command: run --mount",
    "pattern": "doppler run --mount .env -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 158,
    "section": "Mount secrets as file",
    "subsection": "Running Applications",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --mount .env -- npm start"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--mount",
    "description": "CLI command: run --mount command",
    "pattern": "doppler run --mount secrets.json -- python app.py",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 159,
    "section": "Mount secrets as file",
    "subsection": "Running Applications",
    "usage": "Use doppler run --mount for run operations",
    "examples": [
      "doppler run --mount secrets.json -- python app.py",
      "doppler run --mount --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--mount",
    "description": "Doppler CLI command: run --mount",
    "pattern": "doppler run --mount secrets.json -- python app.py",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 159,
    "section": "Mount secrets as file",
    "subsection": "Running Applications",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --mount secrets.json -- python app.py"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--watch",
    "description": "CLI command: run --watch command",
    "pattern": "doppler run --watch -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 162,
    "section": "Watch for changes and auto-restart",
    "subsection": "Running Applications",
    "usage": "Use doppler run --watch for run operations",
    "examples": [
      "doppler run --watch -- npm start",
      "doppler run --watch --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--watch",
    "description": "Doppler CLI command: run --watch",
    "pattern": "doppler run --watch -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 162,
    "section": "Watch for changes and auto-restart",
    "subsection": "Running Applications",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --watch -- npm start"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--command",
    "description": "CLI command: run --command command",
    "pattern": "doppler run --command=\"npm run build && npm start\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 165,
    "section": "Run multiple commands",
    "subsection": "Running Applications",
    "usage": "Use doppler run --command for run operations",
    "examples": [
      "doppler run --command=\"npm run build && npm start\"",
      "doppler run --command --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--command",
    "description": "Doppler CLI command: run --command",
    "pattern": "doppler run --command=\"npm run build && npm start\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 165,
    "section": "Run multiple commands",
    "subsection": "Running Applications",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --command=\"npm run build && npm start\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--fallback",
    "description": "CLI command: run --fallback command",
    "pattern": "doppler run --fallback .env.backup -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 168,
    "section": "Custom fallback file",
    "subsection": "Running Applications",
    "usage": "Use doppler run --fallback for run operations",
    "examples": [
      "doppler run --fallback .env.backup -- npm start",
      "doppler run --fallback --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--fallback",
    "description": "Doppler CLI command: run --fallback",
    "pattern": "doppler run --fallback .env.backup -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 168,
    "section": "Custom fallback file",
    "subsection": "Running Applications",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --fallback .env.backup -- npm start"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--forward-signals",
    "description": "CLI command: run --forward-signals command",
    "pattern": "doppler run --forward-signals -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 171,
    "section": "Forward signals",
    "subsection": "Running Applications",
    "usage": "Use doppler run --forward-signals for run operations",
    "examples": [
      "doppler run --forward-signals -- npm start",
      "doppler run --forward-signals --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--forward-signals",
    "description": "Doppler CLI command: run --forward-signals",
    "pattern": "doppler run --forward-signals -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 171,
    "section": "Forward signals",
    "subsection": "Running Applications",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --forward-signals -- npm start"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_environments",
    "description": "CLI command: environments command",
    "pattern": "doppler environments",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 179,
    "section": "List all environments in current project",
    "subsection": "Environment Management",
    "usage": "Use doppler environments for environments operations",
    "examples": [
      "doppler environments",
      "doppler environments --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_environments",
    "description": "Doppler CLI command: environments",
    "pattern": "doppler environments",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 179,
    "section": "List all environments in current project",
    "subsection": "Environment Management",
    "usage": "Execute environments operations via CLI",
    "examples": [
      "doppler environments"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_environments_--project",
    "description": "CLI command: environments --project command",
    "pattern": "doppler environments --project api-service",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 182,
    "section": "List with specific project",
    "subsection": "Environment Management",
    "usage": "Use doppler environments --project for environments operations",
    "examples": [
      "doppler environments --project api-service",
      "doppler environments --project --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_environments_--project",
    "description": "Doppler CLI command: environments --project",
    "pattern": "doppler environments --project api-service",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 182,
    "section": "List with specific project",
    "subsection": "Environment Management",
    "usage": "Execute environments operations via CLI",
    "examples": [
      "doppler environments --project api-service"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_environments_create",
    "description": "CLI command: environments create command",
    "pattern": "doppler environments create qa",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 188,
    "section": "Create new environment",
    "subsection": "Environment Management",
    "usage": "Use doppler environments create for environments operations",
    "examples": [
      "doppler environments create qa",
      "doppler environments create --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_environments_create",
    "description": "Doppler CLI command: environments create",
    "pattern": "doppler environments create qa",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 188,
    "section": "Create new environment",
    "subsection": "Environment Management",
    "usage": "Execute environments operations via CLI",
    "examples": [
      "doppler environments create qa"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_promotion_strategy",
    "description": "Best practices for promoting secrets between environments",
    "pattern": "doppler environments create staging --defaults",
    "category": "best_practices",
    "type": "environment_management",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 191,
    "section": "Create with specific settings",
    "subsection": "Environment Management",
    "usage": "Systematically promote secrets from development to production",
    "examples": [
      "doppler secrets download --no-file -c dev | doppler secrets upload -c staging",
      "Exclude environment-specific secrets like DATABASE_URL"
    ],
    "recommendations": [
      "Test in staging before production",
      "Exclude environment-specific secrets"
    ],
    "warnings": [
      "Always validate promoted secrets before deployment"
    ]
  },
  {
    "name": "cli_environments_create",
    "description": "CLI command: environments create command",
    "pattern": "doppler environments create staging --defaults",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 191,
    "section": "Create with specific settings",
    "subsection": "Environment Management",
    "usage": "Use doppler environments create for environments operations",
    "examples": [
      "doppler environments create staging --defaults",
      "doppler environments create --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_environments_create",
    "description": "Doppler CLI command: environments create",
    "pattern": "doppler environments create staging --defaults",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 191,
    "section": "Create with specific settings",
    "subsection": "Environment Management",
    "usage": "Execute environments operations via CLI",
    "examples": [
      "doppler environments create staging --defaults"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "## Service Tokens",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "cli-commands.md",
    "lineNumber": 194,
    "section": "Create with specific settings",
    "subsection": "Service Tokens",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "# Create service token for current config",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "cli-commands.md",
    "lineNumber": 198,
    "section": "Create service token for current config",
    "subsection": "Service Tokens",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "cli_service-tokens_create",
    "description": "CLI command: service-tokens create command",
    "pattern": "doppler service-tokens create ci-token",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 199,
    "section": "Create service token for current config",
    "subsection": "Service Tokens",
    "usage": "Use doppler service-tokens create for service-tokens operations",
    "examples": [
      "doppler service-tokens create ci-token",
      "doppler service-tokens create --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_service-tokens_create",
    "description": "Doppler CLI command: service-tokens create",
    "pattern": "doppler service-tokens create ci-token",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 199,
    "section": "Create service token for current config",
    "subsection": "Service Tokens",
    "usage": "Execute service-tokens operations via CLI",
    "examples": [
      "doppler service-tokens create ci-token"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_service-tokens_create",
    "description": "CLI command: service-tokens create command",
    "pattern": "doppler service-tokens create prod-readonly --access read",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 202,
    "section": "Create with specific access",
    "subsection": "Service Tokens",
    "usage": "Use doppler service-tokens create for service-tokens operations",
    "examples": [
      "doppler service-tokens create prod-readonly --access read",
      "doppler service-tokens create --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_service-tokens_create",
    "description": "Doppler CLI command: service-tokens create",
    "pattern": "doppler service-tokens create prod-readonly --access read",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 202,
    "section": "Create with specific access",
    "subsection": "Service Tokens",
    "usage": "Execute service-tokens operations via CLI",
    "examples": [
      "doppler service-tokens create prod-readonly --access read"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_service-tokens_create",
    "description": "CLI command: service-tokens create command",
    "pattern": "doppler service-tokens create temp-token --expires-at \"2024-12-31\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 205,
    "section": "Create with expiration",
    "subsection": "Service Tokens",
    "usage": "Use doppler service-tokens create for service-tokens operations",
    "examples": [
      "doppler service-tokens create temp-token --expires-at \"2024-12-31\"",
      "doppler service-tokens create --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_service-tokens_create",
    "description": "Doppler CLI command: service-tokens create",
    "pattern": "doppler service-tokens create temp-token --expires-at \"2024-12-31\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 205,
    "section": "Create with expiration",
    "subsection": "Service Tokens",
    "usage": "Execute service-tokens operations via CLI",
    "examples": [
      "doppler service-tokens create temp-token --expires-at \"2024-12-31\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_service-tokens",
    "description": "CLI command: service-tokens command",
    "pattern": "doppler service-tokens",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 211,
    "section": "List all tokens",
    "subsection": "Service Tokens",
    "usage": "Use doppler service-tokens for service-tokens operations",
    "examples": [
      "doppler service-tokens",
      "doppler service-tokens --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_service-tokens",
    "description": "Doppler CLI command: service-tokens",
    "pattern": "doppler service-tokens",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 211,
    "section": "List all tokens",
    "subsection": "Service Tokens",
    "usage": "Execute service-tokens operations via CLI",
    "examples": [
      "doppler service-tokens"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_service-tokens_--json",
    "description": "CLI command: service-tokens --json command",
    "pattern": "doppler service-tokens --json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 214,
    "section": "List with details",
    "subsection": "Service Tokens",
    "usage": "Use doppler service-tokens --json for service-tokens operations",
    "examples": [
      "doppler service-tokens --json",
      "doppler service-tokens --json --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_service-tokens_--json",
    "description": "Doppler CLI command: service-tokens --json",
    "pattern": "doppler service-tokens --json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 214,
    "section": "List with details",
    "subsection": "Service Tokens",
    "usage": "Execute service-tokens operations via CLI",
    "examples": [
      "doppler service-tokens --json"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "doppler service-tokens revoke dp.st.xxxx",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "cli-commands.md",
    "lineNumber": 220,
    "section": "Revoke specific token",
    "subsection": "Service Tokens",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "cli_service-tokens_revoke",
    "description": "CLI command: service-tokens revoke command",
    "pattern": "doppler service-tokens revoke dp.st.xxxx",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 220,
    "section": "Revoke specific token",
    "subsection": "Service Tokens",
    "usage": "Use doppler service-tokens revoke for service-tokens operations",
    "examples": [
      "doppler service-tokens revoke dp.st.xxxx",
      "doppler service-tokens revoke --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_service-tokens_revoke",
    "description": "Doppler CLI command: service-tokens revoke",
    "pattern": "doppler service-tokens revoke dp.st.xxxx",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 220,
    "section": "Revoke specific token",
    "subsection": "Service Tokens",
    "usage": "Execute service-tokens operations via CLI",
    "examples": [
      "doppler service-tokens revoke dp.st.xxxx"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "## Activity Logs",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 223,
    "section": "Revoke specific token",
    "subsection": "Activity Logs",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "cli_activity",
    "description": "CLI command: activity command",
    "pattern": "doppler activity",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 227,
    "section": "View recent activity",
    "subsection": "Activity Logs",
    "usage": "Use doppler activity for activity operations",
    "examples": [
      "doppler activity",
      "doppler activity --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_activity",
    "description": "Doppler CLI command: activity",
    "pattern": "doppler activity",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 227,
    "section": "View recent activity",
    "subsection": "Activity Logs",
    "usage": "Execute activity operations via CLI",
    "examples": [
      "doppler activity"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler activity --config production",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 230,
    "section": "View activity for specific config",
    "subsection": "Activity Logs",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_activity_--config",
    "description": "CLI command: activity --config command",
    "pattern": "doppler activity --config production",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 230,
    "section": "View activity for specific config",
    "subsection": "Activity Logs",
    "usage": "Use doppler activity --config for activity operations",
    "examples": [
      "doppler activity --config production",
      "doppler activity --config --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_activity_--config",
    "description": "Doppler CLI command: activity --config",
    "pattern": "doppler activity --config production",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 230,
    "section": "View activity for specific config",
    "subsection": "Activity Logs",
    "usage": "Execute activity operations via CLI",
    "examples": [
      "doppler activity --config production"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_activity_--user",
    "description": "CLI command: activity --user command",
    "pattern": "doppler activity --user [email protected]",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 233,
    "section": "Filter by user",
    "subsection": "Activity Logs",
    "usage": "Use doppler activity --user for activity operations",
    "examples": [
      "doppler activity --user [email protected]",
      "doppler activity --user --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_activity_--user",
    "description": "Doppler CLI command: activity --user",
    "pattern": "doppler activity --user [email protected]",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 233,
    "section": "Filter by user",
    "subsection": "Activity Logs",
    "usage": "Execute activity operations via CLI",
    "examples": [
      "doppler activity --user [email protected]"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "# Export as JSON",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "cli-commands.md",
    "lineNumber": 235,
    "section": "Export as JSON",
    "subsection": "Activity Logs",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_activity_--json",
    "description": "CLI command: activity --json command",
    "pattern": "doppler activity --json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 236,
    "section": "Export as JSON",
    "subsection": "Activity Logs",
    "usage": "Use doppler activity --json for activity operations",
    "examples": [
      "doppler activity --json",
      "doppler activity --json --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_activity_--json",
    "description": "Doppler CLI command: activity --json",
    "pattern": "doppler activity --json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 236,
    "section": "Export as JSON",
    "subsection": "Activity Logs",
    "usage": "Execute activity operations via CLI",
    "examples": [
      "doppler activity --json"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_configs",
    "description": "CLI command: configs command",
    "pattern": "doppler configs",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 244,
    "section": "List all configs",
    "subsection": "Config Management",
    "usage": "Use doppler configs for configs operations",
    "examples": [
      "doppler configs",
      "doppler configs --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configs",
    "description": "Doppler CLI command: configs",
    "pattern": "doppler configs",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 244,
    "section": "List all configs",
    "subsection": "Config Management",
    "usage": "Execute configs operations via CLI",
    "examples": [
      "doppler configs"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler configs --environment production",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 247,
    "section": "List for specific environment",
    "subsection": "Config Management",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_configs_--environment",
    "description": "CLI command: configs --environment command",
    "pattern": "doppler configs --environment production",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 247,
    "section": "List for specific environment",
    "subsection": "Config Management",
    "usage": "Use doppler configs --environment for configs operations",
    "examples": [
      "doppler configs --environment production",
      "doppler configs --environment --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configs_--environment",
    "description": "Doppler CLI command: configs --environment",
    "pattern": "doppler configs --environment production",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 247,
    "section": "List for specific environment",
    "subsection": "Config Management",
    "usage": "Execute configs operations via CLI",
    "examples": [
      "doppler configs --environment production"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler configs create feature-branch --environment dev",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 253,
    "section": "Create branch config",
    "subsection": "Config Management",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_configs_create",
    "description": "CLI command: configs create command",
    "pattern": "doppler configs create feature-branch --environment dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 253,
    "section": "Create branch config",
    "subsection": "Config Management",
    "usage": "Use doppler configs create for configs operations",
    "examples": [
      "doppler configs create feature-branch --environment dev",
      "doppler configs create --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configs_create",
    "description": "Doppler CLI command: configs create",
    "pattern": "doppler configs create feature-branch --environment dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 253,
    "section": "Create branch config",
    "subsection": "Config Management",
    "usage": "Execute configs operations via CLI",
    "examples": [
      "doppler configs create feature-branch --environment dev"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_configs_update",
    "description": "CLI command: configs update command",
    "pattern": "doppler configs update feature-branch --name new-feature",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 259,
    "section": "Rename config",
    "subsection": "Config Management",
    "usage": "Use doppler configs update for configs operations",
    "examples": [
      "doppler configs update feature-branch --name new-feature",
      "doppler configs update --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configs_update",
    "description": "Doppler CLI command: configs update",
    "pattern": "doppler configs update feature-branch --name new-feature",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 259,
    "section": "Rename config",
    "subsection": "Config Management",
    "usage": "Execute configs operations via CLI",
    "examples": [
      "doppler configs update feature-branch --name new-feature"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler configs lock production",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 262,
    "section": "Lock config",
    "subsection": "Config Management",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_configs_lock",
    "description": "CLI command: configs lock command",
    "pattern": "doppler configs lock production",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 262,
    "section": "Lock config",
    "subsection": "Config Management",
    "usage": "Use doppler configs lock for configs operations",
    "examples": [
      "doppler configs lock production",
      "doppler configs lock --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configs_lock",
    "description": "Doppler CLI command: configs lock",
    "pattern": "doppler configs lock production",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 262,
    "section": "Lock config",
    "subsection": "Config Management",
    "usage": "Execute configs operations via CLI",
    "examples": [
      "doppler configs lock production"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_workplaces",
    "description": "CLI command: workplaces command",
    "pattern": "doppler workplaces",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 270,
    "section": "List workplaces",
    "subsection": "Workplace Management",
    "usage": "Use doppler workplaces for workplaces operations",
    "examples": [
      "doppler workplaces",
      "doppler workplaces --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_workplaces",
    "description": "Doppler CLI command: workplaces",
    "pattern": "doppler workplaces",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 270,
    "section": "List workplaces",
    "subsection": "Workplace Management",
    "usage": "Execute workplaces operations via CLI",
    "examples": [
      "doppler workplaces"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_workplaces_select",
    "description": "CLI command: workplaces select command",
    "pattern": "doppler workplaces select",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 273,
    "section": "Switch workplace",
    "subsection": "Workplace Management",
    "usage": "Use doppler workplaces select for workplaces operations",
    "examples": [
      "doppler workplaces select",
      "doppler workplaces select --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_workplaces_select",
    "description": "Doppler CLI command: workplaces select",
    "pattern": "doppler workplaces select",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 273,
    "section": "Switch workplace",
    "subsection": "Workplace Management",
    "usage": "Execute workplaces operations via CLI",
    "examples": [
      "doppler workplaces select"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_configure_set",
    "description": "CLI command: configure set command",
    "pattern": "doppler configure set workplace my-workplace",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 276,
    "section": "Set default workplace",
    "subsection": "Workplace Management",
    "usage": "Use doppler configure set for configure operations",
    "examples": [
      "doppler configure set workplace my-workplace",
      "doppler configure set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configure_set",
    "description": "Doppler CLI command: configure set",
    "pattern": "doppler configure set workplace my-workplace",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 276,
    "section": "Set default workplace",
    "subsection": "Workplace Management",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "doppler configure set workplace my-workplace"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_--version",
    "description": "CLI command: --version command",
    "pattern": "doppler --version",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 284,
    "section": "Check version",
    "subsection": "Utility Commands",
    "usage": "Use doppler --version for --version operations",
    "examples": [
      "doppler --version",
      "doppler --version --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_--version",
    "description": "Doppler CLI command: --version",
    "pattern": "doppler --version",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 284,
    "section": "Check version",
    "subsection": "Utility Commands",
    "usage": "Execute --version operations via CLI",
    "examples": [
      "doppler --version"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_update_check",
    "description": "CLI command: update check command",
    "pattern": "doppler update check",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 287,
    "section": "Check for updates",
    "subsection": "Utility Commands",
    "usage": "Use doppler update check for update operations",
    "examples": [
      "doppler update check",
      "doppler update check --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_update_check",
    "description": "Doppler CLI command: update check",
    "pattern": "doppler update check",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 287,
    "section": "Check for updates",
    "subsection": "Utility Commands",
    "usage": "Execute update operations via CLI",
    "examples": [
      "doppler update check"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_update",
    "description": "CLI command: update command",
    "pattern": "doppler update",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 290,
    "section": "Update CLI",
    "subsection": "Utility Commands",
    "usage": "Use doppler update for update operations",
    "examples": [
      "doppler update",
      "doppler update --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_update",
    "description": "Doppler CLI command: update",
    "pattern": "doppler update",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 290,
    "section": "Update CLI",
    "subsection": "Utility Commands",
    "usage": "Execute update operations via CLI",
    "examples": [
      "doppler update"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_completion_bash",
    "description": "CLI command: completion bash command",
    "pattern": "doppler completion bash",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 296,
    "section": "Generate completion script",
    "subsection": "Utility Commands",
    "usage": "Use doppler completion bash for completion operations",
    "examples": [
      "doppler completion bash",
      "doppler completion bash --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_completion_bash",
    "description": "Doppler CLI command: completion bash",
    "pattern": "doppler completion bash",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 296,
    "section": "Generate completion script",
    "subsection": "Utility Commands",
    "usage": "Execute completion operations via CLI",
    "examples": [
      "doppler completion bash"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_completion_zsh",
    "description": "CLI command: completion zsh command",
    "pattern": "doppler completion zsh",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 297,
    "section": "Generate completion script",
    "subsection": "Utility Commands",
    "usage": "Use doppler completion zsh for completion operations",
    "examples": [
      "doppler completion zsh",
      "doppler completion zsh --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_completion_zsh",
    "description": "Doppler CLI command: completion zsh",
    "pattern": "doppler completion zsh",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 297,
    "section": "Generate completion script",
    "subsection": "Utility Commands",
    "usage": "Execute completion operations via CLI",
    "examples": [
      "doppler completion zsh"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_completion_fish",
    "description": "CLI command: completion fish command",
    "pattern": "doppler completion fish",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 298,
    "section": "Generate completion script",
    "subsection": "Utility Commands",
    "usage": "Use doppler completion fish for completion operations",
    "examples": [
      "doppler completion fish",
      "doppler completion fish --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_completion_fish",
    "description": "Doppler CLI command: completion fish",
    "pattern": "doppler completion fish",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 298,
    "section": "Generate completion script",
    "subsection": "Utility Commands",
    "usage": "Execute completion operations via CLI",
    "examples": [
      "doppler completion fish"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_--help",
    "description": "CLI command: --help command",
    "pattern": "doppler --help",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 304,
    "section": "General help",
    "subsection": "Utility Commands",
    "usage": "Use doppler --help for --help operations",
    "examples": [
      "doppler --help",
      "doppler --help --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_--help",
    "description": "Doppler CLI command: --help",
    "pattern": "doppler --help",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 304,
    "section": "General help",
    "subsection": "Utility Commands",
    "usage": "Execute --help operations via CLI",
    "examples": [
      "doppler --help"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_--help",
    "description": "CLI command: secrets --help command",
    "pattern": "doppler secrets --help",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 307,
    "section": "Command-specific help",
    "subsection": "Utility Commands",
    "usage": "Use doppler secrets --help for secrets operations",
    "examples": [
      "doppler secrets --help",
      "doppler secrets --help --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_--help",
    "description": "Doppler CLI command: secrets --help",
    "pattern": "doppler secrets --help",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 307,
    "section": "Command-specific help",
    "subsection": "Utility Commands",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets --help"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--help",
    "description": "CLI command: run --help command",
    "pattern": "doppler run --help",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 308,
    "section": "Command-specific help",
    "subsection": "Utility Commands",
    "usage": "Use doppler run --help for run operations",
    "examples": [
      "doppler run --help",
      "doppler run --help --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--help",
    "description": "Doppler CLI command: run --help",
    "pattern": "doppler run --help",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 308,
    "section": "Command-specific help",
    "subsection": "Utility Commands",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --help"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "- `DOPPLER_TOKEN`: Service token for authentication",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "cli-commands.md",
    "lineNumber": 325,
    "section": "Command-specific help",
    "subsection": "Advanced Usage",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "- `DOPPLER_TOKEN`: Service token for authentication",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "cli-commands.md",
    "lineNumber": 325,
    "section": "Command-specific help",
    "subsection": "Advanced Usage",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "- `DOPPLER_PROJECT`: Default project",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "cli-commands.md",
    "lineNumber": 326,
    "section": "Command-specific help",
    "subsection": "Advanced Usage",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- `~/.doppler/.doppler.yaml`: Global configuration",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 333,
    "section": "Command-specific help",
    "subsection": "Advanced Usage",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- `~/.doppler/.doppler.yaml`: Global configuration"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- `.doppler.yaml`: Project-specific configuration (if enabled)",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 334,
    "section": "Command-specific help",
    "subsection": "Advanced Usage",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- `.doppler.yaml`: Project-specific configuration (if enabled)"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "### Local Development",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 338,
    "section": "Command-specific help",
    "subsection": "Common Workflows",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- npm run dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 345,
    "section": "Daily usage",
    "subsection": "Common Workflows",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- npm run dev",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- npm run dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 345,
    "section": "Daily usage",
    "subsection": "Common Workflows",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- npm run dev"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "# Use service token",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "cli-commands.md",
    "lineNumber": 350,
    "section": "Use service token",
    "subsection": "Common Workflows",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "export DOPPLER_TOKEN=\"dp.st.xxxx\"",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "cli-commands.md",
    "lineNumber": 351,
    "section": "Use service token",
    "subsection": "Common Workflows",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_TOKEN=\"dp.st.xxxx\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "cli-commands.md",
    "lineNumber": 351,
    "section": "Use service token",
    "subsection": "Common Workflows",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- npm test",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 352,
    "section": "Use service token",
    "subsection": "Common Workflows",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- npm test",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- npm test",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 352,
    "section": "Use service token",
    "subsection": "Common Workflows",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- npm test"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- npm run build",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 353,
    "section": "Use service token",
    "subsection": "Common Workflows",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- npm run build",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- npm run build",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 353,
    "section": "Use service token",
    "subsection": "Common Workflows",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- npm run build"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "secret_rotation_strategy",
    "description": "Secret rotation best practices for security and compliance",
    "pattern": "### Secret Rotation",
    "category": "best_practices",
    "type": "security_lifecycle",
    "complexity": "high",
    "safety": "critical",
    "filename": "cli-commands.md",
    "lineNumber": 356,
    "section": "Use service token",
    "subsection": "Common Workflows",
    "usage": "Implement regular secret rotation for security compliance",
    "examples": [
      "Automated rotation via API",
      "Zero-downtime rotation strategies"
    ],
    "recommendations": [
      "Automate rotation where possible",
      "Test rotation procedures"
    ],
    "warnings": [
      "Improper rotation can cause service outages"
    ]
  },
  {
    "name": "file_cli_commands",
    "description": "Comprehensive guide: cli-commands.md",
    "pattern": "Documentation file: cli-commands.md",
    "category": "api_usage",
    "type": "documentation",
    "complexity": "expert",
    "safety": "safe",
    "filename": "cli-commands.md",
    "lineNumber": 1,
    "section": "file_overview",
    "subsection": "",
    "usage": "Reference guide for cli commands",
    "examples": [
      "Study cli-commands.md for detailed information"
    ],
    "recommendations": [
      "Follow practices outlined in cli-commands.md"
    ],
    "warnings": [],
    "topics": [
      "Core Commands Overview",
      "Authentication",
      "Project Configuration",
      "Secrets Management",
      "Running Applications",
      "Environment Management",
      "Service Tokens",
      "Activity Logs",
      "Config Management",
      "Workplace Management"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "---",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 1,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "---"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "description: \"Quick reference guide for the most commonly used Doppler CLI commands including authentication, setup, secrets management, and project operations\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 3,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "description: \"Quick reference guide for the most commonly used Doppler CLI commands including authentication, setup, secrets management, and project operations\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "tags: [\"doppler\", \"cli\", \"commands\", \"cheatsheet\", \"reference\", \"quick-guide\"]",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "tags: [\"doppler\", \"cli\", \"commands\", \"cheatsheet\", \"reference\", \"quick-guide\"]"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_login",
    "description": "CLI command: login command",
    "pattern": "doppler login",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 20,
    "section": "Login interactively",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use doppler login for login operations",
    "examples": [
      "doppler login",
      "doppler login --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_login",
    "description": "Doppler CLI command: login",
    "pattern": "doppler login",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 20,
    "section": "Login interactively",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Execute login operations via CLI",
    "examples": [
      "doppler login"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "# Login with service token",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "command-cheatsheet.md",
    "lineNumber": 22,
    "section": "Login with service token",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "export DOPPLER_TOKEN=\"dp.st.xxx\"",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "command-cheatsheet.md",
    "lineNumber": 23,
    "section": "Login with service token",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_TOKEN=\"dp.st.xxx\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "command-cheatsheet.md",
    "lineNumber": 23,
    "section": "Login with service token",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "doppler setup",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 26,
    "section": "Setup project (interactive)",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "cli_setup",
    "description": "CLI command: setup command",
    "pattern": "doppler setup",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 26,
    "section": "Setup project (interactive)",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use doppler setup for setup operations",
    "examples": [
      "doppler setup",
      "doppler setup --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_setup",
    "description": "Doppler CLI command: setup",
    "pattern": "doppler setup",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 26,
    "section": "Setup project (interactive)",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Execute setup operations via CLI",
    "examples": [
      "doppler setup"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "doppler setup --project myapp --config dev --no-interactive",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 29,
    "section": "Quick setup",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler setup --project myapp --config dev --no-interactive",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 29,
    "section": "Quick setup",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_setup_--project",
    "description": "CLI command: setup --project command",
    "pattern": "doppler setup --project myapp --config dev --no-interactive",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 29,
    "section": "Quick setup",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use doppler setup --project for setup operations",
    "examples": [
      "doppler setup --project myapp --config dev --no-interactive",
      "doppler setup --project --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_setup_--project",
    "description": "Doppler CLI command: setup --project",
    "pattern": "doppler setup --project myapp --config dev --no-interactive",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 29,
    "section": "Quick setup",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Execute setup operations via CLI",
    "examples": [
      "doppler setup --project myapp --config dev --no-interactive"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_me",
    "description": "CLI command: me command",
    "pattern": "doppler me",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 32,
    "section": "Check current user",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use doppler me for me operations",
    "examples": [
      "doppler me",
      "doppler me --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_me",
    "description": "Doppler CLI command: me",
    "pattern": "doppler me",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 32,
    "section": "Check current user",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Execute me operations via CLI",
    "examples": [
      "doppler me"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_logout",
    "description": "CLI command: logout command",
    "pattern": "doppler logout",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 35,
    "section": "Logout",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use doppler logout for logout operations",
    "examples": [
      "doppler logout",
      "doppler logout --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_logout",
    "description": "Doppler CLI command: logout",
    "pattern": "doppler logout",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 35,
    "section": "Logout",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Execute logout operations via CLI",
    "examples": [
      "doppler logout"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets",
    "description": "CLI command: secrets command",
    "pattern": "doppler secrets",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 42,
    "section": "List all secrets",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use doppler secrets for secrets operations",
    "examples": [
      "doppler secrets",
      "doppler secrets --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets",
    "description": "Doppler CLI command: secrets",
    "pattern": "doppler secrets",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 42,
    "section": "List all secrets",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_get",
    "description": "CLI command: secrets get command",
    "pattern": "doppler secrets get DATABASE_URL --plain",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 45,
    "section": "Get specific secret",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use doppler secrets get for secrets operations",
    "examples": [
      "doppler secrets get DATABASE_URL --plain",
      "doppler secrets get --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "doppler secrets get DATABASE_URL --plain",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 45,
    "section": "Get specific secret",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets get DATABASE_URL --plain"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set KEY=\"value\" KEY2=\"value2\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 48,
    "section": "Set secrets",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set KEY=\"value\" KEY2=\"value2\"",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set KEY=\"value\" KEY2=\"value2\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 48,
    "section": "Set secrets",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set KEY=\"value\" KEY2=\"value2\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_delete",
    "description": "CLI command: secrets delete command",
    "pattern": "doppler secrets delete KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 51,
    "section": "Delete secret",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use doppler secrets delete for secrets operations",
    "examples": [
      "doppler secrets delete KEY",
      "doppler secrets delete --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": [
      "Deletion is irreversible"
    ]
  },
  {
    "name": "command_secrets_delete",
    "description": "Doppler CLI command: secrets delete",
    "pattern": "doppler secrets delete KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 51,
    "section": "Delete secret",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets delete KEY"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format env > .env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 54,
    "section": "Download as .env",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format env > .env",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format env > .env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 54,
    "section": "Download as .env",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format env > .env"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 57,
    "section": "Run command with secrets",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- npm start",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 57,
    "section": "Run command with secrets",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "# Development workflow",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 63,
    "section": "Development workflow",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "doppler setup                              # One-time setup",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 64,
    "section": "Development workflow",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "cli_setup",
    "description": "CLI command: setup command",
    "pattern": "doppler setup                              # One-time setup",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 64,
    "section": "Development workflow",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use doppler setup for setup operations",
    "examples": [
      "doppler setup                              # One-time setup",
      "doppler setup --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_setup",
    "description": "Doppler CLI command: setup",
    "pattern": "doppler setup                              # One-time setup",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 64,
    "section": "Development workflow",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Execute setup operations via CLI",
    "examples": [
      "doppler setup                              # One-time setup"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- npm run dev                # Run with secrets",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 65,
    "section": "Development workflow",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- npm run dev                # Run with secrets",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- npm run dev                # Run with secrets",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 65,
    "section": "Development workflow",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- npm run dev                # Run with secrets"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "# Production deployment",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "command-cheatsheet.md",
    "lineNumber": 67,
    "section": "Production deployment",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "export DOPPLER_TOKEN=\"dp.st.prod.xxx\"     # Set service token",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "command-cheatsheet.md",
    "lineNumber": 68,
    "section": "Production deployment",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_TOKEN=\"dp.st.prod.xxx\"     # Set service token",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "command-cheatsheet.md",
    "lineNumber": 68,
    "section": "Production deployment",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- node server.js             # Run application",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 69,
    "section": "Production deployment",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- node server.js             # Run application",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- node server.js             # Run application",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 69,
    "section": "Production deployment",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- node server.js             # Run application"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--token",
    "description": "CLI command: run --token command",
    "pattern": "doppler run --token $DOPPLER_TOKEN -- ./deploy.sh",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 72,
    "section": "CI/CD usage",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use doppler run --token for run operations",
    "examples": [
      "doppler run --token $DOPPLER_TOKEN -- ./deploy.sh",
      "doppler run --token --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "doppler run --token $DOPPLER_TOKEN -- ./deploy.sh",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "command-cheatsheet.md",
    "lineNumber": 72,
    "section": "CI/CD usage",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "command_run_--token",
    "description": "Doppler CLI command: run --token",
    "pattern": "doppler run --token $DOPPLER_TOKEN -- ./deploy.sh",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 72,
    "section": "CI/CD usage",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --token $DOPPLER_TOKEN -- ./deploy.sh"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "doppler run --token $DOPPLER_TOKEN -- ./deploy.sh",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "command-cheatsheet.md",
    "lineNumber": 72,
    "section": "CI/CD usage",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_projects",
    "description": "CLI command: projects command",
    "pattern": "doppler projects",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 84,
    "section": "List projects",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use doppler projects for projects operations",
    "examples": [
      "doppler projects",
      "doppler projects --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_projects",
    "description": "Doppler CLI command: projects",
    "pattern": "doppler projects",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 84,
    "section": "List projects",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Execute projects operations via CLI",
    "examples": [
      "doppler projects"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_configs",
    "description": "CLI command: configs command",
    "pattern": "doppler configs",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 87,
    "section": "List configs",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use doppler configs for configs operations",
    "examples": [
      "doppler configs",
      "doppler configs --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configs",
    "description": "Doppler CLI command: configs",
    "pattern": "doppler configs",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 87,
    "section": "List configs",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Execute configs operations via CLI",
    "examples": [
      "doppler configs"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler configs create staging",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 90,
    "section": "Create new config",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_configs_create",
    "description": "CLI command: configs create command",
    "pattern": "doppler configs create staging",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 90,
    "section": "Create new config",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use doppler configs create for configs operations",
    "examples": [
      "doppler configs create staging",
      "doppler configs create --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configs_create",
    "description": "Doppler CLI command: configs create",
    "pattern": "doppler configs create staging",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 90,
    "section": "Create new config",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Execute configs operations via CLI",
    "examples": [
      "doppler configs create staging"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler configure set config staging",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 93,
    "section": "Switch config",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_configure_set",
    "description": "CLI command: configure set command",
    "pattern": "doppler configure set config staging",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 93,
    "section": "Switch config",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use doppler configure set for configure operations",
    "examples": [
      "doppler configure set config staging",
      "doppler configure set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configure_set",
    "description": "Doppler CLI command: configure set",
    "pattern": "doppler configure set config staging",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 93,
    "section": "Switch config",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "doppler configure set config staging"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_configure",
    "description": "CLI command: configure command",
    "pattern": "doppler configure",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 96,
    "section": "Check current settings",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use doppler configure for configure operations",
    "examples": [
      "doppler configure",
      "doppler configure --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configure",
    "description": "Doppler CLI command: configure",
    "pattern": "doppler configure",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 96,
    "section": "Check current settings",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "doppler configure"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_ping",
    "description": "CLI command: ping command",
    "pattern": "doppler ping",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 103,
    "section": "Test connection",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use doppler ping for ping operations",
    "examples": [
      "doppler ping",
      "doppler ping --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_ping",
    "description": "Doppler CLI command: ping",
    "pattern": "doppler ping",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 103,
    "section": "Test connection",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Execute ping operations via CLI",
    "examples": [
      "doppler ping"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_--version",
    "description": "CLI command: --version command",
    "pattern": "doppler --version",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 106,
    "section": "Check version",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use doppler --version for --version operations",
    "examples": [
      "doppler --version",
      "doppler --version --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_--version",
    "description": "Doppler CLI command: --version",
    "pattern": "doppler --version",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 106,
    "section": "Check version",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Execute --version operations via CLI",
    "examples": [
      "doppler --version"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_DEBUG=1",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "command-cheatsheet.md",
    "lineNumber": 109,
    "section": "Enable debug mode",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_configure_clear",
    "description": "CLI command: configure clear command",
    "pattern": "doppler configure clear",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 112,
    "section": "Clear cache",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Use doppler configure clear for configure operations",
    "examples": [
      "doppler configure clear",
      "doppler configure clear --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configure_clear",
    "description": "Doppler CLI command: configure clear",
    "pattern": "doppler configure clear",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 112,
    "section": "Clear cache",
    "subsection": "Quick Reference for Most Used Commands",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "doppler configure clear"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "# Export all secrets to current shell",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "command-cheatsheet.md",
    "lineNumber": 118,
    "section": "Export all secrets to current shell",
    "subsection": "One-Liner Solutions",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "export $(doppler secrets download --no-file --format env | xargs)",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 119,
    "section": "Export all secrets to current shell",
    "subsection": "One-Liner Solutions",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "export $(doppler secrets download --no-file --format env | xargs)"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export $(doppler secrets download --no-file --format env | xargs)",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "command-cheatsheet.md",
    "lineNumber": 119,
    "section": "Export all secrets to current shell",
    "subsection": "One-Liner Solutions",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "DATABASE_URL=$(doppler secrets get DATABASE_URL --plain)",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 122,
    "section": "Get single secret value",
    "subsection": "One-Liner Solutions",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "DATABASE_URL=$(doppler secrets get DATABASE_URL --plain)"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "# Create and save service token",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "command-cheatsheet.md",
    "lineNumber": 124,
    "section": "Create and save service token",
    "subsection": "One-Liner Solutions",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler configs tokens create --name \"prod\" --plain > token.txt",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 125,
    "section": "Create and save service token",
    "subsection": "One-Liner Solutions",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_configs_tokens",
    "description": "CLI command: configs tokens command",
    "pattern": "doppler configs tokens create --name \"prod\" --plain > token.txt",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 125,
    "section": "Create and save service token",
    "subsection": "One-Liner Solutions",
    "usage": "Use doppler configs tokens for configs operations",
    "examples": [
      "doppler configs tokens create --name \"prod\" --plain > token.txt",
      "doppler configs tokens --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configs_tokens",
    "description": "Doppler CLI command: configs tokens",
    "pattern": "doppler configs tokens create --name \"prod\" --plain > token.txt",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 125,
    "section": "Create and save service token",
    "subsection": "One-Liner Solutions",
    "usage": "Execute configs operations via CLI",
    "examples": [
      "doppler configs tokens create --name \"prod\" --plain > token.txt"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- node index.js",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 131,
    "section": "Run Node.js app with secrets",
    "subsection": "One-Liner Solutions",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- node index.js",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- node index.js",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 131,
    "section": "Run Node.js app with secrets",
    "subsection": "One-Liner Solutions",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- node index.js"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler run --config production -- python app.py",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 134,
    "section": "Run Python app with specific config",
    "subsection": "One-Liner Solutions",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_run_--config",
    "description": "CLI command: run --config command",
    "pattern": "doppler run --config production -- python app.py",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 134,
    "section": "Run Python app with specific config",
    "subsection": "One-Liner Solutions",
    "usage": "Use doppler run --config for run operations",
    "examples": [
      "doppler run --config production -- python app.py",
      "doppler run --config --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--config",
    "description": "Doppler CLI command: run --config",
    "pattern": "doppler run --config production -- python app.py",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 134,
    "section": "Run Python app with specific config",
    "subsection": "One-Liner Solutions",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --config production -- python app.py"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set API_KEY=\"new-value\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 137,
    "section": "Quick secret update",
    "subsection": "One-Liner Solutions",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set API_KEY=\"new-value\"",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set API_KEY=\"new-value\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 137,
    "section": "Quick secret update",
    "subsection": "One-Liner Solutions",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set API_KEY=\"new-value\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format json > backup.json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 140,
    "section": "Backup all secrets as JSON",
    "subsection": "One-Liner Solutions",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format json > backup.json",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format json > backup.json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 140,
    "section": "Backup all secrets as JSON",
    "subsection": "One-Liner Solutions",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format json > backup.json"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_--json",
    "description": "CLI command: secrets --json command",
    "pattern": "doppler secrets --json | jq 'keys[]' | grep -i database",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 143,
    "section": "List secrets as JSON and filter",
    "subsection": "One-Liner Solutions",
    "usage": "Use doppler secrets --json for secrets operations",
    "examples": [
      "doppler secrets --json | jq 'keys[]' | grep -i database",
      "doppler secrets --json --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_--json",
    "description": "Doppler CLI command: secrets --json",
    "pattern": "doppler secrets --json | jq 'keys[]' | grep -i database",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 143,
    "section": "List secrets as JSON and filter",
    "subsection": "One-Liner Solutions",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets --json | jq 'keys[]' | grep -i database"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--fallback",
    "description": "CLI command: run --fallback command",
    "pattern": "doppler run --fallback .env.test -- npm test",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 146,
    "section": "Run tests with fallback",
    "subsection": "One-Liner Solutions",
    "usage": "Use doppler run --fallback for run operations",
    "examples": [
      "doppler run --fallback .env.test -- npm test",
      "doppler run --fallback --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--fallback",
    "description": "Doppler CLI command: run --fallback",
    "pattern": "doppler run --fallback .env.test -- npm test",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 146,
    "section": "Run tests with fallback",
    "subsection": "One-Liner Solutions",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --fallback .env.test -- npm test"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "### Local Development",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 151,
    "section": "Run tests with fallback",
    "subsection": "Common Patterns by Use Case",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- npm install",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 158,
    "section": "Initial setup",
    "subsection": "Common Patterns by Use Case",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- npm install",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- npm install",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 158,
    "section": "Initial setup",
    "subsection": "Common Patterns by Use Case",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- npm install"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- npm run dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 159,
    "section": "Initial setup",
    "subsection": "Common Patterns by Use Case",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- npm run dev",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- npm run dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 159,
    "section": "Initial setup",
    "subsection": "Common Patterns by Use Case",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- npm run dev"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "### Docker Deployment",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "command-cheatsheet.md",
    "lineNumber": 162,
    "section": "Initial setup",
    "subsection": "Common Patterns by Use Case",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "docker_secret_injection",
    "description": "Docker container secret injection using Doppler CLI",
    "pattern": "doppler secrets download --no-file --format docker > .env.docker",
    "category": "integration",
    "type": "container_deployment",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "command-cheatsheet.md",
    "lineNumber": 166,
    "section": "Build with secrets",
    "subsection": "Common Patterns by Use Case",
    "usage": "Inject secrets into Docker containers using Doppler CLI",
    "examples": [
      "doppler run -- docker build -t myapp .",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use Doppler CLI for secret injection",
      "Never bake secrets into images"
    ],
    "warnings": [
      "Ensure Doppler CLI is available in container"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format docker > .env.docker",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 166,
    "section": "Build with secrets",
    "subsection": "Common Patterns by Use Case",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format docker > .env.docker",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format docker > .env.docker",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 166,
    "section": "Build with secrets",
    "subsection": "Common Patterns by Use Case",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format docker > .env.docker"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "docker_secret_injection",
    "description": "Docker container secret injection using Doppler CLI",
    "pattern": "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp",
    "category": "integration",
    "type": "container_deployment",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "command-cheatsheet.md",
    "lineNumber": 171,
    "section": "Run container",
    "subsection": "Common Patterns by Use Case",
    "usage": "Inject secrets into Docker containers using Doppler CLI",
    "examples": [
      "doppler run -- docker build -t myapp .",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use Doppler CLI for secret injection",
      "Never bake secrets into images"
    ],
    "warnings": [
      "Ensure Doppler CLI is available in container"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "command-cheatsheet.md",
    "lineNumber": 171,
    "section": "Run container",
    "subsection": "Common Patterns by Use Case",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "github_actions_integration",
    "description": "GitHub Actions workflow integration with Doppler secrets",
    "pattern": "# GitHub Actions",
    "category": "integration",
    "type": "ci_cd_workflow",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 177,
    "section": "GitHub Actions",
    "subsection": "Common Patterns by Use Case",
    "usage": "Integrate Doppler secrets into GitHub Actions workflows",
    "examples": [
      "uses: dopplerhq/secrets-fetch-action@v1.1.0",
      "with: doppler-token: ${{ secrets.DOPPLER_TOKEN }}"
    ],
    "recommendations": [
      "Use GitHub Actions integration action",
      "Store Doppler token in GitHub Secrets"
    ],
    "warnings": [
      "Never expose Doppler tokens in workflow logs"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "- name: Deploy",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "command-cheatsheet.md",
    "lineNumber": 178,
    "section": "GitHub Actions",
    "subsection": "Common Patterns by Use Case",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "run: doppler run -- ./deploy.sh",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "command-cheatsheet.md",
    "lineNumber": 179,
    "section": "GitHub Actions",
    "subsection": "Common Patterns by Use Case",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "run: doppler run -- ./deploy.sh",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 179,
    "section": "GitHub Actions",
    "subsection": "Common Patterns by Use Case",
    "usage": "Execute run operations via CLI",
    "examples": [
      "run: doppler run -- ./deploy.sh"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "run: doppler run -- ./deploy.sh",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 179,
    "section": "GitHub Actions",
    "subsection": "Common Patterns by Use Case",
    "usage": "Use as template for integration configuration",
    "examples": [
      "run: doppler run -- ./deploy.sh"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "command-cheatsheet.md",
    "lineNumber": 181,
    "section": "GitHub Actions",
    "subsection": "Common Patterns by Use Case",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 181,
    "section": "GitHub Actions",
    "subsection": "Common Patterns by Use Case",
    "usage": "Use as template for integration configuration",
    "examples": [
      "DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "withCredentials([string(credentialsId: 'doppler-token', variable: 'DOPPLER_TOKEN')]) {",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "command-cheatsheet.md",
    "lineNumber": 184,
    "section": "Jenkins",
    "subsection": "Common Patterns by Use Case",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "withCredentials([string(credentialsId: 'doppler-token', variable: 'DOPPLER_TOKEN')]) {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 184,
    "section": "Jenkins",
    "subsection": "Common Patterns by Use Case",
    "usage": "Use as template for integration configuration",
    "examples": [
      "withCredentials([string(credentialsId: 'doppler-token', variable: 'DOPPLER_TOKEN')]) {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "sh 'doppler run -- ./deploy.sh'",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "command-cheatsheet.md",
    "lineNumber": 185,
    "section": "Jenkins",
    "subsection": "Common Patterns by Use Case",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "sh 'doppler run -- ./deploy.sh'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 185,
    "section": "Jenkins",
    "subsection": "Common Patterns by Use Case",
    "usage": "Execute run operations via CLI",
    "examples": [
      "sh 'doppler run -- ./deploy.sh'"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "### Kubernetes Secrets",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "command-cheatsheet.md",
    "lineNumber": 189,
    "section": "Jenkins",
    "subsection": "Common Patterns by Use Case",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "# Create K8s secret from Doppler",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "command-cheatsheet.md",
    "lineNumber": 192,
    "section": "Create K8s secret from Doppler",
    "subsection": "Common Patterns by Use Case",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "--from-literal=token=$DOPPLER_TOKEN",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "command-cheatsheet.md",
    "lineNumber": 194,
    "section": "Create K8s secret from Doppler",
    "subsection": "Common Patterns by Use Case",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format yaml | \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 197,
    "section": "Or create from all secrets",
    "subsection": "Common Patterns by Use Case",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format yaml | \\",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format yaml | \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 197,
    "section": "Or create from all secrets",
    "subsection": "Common Patterns by Use Case",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format yaml | \\"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- npm run migrate",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 205,
    "section": "Run migrations with DB credentials",
    "subsection": "Common Patterns by Use Case",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- npm run migrate",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- npm run migrate",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 205,
    "section": "Run migrations with DB credentials",
    "subsection": "Common Patterns by Use Case",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- npm run migrate"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- psql $DATABASE_URL -f migration.sql",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 208,
    "section": "With specific database",
    "subsection": "Common Patterns by Use Case",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- psql $DATABASE_URL -f migration.sql",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- psql $DATABASE_URL -f migration.sql",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 208,
    "section": "With specific database",
    "subsection": "Common Patterns by Use Case",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- psql $DATABASE_URL -f migration.sql"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- pg_dump $DATABASE_URL > backup.sql",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 211,
    "section": "Backup before migration",
    "subsection": "Common Patterns by Use Case",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- pg_dump $DATABASE_URL > backup.sql",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- pg_dump $DATABASE_URL > backup.sql",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 211,
    "section": "Backup before migration",
    "subsection": "Common Patterns by Use Case",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- pg_dump $DATABASE_URL > backup.sql"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "### Development",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 217,
    "section": "Backup before migration",
    "subsection": "Environment-Specific Commands",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler run --config dev -- npm start",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 220,
    "section": "Backup before migration",
    "subsection": "Environment-Specific Commands",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_run_--config",
    "description": "CLI command: run --config command",
    "pattern": "doppler run --config dev -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 220,
    "section": "Backup before migration",
    "subsection": "Environment-Specific Commands",
    "usage": "Use doppler run --config for run operations",
    "examples": [
      "doppler run --config dev -- npm start",
      "doppler run --config --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--config",
    "description": "Doppler CLI command: run --config",
    "pattern": "doppler run --config dev -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 220,
    "section": "Backup before migration",
    "subsection": "Environment-Specific Commands",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --config dev -- npm start"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler secrets --config dev",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 221,
    "section": "Backup before migration",
    "subsection": "Environment-Specific Commands",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_secrets_--config",
    "description": "CLI command: secrets --config command",
    "pattern": "doppler secrets --config dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 221,
    "section": "Backup before migration",
    "subsection": "Environment-Specific Commands",
    "usage": "Use doppler secrets --config for secrets operations",
    "examples": [
      "doppler secrets --config dev",
      "doppler secrets --config --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_--config",
    "description": "Doppler CLI command: secrets --config",
    "pattern": "doppler secrets --config dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 221,
    "section": "Backup before migration",
    "subsection": "Environment-Specific Commands",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets --config dev"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler secrets set --config dev DEBUG=true",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 222,
    "section": "Backup before migration",
    "subsection": "Environment-Specific Commands",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set --config dev DEBUG=true",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 222,
    "section": "Backup before migration",
    "subsection": "Environment-Specific Commands",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set --config dev DEBUG=true",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set --config dev DEBUG=true",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 222,
    "section": "Backup before migration",
    "subsection": "Environment-Specific Commands",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set --config dev DEBUG=true"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler run --config staging -- ./test.sh",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 228,
    "section": "Backup before migration",
    "subsection": "Environment-Specific Commands",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_run_--config",
    "description": "CLI command: run --config command",
    "pattern": "doppler run --config staging -- ./test.sh",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 228,
    "section": "Backup before migration",
    "subsection": "Environment-Specific Commands",
    "usage": "Use doppler run --config for run operations",
    "examples": [
      "doppler run --config staging -- ./test.sh",
      "doppler run --config --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--config",
    "description": "Doppler CLI command: run --config",
    "pattern": "doppler run --config staging -- ./test.sh",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 228,
    "section": "Backup before migration",
    "subsection": "Environment-Specific Commands",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --config staging -- ./test.sh"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler secrets download --config staging --format env > .env.staging",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 229,
    "section": "Backup before migration",
    "subsection": "Environment-Specific Commands",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --config staging --format env > .env.staging",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 229,
    "section": "Backup before migration",
    "subsection": "Environment-Specific Commands",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --config staging --format env > .env.staging",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --config staging --format env > .env.staging",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 229,
    "section": "Backup before migration",
    "subsection": "Environment-Specific Commands",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --config staging --format env > .env.staging"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_TOKEN=$PRODUCTION_TOKEN",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "command-cheatsheet.md",
    "lineNumber": 235,
    "section": "Backup before migration",
    "subsection": "Environment-Specific Commands",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- pm2 start app.js",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 236,
    "section": "Backup before migration",
    "subsection": "Environment-Specific Commands",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- pm2 start app.js",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- pm2 start app.js",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 236,
    "section": "Backup before migration",
    "subsection": "Environment-Specific Commands",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- pm2 start app.js"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler secrets get --config production DATABASE_URL --plain",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 237,
    "section": "Backup before migration",
    "subsection": "Environment-Specific Commands",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_secrets_get",
    "description": "CLI command: secrets get command",
    "pattern": "doppler secrets get --config production DATABASE_URL --plain",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 237,
    "section": "Backup before migration",
    "subsection": "Environment-Specific Commands",
    "usage": "Use doppler secrets get for secrets operations",
    "examples": [
      "doppler secrets get --config production DATABASE_URL --plain",
      "doppler secrets get --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "doppler secrets get --config production DATABASE_URL --plain",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 237,
    "section": "Backup before migration",
    "subsection": "Environment-Specific Commands",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets get --config production DATABASE_URL --plain"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 244,
    "section": "Environment variables (.env)",
    "subsection": "Format-Specific Downloads",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format env",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 244,
    "section": "Environment variables (.env)",
    "subsection": "Format-Specific Downloads",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format env"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 247,
    "section": "JSON",
    "subsection": "Format-Specific Downloads",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format json",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 247,
    "section": "JSON",
    "subsection": "Format-Specific Downloads",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format json"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 250,
    "section": "YAML",
    "subsection": "Format-Specific Downloads",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format yaml",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 250,
    "section": "YAML",
    "subsection": "Format-Specific Downloads",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format yaml"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "# Shell export",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "command-cheatsheet.md",
    "lineNumber": 252,
    "section": "Shell export",
    "subsection": "Format-Specific Downloads",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format shell",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 253,
    "section": "Shell export",
    "subsection": "Format-Specific Downloads",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format shell",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format shell",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 253,
    "section": "Shell export",
    "subsection": "Format-Specific Downloads",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format shell"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "docker_secret_injection",
    "description": "Docker container secret injection using Doppler CLI",
    "pattern": "doppler secrets download --no-file --format docker",
    "category": "integration",
    "type": "container_deployment",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "command-cheatsheet.md",
    "lineNumber": 256,
    "section": "Docker",
    "subsection": "Format-Specific Downloads",
    "usage": "Inject secrets into Docker containers using Doppler CLI",
    "examples": [
      "doppler run -- docker build -t myapp .",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use Doppler CLI for secret injection",
      "Never bake secrets into images"
    ],
    "warnings": [
      "Ensure Doppler CLI is available in container"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format docker",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 256,
    "section": "Docker",
    "subsection": "Format-Specific Downloads",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format docker",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format docker",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 256,
    "section": "Docker",
    "subsection": "Format-Specific Downloads",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format docker"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format env-no-quotes",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 259,
    "section": "Key=Value pairs",
    "subsection": "Format-Specific Downloads",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format env-no-quotes",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format env-no-quotes",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 259,
    "section": "Key=Value pairs",
    "subsection": "Format-Specific Downloads",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format env-no-quotes"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "## Service Token Management",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "command-cheatsheet.md",
    "lineNumber": 262,
    "section": "Key=Value pairs",
    "subsection": "Service Token Management",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "cli_configs_tokens",
    "description": "CLI command: configs tokens command",
    "pattern": "doppler configs tokens create \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 266,
    "section": "Create token",
    "subsection": "Service Token Management",
    "usage": "Use doppler configs tokens for configs operations",
    "examples": [
      "doppler configs tokens create \\",
      "doppler configs tokens --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configs_tokens",
    "description": "Doppler CLI command: configs tokens",
    "pattern": "doppler configs tokens create \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 266,
    "section": "Create token",
    "subsection": "Service Token Management",
    "usage": "Execute configs operations via CLI",
    "examples": [
      "doppler configs tokens create \\"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "--config production \\",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 268,
    "section": "Create token",
    "subsection": "Service Token Management",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_configs_tokens",
    "description": "CLI command: configs tokens command",
    "pattern": "doppler configs tokens list",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 273,
    "section": "List tokens",
    "subsection": "Service Token Management",
    "usage": "Use doppler configs tokens for configs operations",
    "examples": [
      "doppler configs tokens list",
      "doppler configs tokens --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configs_tokens",
    "description": "Doppler CLI command: configs tokens",
    "pattern": "doppler configs tokens list",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 273,
    "section": "List tokens",
    "subsection": "Service Token Management",
    "usage": "Execute configs operations via CLI",
    "examples": [
      "doppler configs tokens list"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_configs_tokens",
    "description": "CLI command: configs tokens command",
    "pattern": "doppler configs tokens revoke --slug xxx-xxx-xxx",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 276,
    "section": "Revoke token",
    "subsection": "Service Token Management",
    "usage": "Use doppler configs tokens for configs operations",
    "examples": [
      "doppler configs tokens revoke --slug xxx-xxx-xxx",
      "doppler configs tokens --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configs_tokens",
    "description": "Doppler CLI command: configs tokens",
    "pattern": "doppler configs tokens revoke --slug xxx-xxx-xxx",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 276,
    "section": "Revoke token",
    "subsection": "Service Token Management",
    "usage": "Execute configs operations via CLI",
    "examples": [
      "doppler configs tokens revoke --slug xxx-xxx-xxx"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_secrets",
    "description": "Doppler CLI command: secrets",
    "pattern": "alias ds='doppler secrets'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 285,
    "section": "Quick secret access",
    "subsection": "Useful Aliases",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "alias ds='doppler secrets'"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "alias dsg='doppler secrets get --plain'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 286,
    "section": "Quick secret access",
    "subsection": "Useful Aliases",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "alias dsg='doppler secrets get --plain'"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "alias dss='doppler secrets set'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 287,
    "section": "Quick secret access",
    "subsection": "Useful Aliases",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "alias dss='doppler secrets set'"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "alias drun='doppler run --'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 290,
    "section": "Run shortcuts",
    "subsection": "Useful Aliases",
    "usage": "Execute run operations via CLI",
    "examples": [
      "alias drun='doppler run --'"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "alias ddev='doppler run --config dev --'",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 291,
    "section": "Run shortcuts",
    "subsection": "Useful Aliases",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "command_run_--config",
    "description": "Doppler CLI command: run --config",
    "pattern": "alias ddev='doppler run --config dev --'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 291,
    "section": "Run shortcuts",
    "subsection": "Useful Aliases",
    "usage": "Execute run operations via CLI",
    "examples": [
      "alias ddev='doppler run --config dev --'"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "alias dprod='doppler run --config production --'",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 292,
    "section": "Run shortcuts",
    "subsection": "Useful Aliases",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "command_run_--config",
    "description": "Doppler CLI command: run --config",
    "pattern": "alias dprod='doppler run --config production --'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 292,
    "section": "Run shortcuts",
    "subsection": "Useful Aliases",
    "usage": "Execute run operations via CLI",
    "examples": [
      "alias dprod='doppler run --config production --'"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_configure_set",
    "description": "Doppler CLI command: configure set",
    "pattern": "alias dconf='doppler configure set config'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 295,
    "section": "Config switching",
    "subsection": "Useful Aliases",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "alias dconf='doppler configure set config'"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "alias denv='doppler secrets download --no-file --format env > .env'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 298,
    "section": "Download shortcuts",
    "subsection": "Useful Aliases",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "alias denv='doppler secrets download --no-file --format env > .env'"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "alias djson='doppler secrets download --no-file --format json'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 299,
    "section": "Download shortcuts",
    "subsection": "Useful Aliases",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "alias djson='doppler secrets download --no-file --format json'"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_logout_--all",
    "description": "CLI command: logout --all command",
    "pattern": "doppler logout --all",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 312,
    "section": "Re-authenticate",
    "subsection": "Emergency Commands",
    "usage": "Use doppler logout --all for logout operations",
    "examples": [
      "doppler logout --all",
      "doppler logout --all --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_logout_--all",
    "description": "Doppler CLI command: logout --all",
    "pattern": "doppler logout --all",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 312,
    "section": "Re-authenticate",
    "subsection": "Emergency Commands",
    "usage": "Execute logout operations via CLI",
    "examples": [
      "doppler logout --all"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "secret_rotation_strategy",
    "description": "Secret rotation best practices for security and compliance",
    "pattern": "# Force token refresh",
    "category": "best_practices",
    "type": "security_lifecycle",
    "complexity": "high",
    "safety": "critical",
    "filename": "command-cheatsheet.md",
    "lineNumber": 315,
    "section": "Force token refresh",
    "subsection": "Emergency Commands",
    "usage": "Implement regular secret rotation for security compliance",
    "examples": [
      "Automated rotation via API",
      "Zero-downtime rotation strategies"
    ],
    "recommendations": [
      "Automate rotation where possible",
      "Test rotation procedures"
    ],
    "warnings": [
      "Improper rotation can cause service outages"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "unset DOPPLER_TOKEN",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "command-cheatsheet.md",
    "lineNumber": 316,
    "section": "Force token refresh",
    "subsection": "Emergency Commands",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_TOKEN=\"new-token\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "command-cheatsheet.md",
    "lineNumber": 317,
    "section": "Force token refresh",
    "subsection": "Emergency Commands",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "DOPPLER_TOKEN=\"xxx\" doppler secrets get DOPPLER_PROJECT --plain",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 320,
    "section": "Test with minimal setup",
    "subsection": "Emergency Commands",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "DOPPLER_TOKEN=\"xxx\" doppler secrets get DOPPLER_PROJECT --plain"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "DOPPLER_TOKEN=\"xxx\" doppler secrets get DOPPLER_PROJECT --plain",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "command-cheatsheet.md",
    "lineNumber": 320,
    "section": "Test with minimal setup",
    "subsection": "Emergency Commands",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_SKIP_TLS_VERIFY=1",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "command-cheatsheet.md",
    "lineNumber": 323,
    "section": "Skip TLS (not recommended)",
    "subsection": "Emergency Commands",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_TIMEOUT=60",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "command-cheatsheet.md",
    "lineNumber": 326,
    "section": "Increase timeout",
    "subsection": "Emergency Commands",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_LOG_LEVEL=debug",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "command-cheatsheet.md",
    "lineNumber": 330,
    "section": "Maximum debug info",
    "subsection": "Emergency Commands",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_secrets",
    "description": "CLI command: secrets command",
    "pattern": "doppler secrets 2>&1 | tee debug.log",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 331,
    "section": "Maximum debug info",
    "subsection": "Emergency Commands",
    "usage": "Use doppler secrets for secrets operations",
    "examples": [
      "doppler secrets 2>&1 | tee debug.log",
      "doppler secrets --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets",
    "description": "Doppler CLI command: secrets",
    "pattern": "doppler secrets 2>&1 | tee debug.log",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 331,
    "section": "Maximum debug info",
    "subsection": "Emergency Commands",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets 2>&1 | tee debug.log"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "DB_URL=$(doppler secrets get DATABASE_URL --plain)",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 338,
    "section": "Maximum debug info",
    "subsection": "Pro Tips",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "DB_URL=$(doppler secrets get DATABASE_URL --plain)"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_--json",
    "description": "CLI command: secrets --json command",
    "pattern": "doppler secrets --json | jq -r '.DATABASE_URL.computed'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 343,
    "section": "Maximum debug info",
    "subsection": "Pro Tips",
    "usage": "Use doppler secrets --json for secrets operations",
    "examples": [
      "doppler secrets --json | jq -r '.DATABASE_URL.computed'",
      "doppler secrets --json --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_--json",
    "description": "Doppler CLI command: secrets --json",
    "pattern": "doppler secrets --json | jq -r '.DATABASE_URL.computed'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 343,
    "section": "Maximum debug info",
    "subsection": "Pro Tips",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets --json | jq -r '.DATABASE_URL.computed'"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--fallback",
    "description": "CLI command: run --fallback command",
    "pattern": "doppler run --fallback .env.local -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 348,
    "section": "Maximum debug info",
    "subsection": "Pro Tips",
    "usage": "Use doppler run --fallback for run operations",
    "examples": [
      "doppler run --fallback .env.local -- npm start",
      "doppler run --fallback --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--fallback",
    "description": "Doppler CLI command: run --fallback",
    "pattern": "doppler run --fallback .env.local -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 348,
    "section": "Maximum debug info",
    "subsection": "Pro Tips",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --fallback .env.local -- npm start"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_--json",
    "description": "CLI command: secrets --json command",
    "pattern": "doppler secrets --json | jq 'to_entries[]' | grep -i api",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 353,
    "section": "Maximum debug info",
    "subsection": "Pro Tips",
    "usage": "Use doppler secrets --json for secrets operations",
    "examples": [
      "doppler secrets --json | jq 'to_entries[]' | grep -i api",
      "doppler secrets --json --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_--json",
    "description": "Doppler CLI command: secrets --json",
    "pattern": "doppler secrets --json | jq 'to_entries[]' | grep -i api",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 353,
    "section": "Maximum debug info",
    "subsection": "Pro Tips",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets --json | jq 'to_entries[]' | grep -i api"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- env | grep -E '^(DATABASE|API|SECRET)'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 358,
    "section": "Maximum debug info",
    "subsection": "Pro Tips",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- env | grep -E '^(DATABASE|API|SECRET)'",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- env | grep -E '^(DATABASE|API|SECRET)'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 358,
    "section": "Maximum debug info",
    "subsection": "Pro Tips",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- env | grep -E '^(DATABASE|API|SECRET)'"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "Remember: Always keep service tokens secure and never commit them to version control!",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "command-cheatsheet.md",
    "lineNumber": 361,
    "section": "Maximum debug info",
    "subsection": "Pro Tips",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "file_command_cheatsheet",
    "description": "Comprehensive guide: command-cheatsheet.md",
    "pattern": "Documentation file: command-cheatsheet.md",
    "category": "best_practices",
    "type": "documentation",
    "complexity": "expert",
    "safety": "safe",
    "filename": "command-cheatsheet.md",
    "lineNumber": 1,
    "section": "file_overview",
    "subsection": "",
    "usage": "Reference guide for command cheatsheet",
    "examples": [
      "Study command-cheatsheet.md for detailed information"
    ],
    "recommendations": [
      "Follow practices outlined in command-cheatsheet.md"
    ],
    "warnings": [],
    "topics": [
      "Quick Reference for Most Used Commands",
      "One-Liner Solutions",
      "Common Patterns by Use Case",
      "Environment-Specific Commands",
      "Format-Specific Downloads",
      "Service Token Management",
      "Useful Aliases",
      "Emergency Commands",
      "Pro Tips"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "---",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 1,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "---"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "description: \"Comprehensive guide to installing, configuring, and using the Doppler CLI across different platforms with authentication, project setup, and command usage\"",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 3,
    "section": "",
    "subsection": "",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "tags: [\"doppler\", \"cli\", \"installation\", \"setup\", \"authentication\", \"cross-platform\"]",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "tags: [\"doppler\", \"cli\", \"installation\", \"setup\", \"authentication\", \"cross-platform\"]"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "Doppler CLI is an open-source tool that injects secrets into applications consistently across development and production environments. It works with any language, framework, platform, and cloud provider by injecting secrets as environment variables.",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 16,
    "section": "Doppler CLI Complete Guide",
    "subsection": "Overview",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "command_https",
    "description": "Doppler CLI command: https",
    "pattern": "scoop bucket add doppler https://github.com/DopplerHQ/scoop-doppler.git",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 37,
    "section": "Install Doppler CLI",
    "subsection": "1. CLI Installation for Different Platforms",
    "usage": "Execute https operations via CLI",
    "examples": [
      "scoop bucket add doppler https://github.com/DopplerHQ/scoop-doppler.git"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "scoop bucket add doppler https://github.com/DopplerHQ/scoop-doppler.git",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 37,
    "section": "Install Doppler CLI",
    "subsection": "1. CLI Installation for Different Platforms",
    "usage": "Use as template for integration configuration",
    "examples": [
      "scoop bucket add doppler https://github.com/DopplerHQ/scoop-doppler.git"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "curl -sLf --retry 3 --tlsv1.2 --proto \"=https\" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | sudo gpg --dearmor -o /usr/share/keyrings/doppler-archive-keyring.gpg",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 49,
    "section": "Add Doppler repository",
    "subsection": "1. CLI Installation for Different Platforms",
    "usage": "Use as template for integration configuration",
    "examples": [
      "curl -sLf --retry 3 --tlsv1.2 --proto \"=https\" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | sudo gpg --dearmor -o /usr/share/keyrings/doppler-archive-keyring.gpg"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "echo \"deb [signed-by=/usr/share/keyrings/doppler-archive-keyring.gpg] https://packages.doppler.com/public/cli/deb/debian any-version main\" | sudo tee /etc/apt/sources.list.d/doppler-cli.list",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 50,
    "section": "Add Doppler repository",
    "subsection": "1. CLI Installation for Different Platforms",
    "usage": "Use as template for integration configuration",
    "examples": [
      "echo \"deb [signed-by=/usr/share/keyrings/doppler-archive-keyring.gpg] https://packages.doppler.com/public/cli/deb/debian any-version main\" | sudo tee /etc/apt/sources.list.d/doppler-cli.list"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "wget -q -t3 'https://packages.doppler.com/public/cli/rsa.8004D9FF50437357.key' -O /etc/apk/keys/[email protected]",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 59,
    "section": "Add Doppler repository key",
    "subsection": "1. CLI Installation for Different Platforms",
    "usage": "Use as template for integration configuration",
    "examples": [
      "wget -q -t3 'https://packages.doppler.com/public/cli/rsa.8004D9FF50437357.key' -O /etc/apk/keys/[email protected]"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "echo 'https://packages.doppler.com/public/cli/alpine/any-version/main' | tee -a /etc/apk/repositories",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 62,
    "section": "Add repository",
    "subsection": "1. CLI Installation for Different Platforms",
    "usage": "Use as template for integration configuration",
    "examples": [
      "echo 'https://packages.doppler.com/public/cli/alpine/any-version/main' | tee -a /etc/apk/repositories"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "sudo rpm --import 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key'",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 71,
    "section": "Import GPG key",
    "subsection": "1. CLI Installation for Different Platforms",
    "usage": "Use as template for integration configuration",
    "examples": [
      "sudo rpm --import 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key'"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "curl -sLf --retry 3 --tlsv1.2 --proto \"=https\" 'https://packages.doppler.com/public/cli/config.rpm.txt' | sudo tee /etc/yum.repos.d/doppler-cli.repo",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 74,
    "section": "Add repository and install",
    "subsection": "1. CLI Installation for Different Platforms",
    "usage": "Use as template for integration configuration",
    "examples": [
      "curl -sLf --retry 3 --tlsv1.2 --proto \"=https\" 'https://packages.doppler.com/public/cli/config.rpm.txt' | sudo tee /etc/yum.repos.d/doppler-cli.repo"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "curl -sLf --retry 3 --tlsv1.2 --proto \"=https\" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | gpg --dearmor -o /usr/share/keyrings/doppler-archive-keyring.gpg && \\",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 82,
    "section": "In your Dockerfile",
    "subsection": "1. CLI Installation for Different Platforms",
    "usage": "Use as template for integration configuration",
    "examples": [
      "curl -sLf --retry 3 --tlsv1.2 --proto \"=https\" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | gpg --dearmor -o /usr/share/keyrings/doppler-archive-keyring.gpg && \\"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "echo \"deb [signed-by=/usr/share/keyrings/doppler-archive-keyring.gpg] https://packages.doppler.com/public/cli/deb/debian any-version main\" | tee /etc/apt/sources.list.d/doppler-cli.list && \\",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 83,
    "section": "In your Dockerfile",
    "subsection": "1. CLI Installation for Different Platforms",
    "usage": "Use as template for integration configuration",
    "examples": [
      "echo \"deb [signed-by=/usr/share/keyrings/doppler-archive-keyring.gpg] https://packages.doppler.com/public/cli/deb/debian any-version main\" | tee /etc/apt/sources.list.d/doppler-cli.list && \\"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "# Login for local development",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 91,
    "section": "Login for local development",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "cli_login",
    "description": "CLI command: login command",
    "pattern": "doppler login",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 92,
    "section": "Login for local development",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Use doppler login for login operations",
    "examples": [
      "doppler login",
      "doppler login --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_login",
    "description": "Doppler CLI command: login",
    "pattern": "doppler login",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 92,
    "section": "Login for local development",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Execute login operations via CLI",
    "examples": [
      "doppler login"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "doppler setup",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 95,
    "section": "Setup project and config for current directory",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "cli_setup",
    "description": "CLI command: setup command",
    "pattern": "doppler setup",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 95,
    "section": "Setup project and config for current directory",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Use doppler setup for setup operations",
    "examples": [
      "doppler setup",
      "doppler setup --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_setup",
    "description": "Doppler CLI command: setup",
    "pattern": "doppler setup",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 95,
    "section": "Setup project and config for current directory",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Execute setup operations via CLI",
    "examples": [
      "doppler setup"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- node app.js",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 101,
    "section": "Run a single command with secrets injected",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- node app.js",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- node app.js",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 101,
    "section": "Run a single command with secrets injected",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- node app.js"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler run --project api --config production -- npm start",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 104,
    "section": "Run with specific project and config",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_run_--project",
    "description": "CLI command: run --project command",
    "pattern": "doppler run --project api --config production -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 104,
    "section": "Run with specific project and config",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Use doppler run --project for run operations",
    "examples": [
      "doppler run --project api --config production -- npm start",
      "doppler run --project --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--project",
    "description": "Doppler CLI command: run --project",
    "pattern": "doppler run --project api --config production -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 104,
    "section": "Run with specific project and config",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --project api --config production -- npm start"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--mount",
    "description": "CLI command: run --mount command",
    "pattern": "doppler run --mount .env -- python app.py",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 107,
    "section": "Run with mounted secrets file",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Use doppler run --mount for run operations",
    "examples": [
      "doppler run --mount .env -- python app.py",
      "doppler run --mount --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--mount",
    "description": "Doppler CLI command: run --mount",
    "pattern": "doppler run --mount .env -- python app.py",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 107,
    "section": "Run with mounted secrets file",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --mount .env -- python app.py"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets",
    "description": "CLI command: secrets command",
    "pattern": "doppler secrets",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 113,
    "section": "View all secrets in dashboard format",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Use doppler secrets for secrets operations",
    "examples": [
      "doppler secrets",
      "doppler secrets --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets",
    "description": "Doppler CLI command: secrets",
    "pattern": "doppler secrets",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 113,
    "section": "View all secrets in dashboard format",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_get",
    "description": "CLI command: secrets get command",
    "pattern": "doppler secrets get API_KEY --plain",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 116,
    "section": "Get a specific secret value",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Use doppler secrets get for secrets operations",
    "examples": [
      "doppler secrets get API_KEY --plain",
      "doppler secrets get --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "doppler secrets get API_KEY --plain",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 116,
    "section": "Get a specific secret value",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets get API_KEY --plain"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_get",
    "description": "CLI command: secrets get command",
    "pattern": "doppler secrets get API_KEY DATABASE_URL --plain",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 119,
    "section": "Get multiple secrets",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Use doppler secrets get for secrets operations",
    "examples": [
      "doppler secrets get API_KEY DATABASE_URL --plain",
      "doppler secrets get --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "doppler secrets get API_KEY DATABASE_URL --plain",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 119,
    "section": "Get multiple secrets",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets get API_KEY DATABASE_URL --plain"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --format json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 122,
    "section": "Download secrets in different formats",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --format json",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --format json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 122,
    "section": "Download secrets in different formats",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --format json"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --format yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 123,
    "section": "Download secrets in different formats",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --format yaml",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --format yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 123,
    "section": "Download secrets in different formats",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --format yaml"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --format env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 124,
    "section": "Download secrets in different formats",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --format env",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --format env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 124,
    "section": "Download secrets in different formats",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --format env"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "docker_secret_injection",
    "description": "Docker container secret injection using Doppler CLI",
    "pattern": "doppler secrets download --format docker",
    "category": "integration",
    "type": "container_deployment",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 125,
    "section": "Download secrets in different formats",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Inject secrets into Docker containers using Doppler CLI",
    "examples": [
      "doppler run -- docker build -t myapp .",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use Doppler CLI for secret injection",
      "Never bake secrets into images"
    ],
    "warnings": [
      "Ensure Doppler CLI is available in container"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --format docker",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 125,
    "section": "Download secrets in different formats",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --format docker",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --format docker",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 125,
    "section": "Download secrets in different formats",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --format docker"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set API_KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 131,
    "section": "Set a single secret interactively (recommended for sensitive values)",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set API_KEY",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set API_KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 131,
    "section": "Set a single secret interactively (recommended for sensitive values)",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set API_KEY"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set PORT=\"8080\" API_URL=\"https://api.example.com\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 134,
    "section": "Set multiple secrets at once",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set PORT=\"8080\" API_URL=\"https://api.example.com\"",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set PORT=\"8080\" API_URL=\"https://api.example.com\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 134,
    "section": "Set multiple secrets at once",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set PORT=\"8080\" API_URL=\"https://api.example.com\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "doppler secrets set PORT=\"8080\" API_URL=\"https://api.example.com\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 134,
    "section": "Set multiple secrets at once",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "doppler secrets set PORT=\"8080\" API_URL=\"https://api.example.com\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "cat certificate.pem | doppler secrets set TLS_CERT",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 137,
    "section": "Set secret from file",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "cat certificate.pem | doppler secrets set TLS_CERT"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_upload",
    "description": "CLI command: secrets upload command",
    "pattern": "doppler secrets upload .env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 140,
    "section": "Bulk upload from file",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Use doppler secrets upload for secrets operations",
    "examples": [
      "doppler secrets upload .env",
      "doppler secrets upload --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_upload",
    "description": "Doppler CLI command: secrets upload",
    "pattern": "doppler secrets upload .env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 140,
    "section": "Bulk upload from file",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets upload .env"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_upload",
    "description": "CLI command: secrets upload command",
    "pattern": "doppler secrets upload config.json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 141,
    "section": "Bulk upload from file",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Use doppler secrets upload for secrets operations",
    "examples": [
      "doppler secrets upload config.json",
      "doppler secrets upload --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_upload",
    "description": "Doppler CLI command: secrets upload",
    "pattern": "doppler secrets upload config.json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 141,
    "section": "Bulk upload from file",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets upload config.json"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_projects",
    "description": "CLI command: projects command",
    "pattern": "doppler projects",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 147,
    "section": "List all projects",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Use doppler projects for projects operations",
    "examples": [
      "doppler projects",
      "doppler projects --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_projects",
    "description": "Doppler CLI command: projects",
    "pattern": "doppler projects",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 147,
    "section": "List all projects",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Execute projects operations via CLI",
    "examples": [
      "doppler projects"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_projects_create",
    "description": "CLI command: projects create command",
    "pattern": "doppler projects create backend-api",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 150,
    "section": "Create a new project",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Use doppler projects create for projects operations",
    "examples": [
      "doppler projects create backend-api",
      "doppler projects create --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_projects_create",
    "description": "Doppler CLI command: projects create",
    "pattern": "doppler projects create backend-api",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 150,
    "section": "Create a new project",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Execute projects operations via CLI",
    "examples": [
      "doppler projects create backend-api"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_configs_--project",
    "description": "CLI command: configs --project command",
    "pattern": "doppler configs --project backend-api",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 153,
    "section": "List configs for a project",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Use doppler configs --project for configs operations",
    "examples": [
      "doppler configs --project backend-api",
      "doppler configs --project --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configs_--project",
    "description": "Doppler CLI command: configs --project",
    "pattern": "doppler configs --project backend-api",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 153,
    "section": "List configs for a project",
    "subsection": "2. Essential CLI Commands with Examples",
    "usage": "Execute configs operations via CLI",
    "examples": [
      "doppler configs --project backend-api"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_tui",
    "description": "CLI command: tui command",
    "pattern": "doppler tui",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 162,
    "section": "List configs for a project",
    "subsection": "3. TUI (Terminal UI) Features",
    "usage": "Use doppler tui for tui operations",
    "examples": [
      "doppler tui",
      "doppler tui --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_tui",
    "description": "Doppler CLI command: tui",
    "pattern": "doppler tui",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 162,
    "section": "List configs for a project",
    "subsection": "3. TUI (Terminal UI) Features",
    "usage": "Execute tui operations via CLI",
    "examples": [
      "doppler tui"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--mount",
    "description": "CLI command: run --mount command",
    "pattern": "doppler run --mount .env -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 207,
    "section": "Mount as .env file (auto-cleaned after process exits)",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Use doppler run --mount for run operations",
    "examples": [
      "doppler run --mount .env -- npm start",
      "doppler run --mount --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--mount",
    "description": "Doppler CLI command: run --mount",
    "pattern": "doppler run --mount .env -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 207,
    "section": "Mount as .env file (auto-cleaned after process exits)",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --mount .env -- npm start"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--mount",
    "description": "CLI command: run --mount command",
    "pattern": "doppler run --mount secrets.json --mount-format json -- python app.py",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 210,
    "section": "Mount as JSON file",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Use doppler run --mount for run operations",
    "examples": [
      "doppler run --mount secrets.json --mount-format json -- python app.py",
      "doppler run --mount --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--mount",
    "description": "Doppler CLI command: run --mount",
    "pattern": "doppler run --mount secrets.json --mount-format json -- python app.py",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 210,
    "section": "Mount as JSON file",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --mount secrets.json --mount-format json -- python app.py"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--mount",
    "description": "CLI command: run --mount command",
    "pattern": "doppler run --mount config.txt --mount-template 'api_key={{.API_KEY}}' -- ./app",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 213,
    "section": "Custom template mounting",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Use doppler run --mount for run operations",
    "examples": [
      "doppler run --mount config.txt --mount-template 'api_key={{.API_KEY}}' -- ./app",
      "doppler run --mount --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--mount",
    "description": "Doppler CLI command: run --mount",
    "pattern": "doppler run --mount config.txt --mount-template 'api_key={{.API_KEY}}' -- ./app",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 213,
    "section": "Custom template mounting",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --mount config.txt --mount-template 'api_key={{.API_KEY}}' -- ./app"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "doppler run --mount config.txt --mount-template 'api_key={{.API_KEY}}' -- ./app",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 213,
    "section": "Custom template mounting",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Use as template for integration configuration",
    "examples": [
      "doppler run --mount config.txt --mount-template 'api_key={{.API_KEY}}' -- ./app"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_secrets_get",
    "description": "CLI command: secrets get command",
    "pattern": "doppler secrets get DATABASE_URL --plain",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 219,
    "section": "Get single secret",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Use doppler secrets get for secrets operations",
    "examples": [
      "doppler secrets get DATABASE_URL --plain",
      "doppler secrets get --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "doppler secrets get DATABASE_URL --plain",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 219,
    "section": "Get single secret",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets get DATABASE_URL --plain"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_get",
    "description": "CLI command: secrets get command",
    "pattern": "doppler secrets get --json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 222,
    "section": "Get as JSON",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Use doppler secrets get for secrets operations",
    "examples": [
      "doppler secrets get --json",
      "doppler secrets get --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "doppler secrets get --json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 222,
    "section": "Get as JSON",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets get --json"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format env | grep AWS",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 225,
    "section": "Filter secrets",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format env | grep AWS",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format env | grep AWS",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 225,
    "section": "Filter secrets",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format env | grep AWS"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format json | jq '.AWS_ACCESS_KEY'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 226,
    "section": "Filter secrets",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format json | jq '.AWS_ACCESS_KEY'",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format json | jq '.AWS_ACCESS_KEY'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 226,
    "section": "Filter secrets",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format json | jq '.AWS_ACCESS_KEY'"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "**4. Shell Export**",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 229,
    "section": "Filter secrets",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- sh -c 'bash'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 232,
    "section": "Create child shell with secrets",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- sh -c 'bash'",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- sh -c 'bash'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 232,
    "section": "Create child shell with secrets",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- sh -c 'bash'"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "# Export to current shell (use with caution)",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 234,
    "section": "Export to current shell (use with caution)",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "export $(doppler secrets download --no-file --format env)",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 235,
    "section": "Export to current shell (use with caution)",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "export $(doppler secrets download --no-file --format env)"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export $(doppler secrets download --no-file --format env)",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 235,
    "section": "Export to current shell (use with caution)",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set API_KEY --visibility restricted",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 246,
    "section": "Set with specific visibility",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set API_KEY --visibility restricted",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set API_KEY --visibility restricted",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 246,
    "section": "Set with specific visibility",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set API_KEY --visibility restricted"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set NODE_ENV=\"production\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 252,
    "section": "Single secret",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set NODE_ENV=\"production\"",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set NODE_ENV=\"production\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 252,
    "section": "Single secret",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set NODE_ENV=\"production\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set DB_HOST=\"localhost\" DB_PORT=\"5432\" DB_USER=\"admin\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 255,
    "section": "Multiple secrets",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set DB_HOST=\"localhost\" DB_PORT=\"5432\" DB_USER=\"admin\"",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set DB_HOST=\"localhost\" DB_PORT=\"5432\" DB_USER=\"admin\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 255,
    "section": "Multiple secrets",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set DB_HOST=\"localhost\" DB_PORT=\"5432\" DB_USER=\"admin\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "echo \"secret_value\" | doppler secrets set MY_SECRET",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 261,
    "section": "From stdin",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "echo \"secret_value\" | doppler secrets set MY_SECRET"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "cat private_key.pem | doppler secrets set PRIVATE_KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 264,
    "section": "From file",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "cat private_key.pem | doppler secrets set PRIVATE_KEY"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_upload",
    "description": "CLI command: secrets upload command",
    "pattern": "doppler secrets upload .env.production",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 267,
    "section": "Bulk upload",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Use doppler secrets upload for secrets operations",
    "examples": [
      "doppler secrets upload .env.production",
      "doppler secrets upload --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_upload",
    "description": "Doppler CLI command: secrets upload",
    "pattern": "doppler secrets upload .env.production",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 267,
    "section": "Bulk upload",
    "subsection": "4. Methods for Accessing and Setting Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets upload .env.production"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--command",
    "description": "CLI command: run --command command",
    "pattern": "doppler run --command=\"npm test && npm start\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 275,
    "section": "Using && (runs second command only if first succeeds)",
    "subsection": "5. Running Multiple Commands with Doppler",
    "usage": "Use doppler run --command for run operations",
    "examples": [
      "doppler run --command=\"npm test && npm start\"",
      "doppler run --command --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--command",
    "description": "Doppler CLI command: run --command",
    "pattern": "doppler run --command=\"npm test && npm start\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 275,
    "section": "Using && (runs second command only if first succeeds)",
    "subsection": "5. Running Multiple Commands with Doppler",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --command=\"npm test && npm start\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--command",
    "description": "CLI command: run --command command",
    "pattern": "doppler run --command=\"npm install; npm test; npm start\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 278,
    "section": "Using ; (runs all commands regardless)",
    "subsection": "5. Running Multiple Commands with Doppler",
    "usage": "Use doppler run --command for run operations",
    "examples": [
      "doppler run --command=\"npm install; npm test; npm start\"",
      "doppler run --command --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--command",
    "description": "Doppler CLI command: run --command",
    "pattern": "doppler run --command=\"npm install; npm test; npm start\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 278,
    "section": "Using ; (runs all commands regardless)",
    "subsection": "5. Running Multiple Commands with Doppler",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --command=\"npm install; npm test; npm start\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--command",
    "description": "CLI command: run --command command",
    "pattern": "doppler run --command=\"npm start || npm run fallback\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 281,
    "section": "Using || (runs second command only if first fails)",
    "subsection": "5. Running Multiple Commands with Doppler",
    "usage": "Use doppler run --command for run operations",
    "examples": [
      "doppler run --command=\"npm start || npm run fallback\"",
      "doppler run --command --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--command",
    "description": "Doppler CLI command: run --command",
    "pattern": "doppler run --command=\"npm start || npm run fallback\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 281,
    "section": "Using || (runs second command only if first fails)",
    "subsection": "5. Running Multiple Commands with Doppler",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --command=\"npm start || npm run fallback\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--command",
    "description": "CLI command: run --command command",
    "pattern": "doppler run --command=\"./setup.sh && ./main-app || ./error-handler; ./cleanup.sh\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 284,
    "section": "Complex example with cleanup",
    "subsection": "5. Running Multiple Commands with Doppler",
    "usage": "Use doppler run --command for run operations",
    "examples": [
      "doppler run --command=\"./setup.sh && ./main-app || ./error-handler; ./cleanup.sh\"",
      "doppler run --command --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--command",
    "description": "Doppler CLI command: run --command",
    "pattern": "doppler run --command=\"./setup.sh && ./main-app || ./error-handler; ./cleanup.sh\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 284,
    "section": "Complex example with cleanup",
    "subsection": "5. Running Multiple Commands with Doppler",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --command=\"./setup.sh && ./main-app || ./error-handler; ./cleanup.sh\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- bash deploy.sh",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 290,
    "section": "Run a shell script with secrets",
    "subsection": "5. Running Multiple Commands with Doppler",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- bash deploy.sh",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "doppler run -- bash deploy.sh",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 290,
    "section": "Run a shell script with secrets",
    "subsection": "5. Running Multiple Commands with Doppler",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- bash deploy.sh",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 290,
    "section": "Run a shell script with secrets",
    "subsection": "5. Running Multiple Commands with Doppler",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- bash deploy.sh"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--command",
    "description": "CLI command: run --command command",
    "pattern": "doppler run --command=\"./pre-deploy.sh && ./deploy.sh && ./post-deploy.sh\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 293,
    "section": "Run multiple scripts in sequence",
    "subsection": "5. Running Multiple Commands with Doppler",
    "usage": "Use doppler run --command for run operations",
    "examples": [
      "doppler run --command=\"./pre-deploy.sh && ./deploy.sh && ./post-deploy.sh\"",
      "doppler run --command --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "doppler run --command=\"./pre-deploy.sh && ./deploy.sh && ./post-deploy.sh\"",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 293,
    "section": "Run multiple scripts in sequence",
    "subsection": "5. Running Multiple Commands with Doppler",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "command_run_--command",
    "description": "Doppler CLI command: run --command",
    "pattern": "doppler run --command=\"./pre-deploy.sh && ./deploy.sh && ./post-deploy.sh\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 293,
    "section": "Run multiple scripts in sequence",
    "subsection": "5. Running Multiple Commands with Doppler",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --command=\"./pre-deploy.sh && ./deploy.sh && ./post-deploy.sh\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--watch",
    "description": "CLI command: run --watch command",
    "pattern": "doppler run --watch -- node server.js",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 308,
    "section": "Add --watch flag to doppler run",
    "subsection": "6. Automatic Restart Functionality",
    "usage": "Use doppler run --watch for run operations",
    "examples": [
      "doppler run --watch -- node server.js",
      "doppler run --watch --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--watch",
    "description": "Doppler CLI command: run --watch",
    "pattern": "doppler run --watch -- node server.js",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 308,
    "section": "Add --watch flag to doppler run",
    "subsection": "6. Automatic Restart Functionality",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --watch -- node server.js"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--watch",
    "description": "CLI command: run --watch command",
    "pattern": "doppler run --watch --mount .env -- python app.py",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 311,
    "section": "With mounted secrets",
    "subsection": "6. Automatic Restart Functionality",
    "usage": "Use doppler run --watch for run operations",
    "examples": [
      "doppler run --watch --mount .env -- python app.py",
      "doppler run --watch --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--watch",
    "description": "Doppler CLI command: run --watch",
    "pattern": "doppler run --watch --mount .env -- python app.py",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 311,
    "section": "With mounted secrets",
    "subsection": "6. Automatic Restart Functionality",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --watch --mount .env -- python app.py"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "- For production, use Doppler Kubernetes Operator instead",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 328,
    "section": "With mounted secrets",
    "subsection": "6. Automatic Restart Functionality",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "# Development server with auto-restart",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 332,
    "section": "Development server with auto-restart",
    "subsection": "6. Automatic Restart Functionality",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "cli_run_--watch",
    "description": "CLI command: run --watch command",
    "pattern": "doppler run --watch -- npm run dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 333,
    "section": "Development server with auto-restart",
    "subsection": "6. Automatic Restart Functionality",
    "usage": "Use doppler run --watch for run operations",
    "examples": [
      "doppler run --watch -- npm run dev",
      "doppler run --watch --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--watch",
    "description": "Doppler CLI command: run --watch",
    "pattern": "doppler run --watch -- npm run dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 333,
    "section": "Development server with auto-restart",
    "subsection": "6. Automatic Restart Functionality",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --watch -- npm run dev"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "docker_secret_injection",
    "description": "Docker container secret injection using Doppler CLI",
    "pattern": "doppler run --watch -- docker-compose up",
    "category": "integration",
    "type": "container_deployment",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 336,
    "section": "Docker container with restart",
    "subsection": "6. Automatic Restart Functionality",
    "usage": "Inject secrets into Docker containers using Doppler CLI",
    "examples": [
      "doppler run -- docker build -t myapp .",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use Doppler CLI for secret injection",
      "Never bake secrets into images"
    ],
    "warnings": [
      "Ensure Doppler CLI is available in container"
    ]
  },
  {
    "name": "cli_run_--watch",
    "description": "CLI command: run --watch command",
    "pattern": "doppler run --watch -- docker-compose up",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 336,
    "section": "Docker container with restart",
    "subsection": "6. Automatic Restart Functionality",
    "usage": "Use doppler run --watch for run operations",
    "examples": [
      "doppler run --watch -- docker-compose up",
      "doppler run --watch --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--watch",
    "description": "Doppler CLI command: run --watch",
    "pattern": "doppler run --watch -- docker-compose up",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 336,
    "section": "Docker container with restart",
    "subsection": "6. Automatic Restart Functionality",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --watch -- docker-compose up"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--watch",
    "description": "CLI command: run --watch command",
    "pattern": "doppler run --watch --command=\"./api-server & ./worker & wait\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 339,
    "section": "Multiple services with restart",
    "subsection": "6. Automatic Restart Functionality",
    "usage": "Use doppler run --watch for run operations",
    "examples": [
      "doppler run --watch --command=\"./api-server & ./worker & wait\"",
      "doppler run --watch --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--watch",
    "description": "Doppler CLI command: run --watch",
    "pattern": "doppler run --watch --command=\"./api-server & ./worker & wait\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 339,
    "section": "Multiple services with restart",
    "subsection": "6. Automatic Restart Functionality",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --watch --command=\"./api-server & ./worker & wait\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "2. **Development Workflow:**",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 349,
    "section": "Multiple services with restart",
    "subsection": "Best Practices",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "- Use `doppler setup` to link directories to specific projects/configs",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 350,
    "section": "Multiple services with restart",
    "subsection": "Best Practices",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "command_setup",
    "description": "Doppler CLI command: setup",
    "pattern": "- Use `doppler setup` to link directories to specific projects/configs",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 350,
    "section": "Multiple services with restart",
    "subsection": "Best Practices",
    "usage": "Execute setup operations via CLI",
    "examples": [
      "- Use `doppler setup` to link directories to specific projects/configs"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "- Use `--watch` flag during development for automatic updates",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 352,
    "section": "Multiple services with restart",
    "subsection": "Best Practices",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "- Use service tokens instead of personal tokens",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 355,
    "section": "Multiple services with restart",
    "subsection": "Best Practices",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "personal_token_security",
    "description": "Personal tokens for development - should not be used in production",
    "pattern": "- Use service tokens instead of personal tokens",
    "category": "security",
    "type": "token_management",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 355,
    "section": "Multiple services with restart",
    "subsection": "Best Practices",
    "usage": "Personal tokens for local development only",
    "examples": [
      "doppler login",
      "DOPPLER_TOKEN=dp.pt.development_token"
    ],
    "recommendations": [
      "Use only for local development",
      "Login via CLI for better security"
    ],
    "warnings": [
      "Do not use personal tokens in CI/CD or production"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "- Consider using Doppler integrations for production deployments",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 357,
    "section": "Multiple services with restart",
    "subsection": "Best Practices",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "- Test commands locally before deploying",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 362,
    "section": "Multiple services with restart",
    "subsection": "Best Practices",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "cli_login",
    "description": "CLI command: login command",
    "pattern": "doppler login                              # Authenticate",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 368,
    "section": "Setup",
    "subsection": "Quick Reference",
    "usage": "Use doppler login for login operations",
    "examples": [
      "doppler login                              # Authenticate",
      "doppler login --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_login",
    "description": "Doppler CLI command: login",
    "pattern": "doppler login                              # Authenticate",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 368,
    "section": "Setup",
    "subsection": "Quick Reference",
    "usage": "Execute login operations via CLI",
    "examples": [
      "doppler login                              # Authenticate"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "doppler setup                              # Configure project/config",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 369,
    "section": "Setup",
    "subsection": "Quick Reference",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "cli_setup",
    "description": "CLI command: setup command",
    "pattern": "doppler setup                              # Configure project/config",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 369,
    "section": "Setup",
    "subsection": "Quick Reference",
    "usage": "Use doppler setup for setup operations",
    "examples": [
      "doppler setup                              # Configure project/config",
      "doppler setup --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_setup",
    "description": "Doppler CLI command: setup",
    "pattern": "doppler setup                              # Configure project/config",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 369,
    "section": "Setup",
    "subsection": "Quick Reference",
    "usage": "Execute setup operations via CLI",
    "examples": [
      "doppler setup                              # Configure project/config"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- npm start                   # Basic run",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 372,
    "section": "Run",
    "subsection": "Quick Reference",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- npm start                   # Basic run",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- npm start                   # Basic run",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 372,
    "section": "Run",
    "subsection": "Quick Reference",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- npm start                   # Basic run"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--mount",
    "description": "CLI command: run --mount command",
    "pattern": "doppler run --mount .env -- python app.py  # With mounted file",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 373,
    "section": "Run",
    "subsection": "Quick Reference",
    "usage": "Use doppler run --mount for run operations",
    "examples": [
      "doppler run --mount .env -- python app.py  # With mounted file",
      "doppler run --mount --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--mount",
    "description": "Doppler CLI command: run --mount",
    "pattern": "doppler run --mount .env -- python app.py  # With mounted file",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 373,
    "section": "Run",
    "subsection": "Quick Reference",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --mount .env -- python app.py  # With mounted file"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--watch",
    "description": "CLI command: run --watch command",
    "pattern": "doppler run --watch -- node server.js      # With auto-restart",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 374,
    "section": "Run",
    "subsection": "Quick Reference",
    "usage": "Use doppler run --watch for run operations",
    "examples": [
      "doppler run --watch -- node server.js      # With auto-restart",
      "doppler run --watch --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--watch",
    "description": "Doppler CLI command: run --watch",
    "pattern": "doppler run --watch -- node server.js      # With auto-restart",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 374,
    "section": "Run",
    "subsection": "Quick Reference",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --watch -- node server.js      # With auto-restart"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets",
    "description": "CLI command: secrets command",
    "pattern": "doppler secrets                            # View all",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 377,
    "section": "Secrets",
    "subsection": "Quick Reference",
    "usage": "Use doppler secrets for secrets operations",
    "examples": [
      "doppler secrets                            # View all",
      "doppler secrets --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets",
    "description": "Doppler CLI command: secrets",
    "pattern": "doppler secrets                            # View all",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 377,
    "section": "Secrets",
    "subsection": "Quick Reference",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets                            # View all"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_get",
    "description": "CLI command: secrets get command",
    "pattern": "doppler secrets get API_KEY --plain        # Get one",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 378,
    "section": "Secrets",
    "subsection": "Quick Reference",
    "usage": "Use doppler secrets get for secrets operations",
    "examples": [
      "doppler secrets get API_KEY --plain        # Get one",
      "doppler secrets get --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "doppler secrets get API_KEY --plain        # Get one",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 378,
    "section": "Secrets",
    "subsection": "Quick Reference",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets get API_KEY --plain        # Get one"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set API_KEY                # Set interactively",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 379,
    "section": "Secrets",
    "subsection": "Quick Reference",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set API_KEY                # Set interactively",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set API_KEY                # Set interactively",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 379,
    "section": "Secrets",
    "subsection": "Quick Reference",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set API_KEY                # Set interactively"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_upload",
    "description": "CLI command: secrets upload command",
    "pattern": "doppler secrets upload .env                # Bulk upload",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 380,
    "section": "Secrets",
    "subsection": "Quick Reference",
    "usage": "Use doppler secrets upload for secrets operations",
    "examples": [
      "doppler secrets upload .env                # Bulk upload",
      "doppler secrets upload --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_upload",
    "description": "Doppler CLI command: secrets upload",
    "pattern": "doppler secrets upload .env                # Bulk upload",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 380,
    "section": "Secrets",
    "subsection": "Quick Reference",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets upload .env                # Bulk upload"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_tui",
    "description": "CLI command: tui command",
    "pattern": "doppler tui                                # Launch interactive UI",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 383,
    "section": "TUI",
    "subsection": "Quick Reference",
    "usage": "Use doppler tui for tui operations",
    "examples": [
      "doppler tui                                # Launch interactive UI",
      "doppler tui --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_tui",
    "description": "Doppler CLI command: tui",
    "pattern": "doppler tui                                # Launch interactive UI",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 383,
    "section": "TUI",
    "subsection": "Quick Reference",
    "usage": "Execute tui operations via CLI",
    "examples": [
      "doppler tui                                # Launch interactive UI"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "file_doppler_cli-guide",
    "description": "Comprehensive guide: doppler-cli-guide.md",
    "pattern": "Documentation file: doppler-cli-guide.md",
    "category": "api_usage",
    "type": "documentation",
    "complexity": "expert",
    "safety": "safe",
    "filename": "doppler-cli-guide.md",
    "lineNumber": 1,
    "section": "file_overview",
    "subsection": "",
    "usage": "Reference guide for doppler cli-guide",
    "examples": [
      "Study doppler-cli-guide.md for detailed information"
    ],
    "recommendations": [
      "Follow practices outlined in doppler-cli-guide.md"
    ],
    "warnings": [],
    "topics": [
      "Overview",
      "1. CLI Installation for Different Platforms",
      "2. Essential CLI Commands with Examples",
      "3. TUI (Terminal UI) Features",
      "4. Methods for Accessing and Setting Secrets",
      "5. Running Multiple Commands with Doppler",
      "6. Automatic Restart Functionality",
      "Best Practices",
      "Quick Reference"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "---",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 1,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "---"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "description: \"Comprehensive introduction to Doppler SecretOps Platform covering core concepts, setup process, workplace structure, and best practices for secrets management\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 3,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "description: \"Comprehensive introduction to Doppler SecretOps Platform covering core concepts, setup process, workplace structure, and best practices for secrets management\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "tags: [\"doppler\", \"getting-started\", \"setup\", \"secretops\", \"onboarding\", \"basics\"]",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "tags: [\"doppler\", \"getting-started\", \"setup\", \"secretops\", \"onboarding\", \"basics\"]"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "Doppler is a SecretOps Platform designed to simplify secrets management for development and production environments. It provides a centralized solution for managing application configurations and secrets across teams and environments.",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 26,
    "section": "Doppler: Complete Getting Started Guide",
    "subsection": "What is Doppler?",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "Doppler is a SecretOps Platform designed to simplify secrets management for development and production environments. It provides a centralized solution for managing application configurations and secrets across teams and environments.",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 26,
    "section": "Doppler: Complete Getting Started Guide",
    "subsection": "What is Doppler?",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "Most teams start by managing secrets with `.env` files or environment variables. However, this approach quickly becomes unmanageable as:",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 29,
    "section": "Doppler: Complete Getting Started Guide",
    "subsection": "What is Doppler?",
    "usage": "Use as template for integration configuration",
    "examples": [
      "Most teams start by managing secrets with `.env` files or environment variables. However, this approach quickly becomes unmanageable as:"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- **Centralized Management**: Single source of truth for all secrets and configurations",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 40,
    "section": "Doppler: Complete Getting Started Guide",
    "subsection": "Core Value Proposition",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- **Centralized Management**: Single source of truth for all secrets and configurations"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- **Security**: Fine-grained access controls and audit logs",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 41,
    "section": "Doppler: Complete Getting Started Guide",
    "subsection": "Core Value Proposition",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "environment_promotion_strategy",
    "description": "Best practices for promoting secrets between environments",
    "pattern": "3. **Environments**: Map to deployment stages (dev, staging, production)",
    "category": "best_practices",
    "type": "environment_management",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 58,
    "section": "Doppler: Complete Getting Started Guide",
    "subsection": "Key Concepts and Terminology",
    "usage": "Systematically promote secrets from development to production",
    "examples": [
      "doppler secrets download --no-file -c dev | doppler secrets upload -c staging",
      "Exclude environment-specific secrets like DATABASE_URL"
    ],
    "recommendations": [
      "Test in staging before production",
      "Exclude environment-specific secrets"
    ],
    "warnings": [
      "Always validate promoted secrets before deployment"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "3. **Environments**: Map to deployment stages (dev, staging, production)",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 58,
    "section": "Doppler: Complete Getting Started Guide",
    "subsection": "Key Concepts and Terminology",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "4. **Configs**: Store actual secrets and configurations",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 59,
    "section": "Doppler: Complete Getting Started Guide",
    "subsection": "Key Concepts and Terminology",
    "usage": "Use as template for integration configuration",
    "examples": [
      "4. **Configs**: Store actual secrets and configurations"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- Fine-grained permissions for team members",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 65,
    "section": "Doppler: Complete Getting Started Guide",
    "subsection": "Key Concepts and Terminology",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- Audit existing `.env` files",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 77,
    "section": "Doppler: Complete Getting Started Guide",
    "subsection": "Initial Setup Process",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "- Development",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 88,
    "section": "Doppler: Complete Getting Started Guide",
    "subsection": "Initial Setup Process",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "- Development environments",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 94,
    "section": "Doppler: Complete Getting Started Guide",
    "subsection": "Initial Setup Process",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "│   ├── Environment: development",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 107,
    "section": "Doppler: Complete Getting Started Guide",
    "subsection": "Workplace and Project Structure",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "environment_promotion_strategy",
    "description": "Best practices for promoting secrets between environments",
    "pattern": "│   ├── Environment: staging",
    "category": "best_practices",
    "type": "environment_management",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 108,
    "section": "Doppler: Complete Getting Started Guide",
    "subsection": "Workplace and Project Structure",
    "usage": "Systematically promote secrets from development to production",
    "examples": [
      "doppler secrets download --no-file -c dev | doppler secrets upload -c staging",
      "Exclude environment-specific secrets like DATABASE_URL"
    ],
    "recommendations": [
      "Test in staging before production",
      "Exclude environment-specific secrets"
    ],
    "warnings": [
      "Always validate promoted secrets before deployment"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "├── Environment: development",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 117,
    "section": "Doppler: Complete Getting Started Guide",
    "subsection": "Workplace and Project Structure",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "### Project Naming Best Practices",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 121,
    "section": "Doppler: Complete Getting Started Guide",
    "subsection": "Workplace and Project Structure",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "environment_promotion_strategy",
    "description": "Best practices for promoting secrets between environments",
    "pattern": "├── Environment: staging",
    "category": "best_practices",
    "type": "environment_management",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 154,
    "section": "Doppler: Complete Getting Started Guide",
    "subsection": "Workplace and Project Structure",
    "usage": "Systematically promote secrets from development to production",
    "examples": [
      "doppler secrets download --no-file -c dev | doppler secrets upload -c staging",
      "Exclude environment-specific secrets like DATABASE_URL"
    ],
    "recommendations": [
      "Test in staging before production",
      "Exclude environment-specific secrets"
    ],
    "warnings": [
      "Always validate promoted secrets before deployment"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "1. **Development**: For local development and testing",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 168,
    "section": "Doppler: Complete Getting Started Guide",
    "subsection": "Environment Configurations",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "environment_promotion_strategy",
    "description": "Best practices for promoting secrets between environments",
    "pattern": "2. **Staging**: Pre-production testing environment",
    "category": "best_practices",
    "type": "environment_management",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 169,
    "section": "Doppler: Complete Getting Started Guide",
    "subsection": "Environment Configurations",
    "usage": "Systematically promote secrets from development to production",
    "examples": [
      "doppler secrets download --no-file -c dev | doppler secrets upload -c staging",
      "Exclude environment-specific secrets like DATABASE_URL"
    ],
    "recommendations": [
      "Test in staging before production",
      "Exclude environment-specific secrets"
    ],
    "warnings": [
      "Always validate promoted secrets before deployment"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "3. **Naming Restrictions**",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 183,
    "section": "Doppler: Complete Getting Started Guide",
    "subsection": "Environment Configurations",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "# Development",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 191,
    "section": "Development",
    "subsection": "Environment Configurations",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "### 1. Naming Conventions",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 209,
    "section": "Production",
    "subsection": "Best Practices",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- Regularly audit access permissions",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 221,
    "section": "Production",
    "subsection": "Best Practices",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- Regularly audit access permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 221,
    "section": "Production",
    "subsection": "Best Practices",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "- Keep production configs minimal and secure",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 226,
    "section": "Production",
    "subsection": "Best Practices",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "- Start with development environment",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 230,
    "section": "Production",
    "subsection": "Best Practices",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "environment_promotion_strategy",
    "description": "Best practices for promoting secrets between environments",
    "pattern": "# Environments: dev, staging, production",
    "category": "best_practices",
    "type": "environment_management",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 240,
    "section": "Environments: dev, staging, production",
    "subsection": "Practical Examples",
    "usage": "Systematically promote secrets from development to production",
    "examples": [
      "doppler secrets download --no-file -c dev | doppler secrets upload -c staging",
      "Exclude environment-specific secrets like DATABASE_URL"
    ],
    "recommendations": [
      "Test in staging before production",
      "Exclude environment-specific secrets"
    ],
    "warnings": [
      "Always validate promoted secrets before deployment"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "# Development Config",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 242,
    "section": "Development Config",
    "subsection": "Practical Examples",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "# Development Config",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 242,
    "section": "Development Config",
    "subsection": "Practical Examples",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "# Staging Config",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 249,
    "section": "Staging Config",
    "subsection": "Practical Examples",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "# Production Config",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 256,
    "section": "Production Config",
    "subsection": "Practical Examples",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "│   ├── development",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 270,
    "section": "Workplace Structure",
    "subsection": "Practical Examples",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "├── development",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 282,
    "section": "Workplace Structure",
    "subsection": "Practical Examples",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "### Example 3: Multi-Region Deployment",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 286,
    "section": "Workplace Structure",
    "subsection": "Practical Examples",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "github_actions_integration",
    "description": "GitHub Actions workflow integration with Doppler secrets",
    "pattern": "# GitHub Actions Example",
    "category": "integration",
    "type": "ci_cd_workflow",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 301,
    "section": "GitHub Actions Example",
    "subsection": "Practical Examples",
    "usage": "Integrate Doppler secrets into GitHub Actions workflows",
    "examples": [
      "uses: dopplerhq/secrets-fetch-action@v1.1.0",
      "with: doppler-token: ${{ secrets.DOPPLER_TOKEN }}"
    ],
    "recommendations": [
      "Use GitHub Actions integration action",
      "Store Doppler token in GitHub Secrets"
    ],
    "warnings": [
      "Never expose Doppler tokens in workflow logs"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "name: Deploy",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 302,
    "section": "GitHub Actions Example",
    "subsection": "Practical Examples",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "deploy:",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 308,
    "section": "GitHub Actions Example",
    "subsection": "Practical Examples",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "curl -Ls https://cli.doppler.com/install.sh | sh",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 314,
    "section": "GitHub Actions Example",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "curl -Ls https://cli.doppler.com/install.sh | sh"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "- name: Deploy with Doppler",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 315,
    "section": "GitHub Actions Example",
    "subsection": "Practical Examples",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "cli_run_--token",
    "description": "CLI command: run --token command",
    "pattern": "doppler run --token ${{ secrets.DOPPLER_TOKEN }} -- npm run deploy",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 317,
    "section": "GitHub Actions Example",
    "subsection": "Practical Examples",
    "usage": "Use doppler run --token for run operations",
    "examples": [
      "doppler run --token ${{ secrets.DOPPLER_TOKEN }} -- npm run deploy",
      "doppler run --token --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "doppler run --token ${{ secrets.DOPPLER_TOKEN }} -- npm run deploy",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 317,
    "section": "GitHub Actions Example",
    "subsection": "Practical Examples",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "command_run_--token",
    "description": "Doppler CLI command: run --token",
    "pattern": "doppler run --token ${{ secrets.DOPPLER_TOKEN }} -- npm run deploy",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 317,
    "section": "GitHub Actions Example",
    "subsection": "Practical Examples",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --token ${{ secrets.DOPPLER_TOKEN }} -- npm run deploy"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "doppler run --token ${{ secrets.DOPPLER_TOKEN }} -- npm run deploy",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 317,
    "section": "GitHub Actions Example",
    "subsection": "Practical Examples",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "doppler run --token ${{ secrets.DOPPLER_TOKEN }} -- npm run deploy",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 317,
    "section": "GitHub Actions Example",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "doppler run --token ${{ secrets.DOPPLER_TOKEN }} -- npm run deploy"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "1. **Watch the Introduction Video**: Understanding secrets management challenges",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 322,
    "section": "GitHub Actions Example",
    "subsection": "Next Steps",
    "usage": "Use as template for integration configuration",
    "examples": [
      "1. **Watch the Introduction Video**: Understanding secrets management challenges"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "4. **Install the CLI**: Begin local development with Doppler",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 325,
    "section": "GitHub Actions Example",
    "subsection": "Next Steps",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "6. **Integrate Your Tools**: Connect your existing development workflow",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 327,
    "section": "GitHub Actions Example",
    "subsection": "Next Steps",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- [Doppler Documentation](https://docs.doppler.com)",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 331,
    "section": "GitHub Actions Example",
    "subsection": "Resources",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- [Doppler Documentation](https://docs.doppler.com)"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- [CLI Installation Guide](https://docs.doppler.com/docs/cli)",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 332,
    "section": "GitHub Actions Example",
    "subsection": "Resources",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- [CLI Installation Guide](https://docs.doppler.com/docs/cli)"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- [Integration Guides](https://docs.doppler.com/docs/integrations)",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 333,
    "section": "GitHub Actions Example",
    "subsection": "Resources",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- [Integration Guides](https://docs.doppler.com/docs/integrations)"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- [Best Practices](https://docs.doppler.com/docs/best-practices)",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 334,
    "section": "GitHub Actions Example",
    "subsection": "Resources",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- [Best Practices](https://docs.doppler.com/docs/best-practices)"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "file_doppler_getting-started-guide",
    "description": "Comprehensive guide: doppler-getting-started-guide.md",
    "pattern": "Documentation file: doppler-getting-started-guide.md",
    "category": "installation",
    "type": "documentation",
    "complexity": "high",
    "safety": "safe",
    "filename": "doppler-getting-started-guide.md",
    "lineNumber": 1,
    "section": "file_overview",
    "subsection": "",
    "usage": "Reference guide for doppler getting-started-guide",
    "examples": [
      "Study doppler-getting-started-guide.md for detailed information"
    ],
    "recommendations": [
      "Follow practices outlined in doppler-getting-started-guide.md"
    ],
    "warnings": [],
    "topics": [
      "Table of Contents",
      "What is Doppler?",
      "Core Value Proposition",
      "Key Concepts and Terminology",
      "Initial Setup Process",
      "Workplace and Project Structure",
      "Environment Configurations",
      "Best Practices",
      "Practical Examples",
      "Next Steps"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "---",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 1,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "---"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "github_actions_integration",
    "description": "GitHub Actions workflow integration with Doppler secrets",
    "pattern": "description: \"Learn how to integrate Doppler with GitHub Actions, Codespaces, Dependabot, and implement access scoping, fallback mechanisms, and multi-workplace management\"",
    "category": "integration",
    "type": "ci_cd_workflow",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 3,
    "section": "",
    "subsection": "",
    "usage": "Integrate Doppler secrets into GitHub Actions workflows",
    "examples": [
      "uses: dopplerhq/secrets-fetch-action@v1.1.0",
      "with: doppler-token: ${{ secrets.DOPPLER_TOKEN }}"
    ],
    "recommendations": [
      "Use GitHub Actions integration action",
      "Store Doppler token in GitHub Secrets"
    ],
    "warnings": [
      "Never expose Doppler tokens in workflow logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "tags: [\"doppler\", \"integration\", \"github-actions\", \"codespaces\", \"dependabot\", \"ci-cd\"]",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "tags: [\"doppler\", \"integration\", \"github-actions\", \"codespaces\", \"dependabot\", \"ci-cd\"]"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "github_actions_integration",
    "description": "GitHub Actions workflow integration with Doppler secrets",
    "pattern": "1. [GitHub Actions Integration](#github-actions-integration)",
    "category": "integration",
    "type": "ci_cd_workflow",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 15,
    "section": "Doppler Integration Patterns: Comprehensive Implementation Guide",
    "subsection": "Table of Contents",
    "usage": "Integrate Doppler secrets into GitHub Actions workflows",
    "examples": [
      "uses: dopplerhq/secrets-fetch-action@v1.1.0",
      "with: doppler-token: ${{ secrets.DOPPLER_TOKEN }}"
    ],
    "recommendations": [
      "Use GitHub Actions integration action",
      "Store Doppler token in GitHub Secrets"
    ],
    "warnings": [
      "Never expose Doppler tokens in workflow logs"
    ]
  },
  {
    "name": "github_actions_integration",
    "description": "GitHub Actions workflow integration with Doppler secrets",
    "pattern": "## 1. GitHub Actions Integration",
    "category": "integration",
    "type": "ci_cd_workflow",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 25,
    "section": "Doppler Integration Patterns: Comprehensive Implementation Guide",
    "subsection": "1. GitHub Actions Integration",
    "usage": "Integrate Doppler secrets into GitHub Actions workflows",
    "examples": [
      "uses: dopplerhq/secrets-fetch-action@v1.1.0",
      "with: doppler-token: ${{ secrets.DOPPLER_TOKEN }}"
    ],
    "recommendations": [
      "Use GitHub Actions integration action",
      "Store Doppler token in GitHub Secrets"
    ],
    "warnings": [
      "Never expose Doppler tokens in workflow logs"
    ]
  },
  {
    "name": "github_actions_integration",
    "description": "GitHub Actions workflow integration with Doppler secrets",
    "pattern": "Doppler's GitHub Actions integration provides seamless secret synchronization between Doppler and GitHub, enabling secure CI/CD workflows without hardcoding sensitive information.",
    "category": "integration",
    "type": "ci_cd_workflow",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 28,
    "section": "Doppler Integration Patterns: Comprehensive Implementation Guide",
    "subsection": "1. GitHub Actions Integration",
    "usage": "Integrate Doppler secrets into GitHub Actions workflows",
    "examples": [
      "uses: dopplerhq/secrets-fetch-action@v1.1.0",
      "with: doppler-token: ${{ secrets.DOPPLER_TOKEN }}"
    ],
    "recommendations": [
      "Use GitHub Actions integration action",
      "Store Doppler token in GitHub Secrets"
    ],
    "warnings": [
      "Never expose Doppler tokens in workflow logs"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "Doppler's GitHub Actions integration provides seamless secret synchronization between Doppler and GitHub, enabling secure CI/CD workflows without hardcoding sensitive information.",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 28,
    "section": "Doppler Integration Patterns: Comprehensive Implementation Guide",
    "subsection": "1. GitHub Actions Integration",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- GitHub account with repository permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 32,
    "section": "Doppler Integration Patterns: Comprehensive Implementation Guide",
    "subsection": "1. GitHub Actions Integration",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "# Position it after your Development environment",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 41,
    "section": "Position it after your Development environment",
    "subsection": "1. GitHub Actions Integration",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "# .github/workflows/deploy.yml",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 58,
    "section": ".github/workflows/deploy.yml",
    "subsection": "1. GitHub Actions Integration",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "name: Deploy Application",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 59,
    "section": ".github/workflows/deploy.yml",
    "subsection": "1. GitHub Actions Integration",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "deploy:",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 65,
    "section": ".github/workflows/deploy.yml",
    "subsection": "1. GitHub Actions Integration",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "uses: dopplerhq/cli-action@v2",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 71,
    "section": ".github/workflows/deploy.yml",
    "subsection": "1. GitHub Actions Integration",
    "usage": "Use as template for integration configuration",
    "examples": [
      "uses: dopplerhq/cli-action@v2"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "- name: Deploy with Doppler secrets",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 73,
    "section": ".github/workflows/deploy.yml",
    "subsection": "1. GitHub Actions Integration",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- name: Deploy with Doppler secrets",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 73,
    "section": ".github/workflows/deploy.yml",
    "subsection": "1. GitHub Actions Integration",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- name: Deploy with Doppler secrets"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- npm run deploy",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 75,
    "section": ".github/workflows/deploy.yml",
    "subsection": "1. GitHub Actions Integration",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- npm run deploy",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "doppler run -- npm run deploy",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 75,
    "section": ".github/workflows/deploy.yml",
    "subsection": "1. GitHub Actions Integration",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- npm run deploy",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 75,
    "section": ".github/workflows/deploy.yml",
    "subsection": "1. GitHub Actions Integration",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- npm run deploy"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 77,
    "section": ".github/workflows/deploy.yml",
    "subsection": "1. GitHub Actions Integration",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 77,
    "section": ".github/workflows/deploy.yml",
    "subsection": "1. GitHub Actions Integration",
    "usage": "Use as template for integration configuration",
    "examples": [
      "DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "### Manual Secret Import Workflow",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 80,
    "section": ".github/workflows/deploy.yml",
    "subsection": "1. GitHub Actions Integration",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "For importing existing GitHub secrets to Doppler:",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 81,
    "section": ".github/workflows/deploy.yml",
    "subsection": "1. GitHub Actions Integration",
    "usage": "Use as template for integration configuration",
    "examples": [
      "For importing existing GitHub secrets to Doppler:"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "# .github/workflows/import-secrets.yml",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 84,
    "section": ".github/workflows/import-secrets.yml",
    "subsection": "1. GitHub Actions Integration",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- name: Import secrets",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 100,
    "section": ".github/workflows/import-secrets.yml",
    "subsection": "1. GitHub Actions Integration",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- name: Import secrets"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "Doppler's Codespaces integration enables developers to access production-like secrets in their cloud development environments securely.",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 117,
    "section": "Note: Secret names are converted to UPPERCASE",
    "subsection": "2. GitHub Codespaces Setup",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "# 2. Place after Development environment",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 125,
    "section": "2. Place after Development environment",
    "subsection": "2. GitHub Codespaces Setup",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 141,
    "section": "Note: GitHub doesn't fit into traditional Dev/Staging/Prod paradigm",
    "subsection": "2. GitHub Codespaces Setup",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"postCreateCommand\": \"curl -Ls https://cli.doppler.com/install.sh | sh\",",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 144,
    "section": "Note: GitHub doesn't fit into traditional Dev/Staging/Prod paradigm",
    "subsection": "2. GitHub Codespaces Setup",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"postCreateCommand\": \"curl -Ls https://cli.doppler.com/install.sh | sh\","
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"remoteEnv\": {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 145,
    "section": "Note: GitHub doesn't fit into traditional Dev/Staging/Prod paradigm",
    "subsection": "2. GitHub Codespaces Setup",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"remoteEnv\": {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "\"DOPPLER_TOKEN\": \"${localEnv:DOPPLER_TOKEN}\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 146,
    "section": "Note: GitHub doesn't fit into traditional Dev/Staging/Prod paradigm",
    "subsection": "2. GitHub Codespaces Setup",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"DOPPLER_TOKEN\": \"${localEnv:DOPPLER_TOKEN}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 146,
    "section": "Note: GitHub doesn't fit into traditional Dev/Staging/Prod paradigm",
    "subsection": "2. GitHub Codespaces Setup",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"DOPPLER_TOKEN\": \"${localEnv:DOPPLER_TOKEN}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "doppler setup",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 160,
    "section": "After Codespace creation",
    "subsection": "2. GitHub Codespaces Setup",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "cli_setup",
    "description": "CLI command: setup command",
    "pattern": "doppler setup",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 160,
    "section": "After Codespace creation",
    "subsection": "2. GitHub Codespaces Setup",
    "usage": "Use doppler setup for setup operations",
    "examples": [
      "doppler setup",
      "doppler setup --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_setup",
    "description": "Doppler CLI command: setup",
    "pattern": "doppler setup",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 160,
    "section": "After Codespace creation",
    "subsection": "2. GitHub Codespaces Setup",
    "usage": "Execute setup operations via CLI",
    "examples": [
      "doppler setup"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 161,
    "section": "After Codespace creation",
    "subsection": "2. GitHub Codespaces Setup",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- npm start",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 161,
    "section": "After Codespace creation",
    "subsection": "2. GitHub Codespaces Setup",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "token: ${{secrets.DOPPLER_NPM_TOKEN}}",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 195,
    "section": ".github/dependabot.yml",
    "subsection": "3. Dependabot Configuration",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "token: ${{secrets.DOPPLER_NPM_TOKEN}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 195,
    "section": ".github/dependabot.yml",
    "subsection": "3. Dependabot Configuration",
    "usage": "Use as template for integration configuration",
    "examples": [
      "token: ${{secrets.DOPPLER_NPM_TOKEN}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "secret_rotation_strategy",
    "description": "Secret rotation best practices for security and compliance",
    "pattern": "- Regularly rotate tokens through Doppler",
    "category": "best_practices",
    "type": "security_lifecycle",
    "complexity": "high",
    "safety": "critical",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 209,
    "section": ".github/dependabot.yml",
    "subsection": "3. Dependabot Configuration",
    "usage": "Implement regular secret rotation for security compliance",
    "examples": [
      "Automated rotation via API",
      "Zero-downtime rotation strategies"
    ],
    "recommendations": [
      "Automate rotation where possible",
      "Test rotation procedures"
    ],
    "warnings": [
      "Improper rotation can cause service outages"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "Doppler provides granular access control for integrations through role-based permissions at multiple levels.",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 217,
    "section": ".github/dependabot.yml",
    "subsection": "4. Access Scoping for Integrations",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "### Permission Hierarchy",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 219,
    "section": ".github/dependabot.yml",
    "subsection": "4. Access Scoping for Integrations",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "#### 1. Workplace Role Permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 221,
    "section": ".github/dependabot.yml",
    "subsection": "4. Access Scoping for Integrations",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "# Available permissions:",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 223,
    "section": "Available permissions:",
    "subsection": "4. Access Scoping for Integrations",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "#### 2. Integration Role Permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 229,
    "section": "Available permissions:",
    "subsection": "4. Access Scoping for Integrations",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "#### 3. Project Role Permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 238,
    "section": "Role levels:",
    "subsection": "4. Access Scoping for Integrations",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "cli_integrations_access",
    "description": "CLI command: integrations access command",
    "pattern": "doppler integrations access add \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 245,
    "section": "Assign integration role via CLI",
    "subsection": "4. Access Scoping for Integrations",
    "usage": "Use doppler integrations access for integrations operations",
    "examples": [
      "doppler integrations access add \\",
      "doppler integrations access --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_integrations_access",
    "description": "Doppler CLI command: integrations access",
    "pattern": "doppler integrations access add \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 245,
    "section": "Assign integration role via CLI",
    "subsection": "4. Access Scoping for Integrations",
    "usage": "Execute integrations operations via CLI",
    "examples": [
      "doppler integrations access add \\"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "# Create custom role with specific permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 250,
    "section": "Create custom role with specific permissions",
    "subsection": "4. Access Scoping for Integrations",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "cli_roles_create",
    "description": "CLI command: roles create command",
    "pattern": "doppler roles create \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 251,
    "section": "Create custom role with specific permissions",
    "subsection": "4. Access Scoping for Integrations",
    "usage": "Use doppler roles create for roles operations",
    "examples": [
      "doppler roles create \\",
      "doppler roles create --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_roles_create",
    "description": "Doppler CLI command: roles create",
    "pattern": "doppler roles create \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 251,
    "section": "Create custom role with specific permissions",
    "subsection": "4. Access Scoping for Integrations",
    "usage": "Execute roles operations via CLI",
    "examples": [
      "doppler roles create \\"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "--permissions \"integrations.view,integrations.use\"",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 253,
    "section": "Create custom role with specific permissions",
    "subsection": "4. Access Scoping for Integrations",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "1. **Principle of Least Privilege**: Grant minimal required permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 257,
    "section": "Create custom role with specific permissions",
    "subsection": "4. Access Scoping for Integrations",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "2. **Regular Audits**: Review access quarterly",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 258,
    "section": "Create custom role with specific permissions",
    "subsection": "4. Access Scoping for Integrations",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "3. **Use Groups**: Manage permissions through groups rather than individual users",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 259,
    "section": "Create custom role with specific permissions",
    "subsection": "4. Access Scoping for Integrations",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- Workplace roles override integration-level permissions (highest privilege wins)",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 263,
    "section": "Create custom role with specific permissions",
    "subsection": "4. Access Scoping for Integrations",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- Document permission rationale",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 264,
    "section": "Create custom role with specific permissions",
    "subsection": "4. Access Scoping for Integrations",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- Use audit logs to track permission changes",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 265,
    "section": "Create custom role with specific permissions",
    "subsection": "4. Access Scoping for Integrations",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- Use audit logs to track permission changes",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 265,
    "section": "Create custom role with specific permissions",
    "subsection": "4. Access Scoping for Integrations",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- ./your-app",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 279,
    "section": "Create fallback file with default settings",
    "subsection": "5. Automatic Fallback Mechanisms",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- ./your-app",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- ./your-app",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 279,
    "section": "Create fallback file with default settings",
    "subsection": "5. Automatic Fallback Mechanisms",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- ./your-app"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--fallback",
    "description": "CLI command: run --fallback command",
    "pattern": "doppler run --fallback=/secure/location/fallback.json -- ./your-app",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 282,
    "section": "Specify custom fallback location",
    "subsection": "5. Automatic Fallback Mechanisms",
    "usage": "Use doppler run --fallback for run operations",
    "examples": [
      "doppler run --fallback=/secure/location/fallback.json -- ./your-app",
      "doppler run --fallback --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--fallback",
    "description": "Doppler CLI command: run --fallback",
    "pattern": "doppler run --fallback=/secure/location/fallback.json -- ./your-app",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 282,
    "section": "Specify custom fallback location",
    "subsection": "5. Automatic Fallback Mechanisms",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --fallback=/secure/location/fallback.json -- ./your-app"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 288,
    "section": "Download with passphrase",
    "subsection": "5. Automatic Fallback Mechanisms",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download \\",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 288,
    "section": "Download with passphrase",
    "subsection": "5. Automatic Fallback Mechanisms",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download \\"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run",
    "description": "CLI command: run command",
    "pattern": "doppler run \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 293,
    "section": "Use passphrase-protected fallback",
    "subsection": "5. Automatic Fallback Mechanisms",
    "usage": "Use doppler run for run operations",
    "examples": [
      "doppler run \\",
      "doppler run --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run",
    "description": "Doppler CLI command: run",
    "pattern": "doppler run \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 293,
    "section": "Use passphrase-protected fallback",
    "subsection": "5. Automatic Fallback Mechanisms",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run \\"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--fallback-readonly",
    "description": "CLI command: run --fallback-readonly command",
    "pattern": "doppler run --fallback-readonly -- ./your-app",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 302,
    "section": "Read-only mode (prevents updates)",
    "subsection": "5. Automatic Fallback Mechanisms",
    "usage": "Use doppler run --fallback-readonly for run operations",
    "examples": [
      "doppler run --fallback-readonly -- ./your-app",
      "doppler run --fallback-readonly --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--fallback-readonly",
    "description": "Doppler CLI command: run --fallback-readonly",
    "pattern": "doppler run --fallback-readonly -- ./your-app",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 302,
    "section": "Read-only mode (prevents updates)",
    "subsection": "5. Automatic Fallback Mechanisms",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --fallback-readonly -- ./your-app"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--fallback-only",
    "description": "CLI command: run --fallback-only command",
    "pattern": "doppler run --fallback-only -- ./your-app",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 305,
    "section": "Fallback-only mode (offline only)",
    "subsection": "5. Automatic Fallback Mechanisms",
    "usage": "Use doppler run --fallback-only for run operations",
    "examples": [
      "doppler run --fallback-only -- ./your-app",
      "doppler run --fallback-only --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--fallback-only",
    "description": "Doppler CLI command: run --fallback-only",
    "pattern": "doppler run --fallback-only -- ./your-app",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 305,
    "section": "Fallback-only mode (offline only)",
    "subsection": "5. Automatic Fallback Mechanisms",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --fallback-only -- ./your-app"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "# Production deployment script with fallback",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 312,
    "section": "Production deployment script with fallback",
    "subsection": "5. Automatic Fallback Mechanisms",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "# Download fallback before deployment",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 314,
    "section": "Download fallback before deployment",
    "subsection": "5. Automatic Fallback Mechanisms",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "-- ./deploy.sh",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 323,
    "section": "Run with fallback support",
    "subsection": "5. Automatic Fallback Mechanisms",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "secret_rotation_strategy",
    "description": "Secret rotation best practices for security and compliance",
    "pattern": "- **Rotation**: Update fallback files during deployments",
    "category": "best_practices",
    "type": "security_lifecycle",
    "complexity": "high",
    "safety": "critical",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 332,
    "section": "Cleanup",
    "subsection": "5. Automatic Fallback Mechanisms",
    "usage": "Implement regular secret rotation for security compliance",
    "examples": [
      "Automated rotation via API",
      "Zero-downtime rotation strategies"
    ],
    "recommendations": [
      "Automate rotation where possible",
      "Test rotation procedures"
    ],
    "warnings": [
      "Improper rotation can cause service outages"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "- **Rotation**: Update fallback files during deployments",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 332,
    "section": "Cleanup",
    "subsection": "5. Automatic Fallback Mechanisms",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- **Access**: Restrict file permissions (600)",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 333,
    "section": "Cleanup",
    "subsection": "5. Automatic Fallback Mechanisms",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "config: \"production\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 359,
    "section": "Project-specific configuration",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_PROJECT=\"backend-api\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 365,
    "section": "Set in shell profile",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "export DOPPLER_CONFIG=\"development\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 366,
    "section": "Set in shell profile",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "export DOPPLER_CONFIG=\"development\"",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 366,
    "section": "Set in shell profile",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_CONFIG=\"development\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 366,
    "section": "Set in shell profile",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "export DOPPLER_TOKEN=\"dp.st.dev.xxxxx\"",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 367,
    "section": "Set in shell profile",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_TOKEN=\"dp.st.dev.xxxxx\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 367,
    "section": "Set in shell profile",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "--config=\"staging\" \\",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 375,
    "section": "Override all other settings",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "# Development environment",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 382,
    "section": "Development environment",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "doppler setup --project=\"myapp\" --config=\"dev\"",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 383,
    "section": "Development environment",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler setup --project=\"myapp\" --config=\"dev\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 383,
    "section": "Development environment",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_setup_--project",
    "description": "CLI command: setup --project command",
    "pattern": "doppler setup --project=\"myapp\" --config=\"dev\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 383,
    "section": "Development environment",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Use doppler setup --project for setup operations",
    "examples": [
      "doppler setup --project=\"myapp\" --config=\"dev\"",
      "doppler setup --project --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_setup_--project",
    "description": "Doppler CLI command: setup --project",
    "pattern": "doppler setup --project=\"myapp\" --config=\"dev\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 383,
    "section": "Development environment",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Execute setup operations via CLI",
    "examples": [
      "doppler setup --project=\"myapp\" --config=\"dev\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- npm run dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 384,
    "section": "Development environment",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- npm run dev",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- npm run dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 384,
    "section": "Development environment",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- npm run dev"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_promotion_strategy",
    "description": "Best practices for promoting secrets between environments",
    "pattern": "# Staging environment",
    "category": "best_practices",
    "type": "environment_management",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 386,
    "section": "Staging environment",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Systematically promote secrets from development to production",
    "examples": [
      "doppler secrets download --no-file -c dev | doppler secrets upload -c staging",
      "Exclude environment-specific secrets like DATABASE_URL"
    ],
    "recommendations": [
      "Test in staging before production",
      "Exclude environment-specific secrets"
    ],
    "warnings": [
      "Always validate promoted secrets before deployment"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "doppler setup --project=\"myapp\" --config=\"staging\"",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 387,
    "section": "Staging environment",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler setup --project=\"myapp\" --config=\"staging\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 387,
    "section": "Staging environment",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_setup_--project",
    "description": "CLI command: setup --project command",
    "pattern": "doppler setup --project=\"myapp\" --config=\"staging\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 387,
    "section": "Staging environment",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Use doppler setup --project for setup operations",
    "examples": [
      "doppler setup --project=\"myapp\" --config=\"staging\"",
      "doppler setup --project --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_setup_--project",
    "description": "Doppler CLI command: setup --project",
    "pattern": "doppler setup --project=\"myapp\" --config=\"staging\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 387,
    "section": "Staging environment",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Execute setup operations via CLI",
    "examples": [
      "doppler setup --project=\"myapp\" --config=\"staging\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- npm run staging",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 388,
    "section": "Staging environment",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- npm run staging",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- npm run staging",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 388,
    "section": "Staging environment",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- npm run staging"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "doppler setup --project=\"myapp\" --config=\"production\"",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 391,
    "section": "Production environment",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler setup --project=\"myapp\" --config=\"production\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 391,
    "section": "Production environment",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_setup_--project",
    "description": "CLI command: setup --project command",
    "pattern": "doppler setup --project=\"myapp\" --config=\"production\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 391,
    "section": "Production environment",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Use doppler setup --project for setup operations",
    "examples": [
      "doppler setup --project=\"myapp\" --config=\"production\"",
      "doppler setup --project --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_setup_--project",
    "description": "Doppler CLI command: setup --project",
    "pattern": "doppler setup --project=\"myapp\" --config=\"production\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 391,
    "section": "Production environment",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Execute setup operations via CLI",
    "examples": [
      "doppler setup --project=\"myapp\" --config=\"production\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- npm run start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 392,
    "section": "Production environment",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- npm run start",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- npm run start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 392,
    "section": "Production environment",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- npm run start"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_configure_debug",
    "description": "CLI command: configure debug command",
    "pattern": "doppler configure debug",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 398,
    "section": "View current configuration and sources",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Use doppler configure debug for configure operations",
    "examples": [
      "doppler configure debug",
      "doppler configure debug --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configure_debug",
    "description": "Doppler CLI command: configure debug",
    "pattern": "doppler configure debug",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 398,
    "section": "View current configuration and sources",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "doppler configure debug"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "# CONFIG: development (from: .doppler.yaml)",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 402,
    "section": "CONFIG: development (from: .doppler.yaml)",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "# CONFIG: development (from: .doppler.yaml)",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 402,
    "section": "CONFIG: development (from: .doppler.yaml)",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "# CONFIG: development (from: .doppler.yaml)",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 402,
    "section": "CONFIG: development (from: .doppler.yaml)",
    "subsection": "6. Environment-Based Configurations",
    "usage": "Use as template for integration configuration",
    "examples": [
      "# CONFIG: development (from: .doppler.yaml)"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_login",
    "description": "CLI command: login command",
    "pattern": "doppler login",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 431,
    "section": "Initial login (creates default scope)",
    "subsection": "7. Multiple Workplace Management",
    "usage": "Use doppler login for login operations",
    "examples": [
      "doppler login",
      "doppler login --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_login",
    "description": "Doppler CLI command: login",
    "pattern": "doppler login",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 431,
    "section": "Initial login (creates default scope)",
    "subsection": "7. Multiple Workplace Management",
    "usage": "Execute login operations via CLI",
    "examples": [
      "doppler login"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_login_--scope",
    "description": "CLI command: login --scope command",
    "pattern": "doppler login --scope .",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 435,
    "section": "Login to specific workplace with scope",
    "subsection": "7. Multiple Workplace Management",
    "usage": "Use doppler login --scope for login operations",
    "examples": [
      "doppler login --scope .",
      "doppler login --scope --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_login_--scope",
    "description": "Doppler CLI command: login --scope",
    "pattern": "doppler login --scope .",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 435,
    "section": "Login to specific workplace with scope",
    "subsection": "7. Multiple Workplace Management",
    "usage": "Execute login operations via CLI",
    "examples": [
      "doppler login --scope ."
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "doppler-switch() {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 446,
    "section": "Add to ~/.bashrc or ~/.zshrc",
    "subsection": "7. Multiple Workplace Management",
    "usage": "Use as template for integration configuration",
    "examples": [
      "doppler-switch() {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_TOKEN=$(cat \"$selected_scope/token\")",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 449,
    "section": "Add to ~/.bashrc or ~/.zshrc",
    "subsection": "7. Multiple Workplace Management",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_me",
    "description": "CLI command: me command",
    "pattern": "doppler me",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 451,
    "section": "Add to ~/.bashrc or ~/.zshrc",
    "subsection": "7. Multiple Workplace Management",
    "usage": "Use doppler me for me operations",
    "examples": [
      "doppler me",
      "doppler me --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_me",
    "description": "Doppler CLI command: me",
    "pattern": "doppler me",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 451,
    "section": "Add to ~/.bashrc or ~/.zshrc",
    "subsection": "7. Multiple Workplace Management",
    "usage": "Execute me operations via CLI",
    "examples": [
      "doppler me"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_projects",
    "description": "CLI command: projects command",
    "pattern": "doppler projects",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 473,
    "section": "List projects in current workplace",
    "subsection": "7. Multiple Workplace Management",
    "usage": "Use doppler projects for projects operations",
    "examples": [
      "doppler projects",
      "doppler projects --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_projects",
    "description": "Doppler CLI command: projects",
    "pattern": "doppler projects",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 473,
    "section": "List projects in current workplace",
    "subsection": "7. Multiple Workplace Management",
    "usage": "Execute projects operations via CLI",
    "examples": [
      "doppler projects"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_configure",
    "description": "CLI command: configure command",
    "pattern": "doppler configure",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 476,
    "section": "View current configuration",
    "subsection": "7. Multiple Workplace Management",
    "usage": "Use doppler configure for configure operations",
    "examples": [
      "doppler configure",
      "doppler configure --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configure",
    "description": "Doppler CLI command: configure",
    "pattern": "doppler configure",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 476,
    "section": "View current configuration",
    "subsection": "7. Multiple Workplace Management",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "doppler configure"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_configure_set",
    "description": "CLI command: configure set command",
    "pattern": "doppler configure set token $(doppler configure get token --scope .)",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 480,
    "section": "Switch between workplaces",
    "subsection": "7. Multiple Workplace Management",
    "usage": "Use doppler configure set for configure operations",
    "examples": [
      "doppler configure set token $(doppler configure get token --scope .)",
      "doppler configure set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configure_set",
    "description": "Doppler CLI command: configure set",
    "pattern": "doppler configure set token $(doppler configure get token --scope .)",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 480,
    "section": "Switch between workplaces",
    "subsection": "7. Multiple Workplace Management",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "doppler configure set token $(doppler configure get token --scope .)"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "- Use consistent naming conventions",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 487,
    "section": "Switch between workplaces",
    "subsection": "7. Multiple Workplace Management",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "- Use service tokens for CI/CD",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 492,
    "section": "Switch between workplaces",
    "subsection": "7. Multiple Workplace Management",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "secret_rotation_strategy",
    "description": "Secret rotation best practices for security and compliance",
    "pattern": "- Rotate tokens regularly",
    "category": "best_practices",
    "type": "security_lifecycle",
    "complexity": "high",
    "safety": "critical",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 493,
    "section": "Switch between workplaces",
    "subsection": "7. Multiple Workplace Management",
    "usage": "Implement regular secret rotation for security compliance",
    "examples": [
      "Automated rotation via API",
      "Zero-downtime rotation strategies"
    ],
    "recommendations": [
      "Automate rotation where possible",
      "Test rotation procedures"
    ],
    "warnings": [
      "Improper rotation can cause service outages"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "function cd() {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 498,
    "section": "Auto-detect workplace based on directory",
    "subsection": "7. Multiple Workplace Management",
    "usage": "Use as template for integration configuration",
    "examples": [
      "function cd() {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "doppler setup --no-interactive",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 501,
    "section": "Auto-detect workplace based on directory",
    "subsection": "7. Multiple Workplace Management",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "cli_setup_--no-interactive",
    "description": "CLI command: setup --no-interactive command",
    "pattern": "doppler setup --no-interactive",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 501,
    "section": "Auto-detect workplace based on directory",
    "subsection": "7. Multiple Workplace Management",
    "usage": "Use doppler setup --no-interactive for setup operations",
    "examples": [
      "doppler setup --no-interactive",
      "doppler setup --no-interactive --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_setup_--no-interactive",
    "description": "Doppler CLI command: setup --no-interactive",
    "pattern": "doppler setup --no-interactive",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 501,
    "section": "Auto-detect workplace based on directory",
    "subsection": "7. Multiple Workplace Management",
    "usage": "Execute setup operations via CLI",
    "examples": [
      "doppler setup --no-interactive"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- Audit token usage regularly",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 509,
    "section": "Auto-detect workplace based on directory",
    "subsection": "7. Multiple Workplace Management",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "Doppler's integration patterns provide comprehensive secret management across various development workflows. Key takeaways:",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 515,
    "section": "Auto-detect workplace based on directory",
    "subsection": "Conclusion",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "Doppler's integration patterns provide comprehensive secret management across various development workflows. Key takeaways:",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 515,
    "section": "Auto-detect workplace based on directory",
    "subsection": "Conclusion",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "Doppler's integration patterns provide comprehensive secret management across various development workflows. Key takeaways:",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 515,
    "section": "Auto-detect workplace based on directory",
    "subsection": "Conclusion",
    "usage": "Use as template for integration configuration",
    "examples": [
      "Doppler's integration patterns provide comprehensive secret management across various development workflows. Key takeaways:"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "1. **GitHub Integration**: Seamless secret sync for Actions, Codespaces, and Dependabot",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 517,
    "section": "Auto-detect workplace based on directory",
    "subsection": "Conclusion",
    "usage": "Use as template for integration configuration",
    "examples": [
      "1. **GitHub Integration**: Seamless secret sync for Actions, Codespaces, and Dependabot"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "2. **Access Control**: Granular permissions at multiple levels",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 518,
    "section": "Auto-detect workplace based on directory",
    "subsection": "Conclusion",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "file_doppler_integration-guide",
    "description": "Comprehensive guide: doppler-integration-guide.md",
    "pattern": "Documentation file: doppler-integration-guide.md",
    "category": "integration",
    "type": "documentation",
    "complexity": "expert",
    "safety": "safe",
    "filename": "doppler-integration-guide.md",
    "lineNumber": 1,
    "section": "file_overview",
    "subsection": "",
    "usage": "Reference guide for doppler integration-guide",
    "examples": [
      "Study doppler-integration-guide.md for detailed information"
    ],
    "recommendations": [
      "Follow practices outlined in doppler-integration-guide.md"
    ],
    "warnings": [],
    "topics": [
      "Table of Contents",
      "1. GitHub Actions Integration",
      "2. GitHub Codespaces Setup",
      "3. Dependabot Configuration",
      "4. Access Scoping for Integrations",
      "5. Automatic Fallback Mechanisms",
      "6. Environment-Based Configurations",
      "7. Multiple Workplace Management",
      "Conclusion"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "---",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 1,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "---"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "description: \"Master Doppler security with service token management, trusted IP configurations, permission models, webhooks, and configuration inheritance patterns\"",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "doppler-security-guide.md",
    "lineNumber": 3,
    "section": "",
    "subsection": "",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "ip_access_control",
    "description": "IP allowlisting for enhanced security in production environments",
    "pattern": "description: \"Master Doppler security with service token management, trusted IP configurations, permission models, webhooks, and configuration inheritance patterns\"",
    "category": "security",
    "type": "access_control",
    "complexity": "high",
    "safety": "critical",
    "filename": "doppler-security-guide.md",
    "lineNumber": 3,
    "section": "",
    "subsection": "",
    "usage": "Configure trusted IPs for production token access",
    "examples": [
      "Add CI/CD server IPs to allowlist",
      "Configure production server IP ranges"
    ],
    "recommendations": [
      "Always use IP allowlisting in production",
      "Regular audit of trusted IPs"
    ],
    "warnings": [
      "Incorrect IP configuration can break production access"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "description: \"Master Doppler security with service token management, trusted IP configurations, permission models, webhooks, and configuration inheritance patterns\"",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-security-guide.md",
    "lineNumber": 3,
    "section": "",
    "subsection": "",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "tags: [\"doppler\", \"security\", \"service-tokens\", \"permissions\", \"webhooks\", \"best-practices\"]",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-security-guide.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "tags: [\"doppler\", \"security\", \"service-tokens\", \"permissions\", \"webhooks\", \"best-practices\"]",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "tags: [\"doppler\", \"security\", \"service-tokens\", \"permissions\", \"webhooks\", \"best-practices\"]"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "1. [Service Token Management and Security](#service-token-management-and-security)",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "doppler-security-guide.md",
    "lineNumber": 15,
    "section": "Doppler Security Features and Best Practices Guide",
    "subsection": "Table of Contents",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "ip_access_control",
    "description": "IP allowlisting for enhanced security in production environments",
    "pattern": "2. [Trusted IP Configurations](#trusted-ip-configurations)",
    "category": "security",
    "type": "access_control",
    "complexity": "high",
    "safety": "critical",
    "filename": "doppler-security-guide.md",
    "lineNumber": 16,
    "section": "Doppler Security Features and Best Practices Guide",
    "subsection": "Table of Contents",
    "usage": "Configure trusted IPs for production token access",
    "examples": [
      "Add CI/CD server IPs to allowlist",
      "Configure production server IP ranges"
    ],
    "recommendations": [
      "Always use IP allowlisting in production",
      "Regular audit of trusted IPs"
    ],
    "warnings": [
      "Incorrect IP configuration can break production access"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "3. [Project Permission Models](#project-permission-models)",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-security-guide.md",
    "lineNumber": 17,
    "section": "Doppler Security Features and Best Practices Guide",
    "subsection": "Table of Contents",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "## Service Token Management and Security",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "doppler-security-guide.md",
    "lineNumber": 24,
    "section": "Doppler Security Features and Best Practices Guide",
    "subsection": "Service Token Management and Security",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "Service tokens provide read-only access to specific configs, implementing the principle of least privilege. They are the recommended authentication method for production environments.",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "doppler-security-guide.md",
    "lineNumber": 27,
    "section": "Doppler Security Features and Best Practices Guide",
    "subsection": "Service Token Management and Security",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "Service tokens provide read-only access to specific configs, implementing the principle of least privilege. They are the recommended authentication method for production environments.",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 27,
    "section": "Doppler Security Features and Best Practices Guide",
    "subsection": "Service Token Management and Security",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "personal_token_security",
    "description": "Personal tokens for development - should not be used in production",
    "pattern": "- **NEVER use CLI or Personal Tokens in production** - these provide write access",
    "category": "security",
    "type": "token_management",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler-security-guide.md",
    "lineNumber": 32,
    "section": "Doppler Security Features and Best Practices Guide",
    "subsection": "Service Token Management and Security",
    "usage": "Personal tokens for local development only",
    "examples": [
      "doppler login",
      "DOPPLER_TOKEN=dp.pt.development_token"
    ],
    "recommendations": [
      "Use only for local development",
      "Login via CLI for better security"
    ],
    "warnings": [
      "Do not use personal tokens in CI/CD or production"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "- **Service tokens are displayed only once** - store them securely immediately",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "doppler-security-guide.md",
    "lineNumber": 33,
    "section": "Doppler Security Features and Best Practices Guide",
    "subsection": "Service Token Management and Security",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "2. Generate token with specific permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-security-guide.md",
    "lineNumber": 40,
    "section": "Doppler Security Features and Best Practices Guide",
    "subsection": "Service Token Management and Security",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "cli_configs_tokens",
    "description": "CLI command: configs tokens command",
    "pattern": "doppler configs tokens create --project PROJECT --config CONFIG --name TOKEN_NAME",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 46,
    "section": "Doppler Security Features and Best Practices Guide",
    "subsection": "Service Token Management and Security",
    "usage": "Use doppler configs tokens for configs operations",
    "examples": [
      "doppler configs tokens create --project PROJECT --config CONFIG --name TOKEN_NAME",
      "doppler configs tokens --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configs_tokens",
    "description": "Doppler CLI command: configs tokens",
    "pattern": "doppler configs tokens create --project PROJECT --config CONFIG --name TOKEN_NAME",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 46,
    "section": "Doppler Security Features and Best Practices Guide",
    "subsection": "Service Token Management and Security",
    "usage": "Execute configs operations via CLI",
    "examples": [
      "doppler configs tokens create --project PROJECT --config CONFIG --name TOKEN_NAME"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "- Environment variable: `DOPPLER_TOKEN`",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler-security-guide.md",
    "lineNumber": 57,
    "section": "Doppler Security Features and Best Practices Guide",
    "subsection": "Service Token Management and Security",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "- Persisted service token (for VMs only)",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "doppler-security-guide.md",
    "lineNumber": 58,
    "section": "Doppler Security Features and Best Practices Guide",
    "subsection": "Service Token Management and Security",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "secret_rotation_strategy",
    "description": "Secret rotation best practices for security and compliance",
    "pattern": "3. **Token Rotation Strategy**",
    "category": "best_practices",
    "type": "security_lifecycle",
    "complexity": "high",
    "safety": "critical",
    "filename": "doppler-security-guide.md",
    "lineNumber": 61,
    "section": "Doppler Security Features and Best Practices Guide",
    "subsection": "Service Token Management and Security",
    "usage": "Implement regular secret rotation for security compliance",
    "examples": [
      "Automated rotation via API",
      "Zero-downtime rotation strategies"
    ],
    "recommendations": [
      "Automate rotation where possible",
      "Test rotation procedures"
    ],
    "warnings": [
      "Improper rotation can cause service outages"
    ]
  },
  {
    "name": "secret_rotation_strategy",
    "description": "Secret rotation best practices for security and compliance",
    "pattern": "- Implement regular rotation schedules",
    "category": "best_practices",
    "type": "security_lifecycle",
    "complexity": "high",
    "safety": "critical",
    "filename": "doppler-security-guide.md",
    "lineNumber": 62,
    "section": "Doppler Security Features and Best Practices Guide",
    "subsection": "Service Token Management and Security",
    "usage": "Implement regular secret rotation for security compliance",
    "examples": [
      "Automated rotation via API",
      "Zero-downtime rotation strategies"
    ],
    "recommendations": [
      "Automate rotation where possible",
      "Test rotation procedures"
    ],
    "warnings": [
      "Improper rotation can cause service outages"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- Monitor token usage through audit logs",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 64,
    "section": "Doppler Security Features and Best Practices Guide",
    "subsection": "Service Token Management and Security",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- Note: CLI fallback files may retain cached secrets",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 70,
    "section": "Doppler Security Features and Best Practices Guide",
    "subsection": "Service Token Management and Security",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- Note: CLI fallback files may retain cached secrets"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "ip_access_control",
    "description": "IP allowlisting for enhanced security in production environments",
    "pattern": "## Trusted IP Configurations",
    "category": "security",
    "type": "access_control",
    "complexity": "high",
    "safety": "critical",
    "filename": "doppler-security-guide.md",
    "lineNumber": 74,
    "section": "Doppler Security Features and Best Practices Guide",
    "subsection": "Trusted IP Configurations",
    "usage": "Configure trusted IPs for production token access",
    "examples": [
      "Add CI/CD server IPs to allowlist",
      "Configure production server IP ranges"
    ],
    "recommendations": [
      "Always use IP allowlisting in production",
      "Regular audit of trusted IPs"
    ],
    "warnings": [
      "Incorrect IP configuration can break production access"
    ]
  },
  {
    "name": "ip_access_control",
    "description": "IP allowlisting for enhanced security in production environments",
    "pattern": "Trusted IPs restrict config access to specific network ranges, providing network-level security for your secrets.",
    "category": "security",
    "type": "access_control",
    "complexity": "high",
    "safety": "critical",
    "filename": "doppler-security-guide.md",
    "lineNumber": 77,
    "section": "Doppler Security Features and Best Practices Guide",
    "subsection": "Trusted IP Configurations",
    "usage": "Configure trusted IPs for production token access",
    "examples": [
      "Add CI/CD server IPs to allowlist",
      "Configure production server IP ranges"
    ],
    "recommendations": [
      "Always use IP allowlisting in production",
      "Regular audit of trusted IPs"
    ],
    "warnings": [
      "Incorrect IP configuration can break production access"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- Regularly audit and update IP ranges",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 103,
    "section": "Office network: 203.0.113.0/24",
    "subsection": "Trusted IP Configurations",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "## Project Permission Models",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-security-guide.md",
    "lineNumber": 117,
    "section": "Office network: 203.0.113.0/24",
    "subsection": "Project Permission Models",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "### Permission Levels",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-security-guide.md",
    "lineNumber": 122,
    "section": "Office network: 203.0.113.0/24",
    "subsection": "Project Permission Models",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "|------|-------------|--------------|",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 125,
    "section": "Office network: 203.0.113.0/24",
    "subsection": "Project Permission Models",
    "usage": "Use as template for integration configuration",
    "examples": [
      "|------|-------------|--------------|"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "| **Collaborator** | Manage secrets, configure trusted IPs, manage service tokens | Cannot rename/delete configs |",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "doppler-security-guide.md",
    "lineNumber": 127,
    "section": "Office network: 203.0.113.0/24",
    "subsection": "Project Permission Models",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "ip_access_control",
    "description": "IP allowlisting for enhanced security in production environments",
    "pattern": "| **Collaborator** | Manage secrets, configure trusted IPs, manage service tokens | Cannot rename/delete configs |",
    "category": "security",
    "type": "access_control",
    "complexity": "high",
    "safety": "critical",
    "filename": "doppler-security-guide.md",
    "lineNumber": 127,
    "section": "Office network: 203.0.113.0/24",
    "subsection": "Project Permission Models",
    "usage": "Configure trusted IPs for production token access",
    "examples": [
      "Add CI/CD server IPs to allowlist",
      "Configure production server IP ranges"
    ],
    "recommendations": [
      "Always use IP allowlisting in production",
      "Regular audit of trusted IPs"
    ],
    "warnings": [
      "Incorrect IP configuration can break production access"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- **Collaborators need explicit environment permissions**",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-security-guide.md",
    "lineNumber": 132,
    "section": "Office network: 203.0.113.0/24",
    "subsection": "Project Permission Models",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "2. **Environment-Specific Permissions**",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-security-guide.md",
    "lineNumber": 142,
    "section": "Office network: 203.0.113.0/24",
    "subsection": "Project Permission Models",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- Use different permission levels per environment",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-security-guide.md",
    "lineNumber": 144,
    "section": "Office network: 203.0.113.0/24",
    "subsection": "Project Permission Models",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- Regularly audit access lists",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 145,
    "section": "Office network: 203.0.113.0/24",
    "subsection": "Project Permission Models",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "3. Set environment-specific permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-security-guide.md",
    "lineNumber": 151,
    "section": "Office network: 203.0.113.0/24",
    "subsection": "Project Permission Models",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "- Use service tokens instead of user access for automation",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "doppler-security-guide.md",
    "lineNumber": 159,
    "section": "Office network: 203.0.113.0/24",
    "subsection": "Project Permission Models",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- Monitor permission changes through audit logs",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 160,
    "section": "Office network: 203.0.113.0/24",
    "subsection": "Project Permission Models",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- Monitor permission changes through audit logs",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-security-guide.md",
    "lineNumber": 160,
    "section": "Office network: 203.0.113.0/24",
    "subsection": "Project Permission Models",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "def verify_webhook(payload, signature, secret):",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 183,
    "section": "Example signature verification",
    "subsection": "Webhook Implementation",
    "usage": "Use as template for integration configuration",
    "examples": [
      "def verify_webhook(payload, signature, secret):"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "secret_rotation_strategy",
    "description": "Secret rotation best practices for security and compliance",
    "pattern": "- Rotate signing secrets periodically",
    "category": "best_practices",
    "type": "security_lifecycle",
    "complexity": "high",
    "safety": "critical",
    "filename": "doppler-security-guide.md",
    "lineNumber": 196,
    "section": "Use timing-safe comparison",
    "subsection": "Webhook Implementation",
    "usage": "Implement regular secret rotation for security compliance",
    "examples": [
      "Automated rotation via API",
      "Zero-downtime rotation strategies"
    ],
    "recommendations": [
      "Automate rotation where possible",
      "Test rotation procedures"
    ],
    "warnings": [
      "Improper rotation can cause service outages"
    ]
  },
  {
    "name": "ip_access_control",
    "description": "IP allowlisting for enhanced security in production environments",
    "pattern": "- Implement IP allowlisting on webhook endpoints",
    "category": "security",
    "type": "access_control",
    "complexity": "high",
    "safety": "critical",
    "filename": "doppler-security-guide.md",
    "lineNumber": 197,
    "section": "Use timing-safe comparison",
    "subsection": "Webhook Implementation",
    "usage": "Configure trusted IPs for production token access",
    "examples": [
      "Add CI/CD server IPs to allowlist",
      "Configure production server IP ranges"
    ],
    "recommendations": [
      "Always use IP allowlisting in production",
      "Regular audit of trusted IPs"
    ],
    "warnings": [
      "Incorrect IP configuration can break production access"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- Log all webhook attempts for auditing",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 199,
    "section": "Use timing-safe comparison",
    "subsection": "Webhook Implementation",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "ip_access_control",
    "description": "IP allowlisting for enhanced security in production environments",
    "pattern": "- [ ] Add IP allowlisting",
    "category": "security",
    "type": "access_control",
    "complexity": "high",
    "safety": "critical",
    "filename": "doppler-security-guide.md",
    "lineNumber": 210,
    "section": "Use timing-safe comparison",
    "subsection": "Webhook Implementation",
    "usage": "Configure trusted IPs for production token access",
    "examples": [
      "Add CI/CD server IPs to allowlist",
      "Configure production server IP ranges"
    ],
    "recommendations": [
      "Always use IP allowlisting in production",
      "Regular audit of trusted IPs"
    ],
    "warnings": [
      "Incorrect IP configuration can break production access"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "├── Production Config (inherits base)",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 234,
    "section": "Use timing-safe comparison",
    "subsection": "Configuration Inheritance Patterns",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "├── Staging Config (inherits base)",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 235,
    "section": "Use timing-safe comparison",
    "subsection": "Configuration Inheritance Patterns",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "└── Development Config (inherits base)",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 236,
    "section": "Use timing-safe comparison",
    "subsection": "Configuration Inheritance Patterns",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "└── Development Config (inherits base)",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 236,
    "section": "Use timing-safe comparison",
    "subsection": "Configuration Inheritance Patterns",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- Regularly audit inherited secrets",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 249,
    "section": "Use timing-safe comparison",
    "subsection": "Configuration Inheritance Patterns",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- Audit mirrored secrets regularly",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 280,
    "section": "Use timing-safe comparison",
    "subsection": "Root and Branch Config Management",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "1. **Personal Development Configs**",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 288,
    "section": "Use timing-safe comparison",
    "subsection": "Root and Branch Config Management",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "1. **Personal Development Configs**",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 288,
    "section": "Use timing-safe comparison",
    "subsection": "Root and Branch Config Management",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "- ⚠️ Can override production values if misconfigured",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 291,
    "section": "Use timing-safe comparison",
    "subsection": "Root and Branch Config Management",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "- Use for isolated feature development",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 295,
    "section": "Use timing-safe comparison",
    "subsection": "Root and Branch Config Management",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "- Implement naming conventions (e.g., `feature/auth-update`)",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 302,
    "section": "Use timing-safe comparison",
    "subsection": "Root and Branch Config Management",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- Audit override patterns",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 305,
    "section": "Use timing-safe comparison",
    "subsection": "Root and Branch Config Management",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- Set appropriate permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-security-guide.md",
    "lineNumber": 313,
    "section": "Use timing-safe comparison",
    "subsection": "Root and Branch Config Management",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- Regular security audits",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 318,
    "section": "Use timing-safe comparison",
    "subsection": "Root and Branch Config Management",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "### 1. Regular Security Audits",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 331,
    "section": "Use timing-safe comparison",
    "subsection": "General Security Recommendations",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "- [ ] Review all service tokens quarterly",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "doppler-security-guide.md",
    "lineNumber": 332,
    "section": "Use timing-safe comparison",
    "subsection": "General Security Recommendations",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "ip_access_control",
    "description": "IP allowlisting for enhanced security in production environments",
    "pattern": "- [ ] Audit trusted IP configurations",
    "category": "security",
    "type": "access_control",
    "complexity": "high",
    "safety": "critical",
    "filename": "doppler-security-guide.md",
    "lineNumber": 333,
    "section": "Use timing-safe comparison",
    "subsection": "General Security Recommendations",
    "usage": "Configure trusted IPs for production token access",
    "examples": [
      "Add CI/CD server IPs to allowlist",
      "Configure production server IP ranges"
    ],
    "recommendations": [
      "Always use IP allowlisting in production",
      "Regular audit of trusted IPs"
    ],
    "warnings": [
      "Incorrect IP configuration can break production access"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- [ ] Audit trusted IP configurations",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 333,
    "section": "Use timing-safe comparison",
    "subsection": "General Security Recommendations",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- [ ] Check user permissions and access",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-security-guide.md",
    "lineNumber": 334,
    "section": "Use timing-safe comparison",
    "subsection": "General Security Recommendations",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "- New service token creation",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "doppler-security-guide.md",
    "lineNumber": 341,
    "section": "Use timing-safe comparison",
    "subsection": "General Security Recommendations",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- Permission changes",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-security-guide.md",
    "lineNumber": 342,
    "section": "Use timing-safe comparison",
    "subsection": "General Security Recommendations",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "ip_access_control",
    "description": "IP allowlisting for enhanced security in production environments",
    "pattern": "- Trusted IP modifications",
    "category": "security",
    "type": "access_control",
    "complexity": "high",
    "safety": "critical",
    "filename": "doppler-security-guide.md",
    "lineNumber": 343,
    "section": "Use timing-safe comparison",
    "subsection": "General Security Recommendations",
    "usage": "Configure trusted IPs for production token access",
    "examples": [
      "Add CI/CD server IPs to allowlist",
      "Configure production server IP ranges"
    ],
    "recommendations": [
      "Always use IP allowlisting in production",
      "Regular audit of trusted IPs"
    ],
    "warnings": [
      "Incorrect IP configuration can break production access"
    ]
  },
  {
    "name": "secret_rotation_strategy",
    "description": "Secret rotation best practices for security and compliance",
    "pattern": "- Rotate all potentially exposed secrets",
    "category": "best_practices",
    "type": "security_lifecycle",
    "complexity": "high",
    "safety": "critical",
    "filename": "doppler-security-guide.md",
    "lineNumber": 351,
    "section": "Use timing-safe comparison",
    "subsection": "General Security Recommendations",
    "usage": "Implement regular secret rotation for security compliance",
    "examples": [
      "Automated rotation via API",
      "Zero-downtime rotation strategies"
    ],
    "recommendations": [
      "Automate rotation where possible",
      "Test rotation procedures"
    ],
    "warnings": [
      "Improper rotation can cause service outages"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- Review audit logs for unauthorized access",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 352,
    "section": "Use timing-safe comparison",
    "subsection": "General Security Recommendations",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- Review audit logs for unauthorized access",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-security-guide.md",
    "lineNumber": 352,
    "section": "Use timing-safe comparison",
    "subsection": "General Security Recommendations",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "2. **Unauthorized Access**",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-security-guide.md",
    "lineNumber": 355,
    "section": "Use timing-safe comparison",
    "subsection": "General Security Recommendations",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "ip_access_control",
    "description": "IP allowlisting for enhanced security in production environments",
    "pattern": "- Review and update trusted IPs",
    "category": "security",
    "type": "access_control",
    "complexity": "high",
    "safety": "critical",
    "filename": "doppler-security-guide.md",
    "lineNumber": 357,
    "section": "Use timing-safe comparison",
    "subsection": "General Security Recommendations",
    "usage": "Configure trusted IPs for production token access",
    "examples": [
      "Add CI/CD server IPs to allowlist",
      "Configure production server IP ranges"
    ],
    "recommendations": [
      "Always use IP allowlisting in production",
      "Regular audit of trusted IPs"
    ],
    "warnings": [
      "Incorrect IP configuration can break production access"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- Audit recent secret changes",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 358,
    "section": "Use timing-safe comparison",
    "subsection": "General Security Recommendations",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "- All service tokens and their purposes",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "doppler-security-guide.md",
    "lineNumber": 363,
    "section": "Use timing-safe comparison",
    "subsection": "General Security Recommendations",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "ip_access_control",
    "description": "IP allowlisting for enhanced security in production environments",
    "pattern": "- Trusted IP ranges and justifications",
    "category": "security",
    "type": "access_control",
    "complexity": "high",
    "safety": "critical",
    "filename": "doppler-security-guide.md",
    "lineNumber": 364,
    "section": "Use timing-safe comparison",
    "subsection": "General Security Recommendations",
    "usage": "Configure trusted IPs for production token access",
    "examples": [
      "Add CI/CD server IPs to allowlist",
      "Configure production server IP ranges"
    ],
    "recommendations": [
      "Always use IP allowlisting in production",
      "Regular audit of trusted IPs"
    ],
    "warnings": [
      "Incorrect IP configuration can break production access"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- User permissions matrix",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler-security-guide.md",
    "lineNumber": 365,
    "section": "Use timing-safe comparison",
    "subsection": "General Security Recommendations",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "Doppler provides robust security features, but they must be properly configured and maintained. Regular audits, proper access controls, and adherence to these best practices will help ensure your secrets remain secure.",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 374,
    "section": "Use timing-safe comparison",
    "subsection": "Conclusion",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "file_doppler_security-guide",
    "description": "Comprehensive guide: doppler-security-guide.md",
    "pattern": "Documentation file: doppler-security-guide.md",
    "category": "security",
    "type": "documentation",
    "complexity": "high",
    "safety": "safe",
    "filename": "doppler-security-guide.md",
    "lineNumber": 1,
    "section": "file_overview",
    "subsection": "",
    "usage": "Reference guide for doppler security-guide",
    "examples": [
      "Study doppler-security-guide.md for detailed information"
    ],
    "recommendations": [
      "Follow practices outlined in doppler-security-guide.md"
    ],
    "warnings": [],
    "topics": [
      "Table of Contents",
      "Service Token Management and Security",
      "Trusted IP Configurations",
      "Project Permission Models",
      "Webhook Implementation",
      "Configuration Inheritance Patterns",
      "Root and Branch Config Management",
      "General Security Recommendations",
      "Conclusion"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "---",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 1,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "---"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "tags: [\"doppler\", \"api\", \"sdk\", \"python\", \"javascript\", \"nodejs\", \"integration\"]",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "tags: [\"doppler\", \"api\", \"sdk\", \"python\", \"javascript\", \"nodejs\", \"integration\"]"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "api_endpoint_usage",
    "description": "Doppler REST API endpoint usage pattern",
    "pattern": "https://api.doppler.com/v3",
    "category": "api_usage",
    "type": "rest_api",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 26,
    "section": "Doppler API and SDK Integration Guide",
    "subsection": "API Overview",
    "usage": "Use Doppler REST API for programmatic access",
    "examples": [
      "https://api.doppler.com/v3"
    ],
    "recommendations": [
      "Use service tokens for API access",
      "Implement proper error handling"
    ],
    "warnings": [
      "Rate limiting applies to API calls"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "https://api.doppler.com/v3",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 26,
    "section": "Doppler API and SDK Integration Guide",
    "subsection": "API Overview",
    "usage": "Use as template for integration configuration",
    "examples": [
      "https://api.doppler.com/v3"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "|------------|-----------|------------------|------------|",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 32,
    "section": "Doppler API and SDK Integration Guide",
    "subsection": "API Overview",
    "usage": "Use as template for integration configuration",
    "examples": [
      "|------------|-----------|------------------|------------|"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- **Secrets Management**: `/secrets`, `/secrets/update`, `/secrets/download`",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 44,
    "section": "Doppler API and SDK Integration Guide",
    "subsection": "API Overview",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- **Secrets Management**: `/secrets`, `/secrets/update`, `/secrets/download`"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "- **Service Tokens**: `/configs/config/tokens`, `/configs/config/tokens/create`",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 48,
    "section": "Doppler API and SDK Integration Guide",
    "subsection": "API Overview",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "personal_token_security",
    "description": "Personal tokens for development - should not be used in production",
    "pattern": "2. **Personal Tokens** - User-specific access",
    "category": "security",
    "type": "token_management",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 56,
    "section": "Doppler API and SDK Integration Guide",
    "subsection": "Authentication",
    "usage": "Personal tokens for local development only",
    "examples": [
      "doppler login",
      "DOPPLER_TOKEN=dp.pt.development_token"
    ],
    "recommendations": [
      "Use only for local development",
      "Login via CLI for better security"
    ],
    "warnings": [
      "Do not use personal tokens in CI/CD or production"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "3. **Service Tokens** - Application/service access",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 57,
    "section": "Doppler API and SDK Integration Guide",
    "subsection": "Authentication",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "7. **Audit Tokens** - Audit log access",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 61,
    "section": "Doppler API and SDK Integration Guide",
    "subsection": "Authentication",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "api_endpoint_usage",
    "description": "Doppler REST API endpoint usage pattern",
    "pattern": "curl -X GET \"https://api.doppler.com/v3/projects\" \\",
    "category": "api_usage",
    "type": "rest_api",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 70,
    "section": "Doppler API and SDK Integration Guide",
    "subsection": "Authentication",
    "usage": "Use Doppler REST API for programmatic access",
    "examples": [
      "curl -X GET \"https://api.doppler.com/v3/projects\" \\"
    ],
    "recommendations": [
      "Use service tokens for API access",
      "Implement proper error handling"
    ],
    "warnings": [
      "Rate limiting applies to API calls"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "curl -X GET \"https://api.doppler.com/v3/projects\" \\",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 70,
    "section": "Doppler API and SDK Integration Guide",
    "subsection": "Authentication",
    "usage": "Use as template for integration configuration",
    "examples": [
      "curl -X GET \"https://api.doppler.com/v3/projects\" \\"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "config=\"production\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 106,
    "section": "Get secrets from a specific config",
    "subsection": "Python SDK",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "config=\"production\",",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 116,
    "section": "Update a single secret",
    "subsection": "Python SDK",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "secrets={",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 117,
    "section": "Update a single secret",
    "subsection": "Python SDK",
    "usage": "Use as template for integration configuration",
    "examples": [
      "secrets={"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "#### Create a Service Token",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 123,
    "section": "Update a single secret",
    "subsection": "Python SDK",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "# Create a service token for production config",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 125,
    "section": "Create a service token for production config",
    "subsection": "Python SDK",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "# Create a service token for production config",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 125,
    "section": "Create a service token for production config",
    "subsection": "Python SDK",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "print(f\"Token: {token.token}\")",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 132,
    "section": "Create a service token for production config",
    "subsection": "Python SDK",
    "usage": "Use as template for integration configuration",
    "examples": [
      "print(f\"Token: {token.token}\")"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "const doppler = new DopplerSDK({",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 148,
    "section": "Create a service token for production config",
    "subsection": "JavaScript/Node.js SDK",
    "usage": "Use as template for integration configuration",
    "examples": [
      "const doppler = new DopplerSDK({"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "async function listProjects() {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 166,
    "section": "Create a service token for production config",
    "subsection": "JavaScript/Node.js SDK",
    "usage": "Use as template for integration configuration",
    "examples": [
      "async function listProjects() {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "try {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 167,
    "section": "Create a service token for production config",
    "subsection": "JavaScript/Node.js SDK",
    "usage": "Use as template for integration configuration",
    "examples": [
      "try {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "} catch (error) {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 170,
    "section": "Create a service token for production config",
    "subsection": "JavaScript/Node.js SDK",
    "usage": "Use as template for integration configuration",
    "examples": [
      "} catch (error) {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "async function getSecrets(project, config) {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 178,
    "section": "Create a service token for production config",
    "subsection": "JavaScript/Node.js SDK",
    "usage": "Use as template for integration configuration",
    "examples": [
      "async function getSecrets(project, config) {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "const secrets = await doppler.secrets.list({",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 180,
    "section": "Create a service token for production config",
    "subsection": "JavaScript/Node.js SDK",
    "usage": "Use as template for integration configuration",
    "examples": [
      "const secrets = await doppler.secrets.list({"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "console.error('Error fetching secrets:', error);",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 186,
    "section": "Create a service token for production config",
    "subsection": "JavaScript/Node.js SDK",
    "usage": "Use as template for integration configuration",
    "examples": [
      "console.error('Error fetching secrets:', error);"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "async function updateSecrets(project, config, secretsObject) {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 193,
    "section": "Create a service token for production config",
    "subsection": "JavaScript/Node.js SDK",
    "usage": "Use as template for integration configuration",
    "examples": [
      "async function updateSecrets(project, config, secretsObject) {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "const result = await doppler.secrets.update({",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 195,
    "section": "Create a service token for production config",
    "subsection": "JavaScript/Node.js SDK",
    "usage": "Use as template for integration configuration",
    "examples": [
      "const result = await doppler.secrets.update({"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "secrets: secretsObject",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 198,
    "section": "Create a service token for production config",
    "subsection": "JavaScript/Node.js SDK",
    "usage": "Use as template for integration configuration",
    "examples": [
      "secrets: secretsObject"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "console.error('Error updating secrets:', error);",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 202,
    "section": "Create a service token for production config",
    "subsection": "JavaScript/Node.js SDK",
    "usage": "Use as template for integration configuration",
    "examples": [
      "console.error('Error updating secrets:', error);"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "await updateSecrets('my-project', 'production', {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 207,
    "section": "Create a service token for production config",
    "subsection": "JavaScript/Node.js SDK",
    "usage": "Use as template for integration configuration",
    "examples": [
      "await updateSecrets('my-project', 'production', {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "async function manageEnvironments(projectName) {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 215,
    "section": "Create a service token for production config",
    "subsection": "JavaScript/Node.js SDK",
    "usage": "Use as template for integration configuration",
    "examples": [
      "async function manageEnvironments(projectName) {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "const environments = await doppler.environments.list({",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 217,
    "section": "Create a service token for production config",
    "subsection": "JavaScript/Node.js SDK",
    "usage": "Use as template for integration configuration",
    "examples": [
      "const environments = await doppler.environments.list({"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "const newEnv = await doppler.environments.create({",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 222,
    "section": "Create a service token for production config",
    "subsection": "JavaScript/Node.js SDK",
    "usage": "Use as template for integration configuration",
    "examples": [
      "const newEnv = await doppler.environments.create({"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "return { environments, newEnv };",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 228,
    "section": "Create a service token for production config",
    "subsection": "JavaScript/Node.js SDK",
    "usage": "Use as template for integration configuration",
    "examples": [
      "return { environments, newEnv };"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "function SecretManager() {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 246,
    "section": "Create a service token for production config",
    "subsection": "Universal Import",
    "usage": "Use as template for integration configuration",
    "examples": [
      "function SecretManager() {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{ name: \"DATABASE_URL\", value: process.env.DATABASE_URL },",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 248,
    "section": "Create a service token for production config",
    "subsection": "Universal Import",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{ name: \"DATABASE_URL\", value: process.env.DATABASE_URL },"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{ name: \"API_KEY\", value: process.env.API_KEY },",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 249,
    "section": "Create a service token for production config",
    "subsection": "Universal Import",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{ name: \"API_KEY\", value: process.env.API_KEY },"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{ name: \"JWT_SECRET\", value: process.env.JWT_SECRET }",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 250,
    "section": "Create a service token for production config",
    "subsection": "Universal Import",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{ name: \"JWT_SECRET\", value: process.env.JWT_SECRET }"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{secrets.map((secret) => (",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 256,
    "section": "Create a service token for production config",
    "subsection": "Universal Import",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{secrets.map((secret) => ("
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "<div key={secret.name}>",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 257,
    "section": "Create a service token for production config",
    "subsection": "Universal Import",
    "usage": "Use as template for integration configuration",
    "examples": [
      "<div key={secret.name}>"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "<span>{secret.name}</span>",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 258,
    "section": "Create a service token for production config",
    "subsection": "Universal Import",
    "usage": "Use as template for integration configuration",
    "examples": [
      "<span>{secret.name}</span>"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "secretName={secret.name}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 260,
    "section": "Create a service token for production config",
    "subsection": "Universal Import",
    "usage": "Use as template for integration configuration",
    "examples": [
      "secretName={secret.name}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "secretValue={secret.value}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 261,
    "section": "Create a service token for production config",
    "subsection": "Universal Import",
    "usage": "Use as template for integration configuration",
    "examples": [
      "secretValue={secret.value}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "import { encryptSecret, importToDoppler } from '@dopplerhq/universal-import-core';",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 279,
    "section": "Create a service token for production config",
    "subsection": "Universal Import",
    "usage": "Use as template for integration configuration",
    "examples": [
      "import { encryptSecret, importToDoppler } from '@dopplerhq/universal-import-core';"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "async function customImport(secretName, secretValue) {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 281,
    "section": "Create a service token for production config",
    "subsection": "Universal Import",
    "usage": "Use as template for integration configuration",
    "examples": [
      "async function customImport(secretName, secretValue) {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "const encryptedData = await encryptSecret({",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 284,
    "section": "Create a service token for production config",
    "subsection": "Universal Import",
    "usage": "Use as template for integration configuration",
    "examples": [
      "const encryptedData = await encryptSecret({"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "name: secretName,",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 285,
    "section": "Create a service token for production config",
    "subsection": "Universal Import",
    "usage": "Use as template for integration configuration",
    "examples": [
      "name: secretName,"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "value: secretValue",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 286,
    "section": "Create a service token for production config",
    "subsection": "Universal Import",
    "usage": "Use as template for integration configuration",
    "examples": [
      "value: secretValue"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "def sync_local_env_to_doppler(self, project, config):",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 311,
    "section": "Create a service token for production config",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "def sync_local_env_to_doppler(self, project, config):"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "secrets = {}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 313,
    "section": "Create a service token for production config",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "secrets = {}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "print(f\"Synced {len(secrets)} secrets to Doppler\")",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 329,
    "section": "Update secrets in Doppler",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "print(f\"Synced {len(secrets)} secrets to Doppler\")"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "def fetch_and_export(self, project, config, export_file='.env.doppler'):",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 332,
    "section": "Update secrets in Doppler",
    "subsection": "Practical Examples",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "def fetch_and_export(self, project, config, export_file='.env.doppler'):",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 332,
    "section": "Update secrets in Doppler",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "def fetch_and_export(self, project, config, export_file='.env.doppler'):"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "\"\"\"Fetch secrets from Doppler and export to file\"\"\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 333,
    "section": "Update secrets in Doppler",
    "subsection": "Practical Examples",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "with open(export_file, 'w') as f:",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 339,
    "section": "Update secrets in Doppler",
    "subsection": "Practical Examples",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "f.write(f\"# Exported from Doppler on {datetime.now()}\\n\")",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 340,
    "section": "Update secrets in Doppler",
    "subsection": "Practical Examples",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "f.write(f\"# Exported from Doppler on {datetime.now()}\\n\")",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 340,
    "section": "Update secrets in Doppler",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "f.write(f\"# Exported from Doppler on {datetime.now()}\\n\")"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "for key, value in secrets.secrets.items():",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 341,
    "section": "Update secrets in Doppler",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "for key, value in secrets.secrets.items():"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "f.write(f\"{key}={value}\\n\")",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 342,
    "section": "Update secrets in Doppler",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "f.write(f\"{key}={value}\\n\")"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "print(f\"Exported secrets to {export_file}\")",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 344,
    "section": "Update secrets in Doppler",
    "subsection": "Practical Examples",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "print(f\"Exported secrets to {export_file}\")",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 344,
    "section": "Update secrets in Doppler",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "print(f\"Exported secrets to {export_file}\")"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "manager.sync_local_env_to_doppler(\"my-app\", \"development\")",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 349,
    "section": "Usage",
    "subsection": "Practical Examples",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "manager.fetch_and_export(\"my-app\", \"production\")",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 350,
    "section": "Usage",
    "subsection": "Practical Examples",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "class DopplerConfig {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 358,
    "section": "Usage",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "class DopplerConfig {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "constructor(token) {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 359,
    "section": "Usage",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "constructor(token) {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "this.doppler = new DopplerSDK({ accessToken: token });",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 360,
    "section": "Usage",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "this.doppler = new DopplerSDK({ accessToken: token });"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "this.secrets = {};",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 361,
    "section": "Usage",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "this.secrets = {};"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "async loadSecrets(project, config) {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 364,
    "section": "Usage",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "async loadSecrets(project, config) {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "const response = await this.doppler.secrets.list({",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 366,
    "section": "Usage",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "const response = await this.doppler.secrets.list({"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "Object.entries(this.secrets).forEach(([key, value]) => {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 374,
    "section": "Usage",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "Object.entries(this.secrets).forEach(([key, value]) => {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "console.log(`Loaded ${Object.keys(this.secrets).length} secrets`);",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 378,
    "section": "Usage",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "console.log(`Loaded ${Object.keys(this.secrets).length} secrets`);"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "console.error('Failed to load secrets:', error);",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 380,
    "section": "Usage",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "console.error('Failed to load secrets:', error);"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "get(key) {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 385,
    "section": "Usage",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "get(key) {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "const dopplerConfig = new DopplerConfig(process.env.DOPPLER_TOKEN);",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 392,
    "section": "Usage",
    "subsection": "Practical Examples",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "async function startServer() {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 395,
    "section": "Usage",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "async function startServer() {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "await dopplerConfig.loadSecrets('my-app', 'production');",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 396,
    "section": "Usage",
    "subsection": "Practical Examples",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "app.get('/health', (req, res) => {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 398,
    "section": "Usage",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "app.get('/health', (req, res) => {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "res.json({",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 399,
    "section": "Usage",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "res.json({"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "database: dopplerConfig.get('DATABASE_URL') ? 'connected' : 'not configured'",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 401,
    "section": "Usage",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "database: dopplerConfig.get('DATABASE_URL') ? 'connected' : 'not configured'"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "app.listen(PORT, () => {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 406,
    "section": "Usage",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "app.listen(PORT, () => {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "console.log(`Server running on port ${PORT}`);",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 407,
    "section": "Usage",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "console.log(`Server running on port ${PORT}`);"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "# deploy.sh - Doppler-powered deployment script",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 417,
    "section": "deploy.sh - Doppler-powered deployment script",
    "subsection": "Practical Examples",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "curl -Ls https://cli.doppler.com/install.sh | sh",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 420,
    "section": "Install Doppler CLI",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "curl -Ls https://cli.doppler.com/install.sh | sh"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "# Authenticate using service token",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 422,
    "section": "Authenticate using service token",
    "subsection": "Practical Examples",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_TOKEN=\"${DOPPLER_SERVICE_TOKEN}\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 423,
    "section": "Authenticate using service token",
    "subsection": "Practical Examples",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "export DOPPLER_TOKEN=\"${DOPPLER_SERVICE_TOKEN}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 423,
    "section": "Authenticate using service token",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "export DOPPLER_TOKEN=\"${DOPPLER_SERVICE_TOKEN}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "# Fetch and export secrets",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 425,
    "section": "Fetch and export secrets",
    "subsection": "Practical Examples",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 426,
    "section": "Fetch and export secrets",
    "subsection": "Practical Examples",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download \\",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 426,
    "section": "Fetch and export secrets",
    "subsection": "Practical Examples",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download \\"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "--project \"${PROJECT}\" \\",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 429,
    "section": "Fetch and export secrets",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "--project \"${PROJECT}\" \\"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "--config \"${ENV}\" > .env",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 430,
    "section": "Fetch and export secrets",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "--config \"${ENV}\" > .env"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "# Run deployment commands with secrets",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 432,
    "section": "Run deployment commands with secrets",
    "subsection": "Practical Examples",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "function verifyDopplerWebhook(payload, signature, secret) {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 443,
    "section": "Run deployment commands with secrets",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "function verifyDopplerWebhook(payload, signature, secret) {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "app.post('/webhooks/doppler', express.json(), async (req, res) => {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 454,
    "section": "Run deployment commands with secrets",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "app.post('/webhooks/doppler', express.json(), async (req, res) => {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "if (!verifyDopplerWebhook(req.body, signature, webhookSecret)) {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 458,
    "section": "Run deployment commands with secrets",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "if (!verifyDopplerWebhook(req.body, signature, webhookSecret)) {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "switch(req.body.type) {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 463,
    "section": "Run deployment commands with secrets",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "switch(req.body.type) {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "case 'config.secrets.updated':",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 464,
    "section": "Run deployment commands with secrets",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "case 'config.secrets.updated':"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "case 'config.secrets.deleted':",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 472,
    "section": "Run deployment commands with secrets",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "case 'config.secrets.deleted':"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "console.log('Secrets deleted:', req.body.data.secrets);",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 473,
    "section": "Run deployment commands with secrets",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "console.log('Secrets deleted:', req.body.data.secrets);"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "def promote_secrets(self, project, from_config, to_config):",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 488,
    "section": "Run deployment commands with secrets",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "def promote_secrets(self, project, from_config, to_config):"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_promotion_strategy",
    "description": "Best practices for promoting secrets between environments",
    "pattern": "\"\"\"Promote secrets from one environment to another\"\"\"",
    "category": "best_practices",
    "type": "environment_management",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 489,
    "section": "Run deployment commands with secrets",
    "subsection": "Practical Examples",
    "usage": "Systematically promote secrets from development to production",
    "examples": [
      "doppler secrets download --no-file -c dev | doppler secrets upload -c staging",
      "Exclude environment-specific secrets like DATABASE_URL"
    ],
    "recommendations": [
      "Test in staging before production",
      "Exclude environment-specific secrets"
    ],
    "warnings": [
      "Always validate promoted secrets before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "print(f\"Promoted {len(source_secrets.secrets)} secrets from {from_config} to {to_config}\")",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 503,
    "section": "Update destination with source secrets",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "print(f\"Promoted {len(source_secrets.secrets)} secrets from {from_config} to {to_config}\")"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "return {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 514,
    "section": "Update destination with source secrets",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "return {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "diff = manager.diff_environments(\"my-app\", \"development\", \"production\")",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 527,
    "section": "Usage",
    "subsection": "Practical Examples",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "print(f\"Environment differences: {diff}\")",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 528,
    "section": "Usage",
    "subsection": "Practical Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "print(f\"Environment differences: {diff}\")"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "secret_rotation_strategy",
    "description": "Secret rotation best practices for security and compliance",
    "pattern": "- Rotate tokens regularly",
    "category": "best_practices",
    "type": "security_lifecycle",
    "complexity": "high",
    "safety": "critical",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 536,
    "section": "Usage",
    "subsection": "Best Practices",
    "usage": "Implement regular secret rotation for security compliance",
    "examples": [
      "Automated rotation via API",
      "Zero-downtime rotation strategies"
    ],
    "recommendations": [
      "Automate rotation where possible",
      "Test rotation procedures"
    ],
    "warnings": [
      "Improper rotation can cause service outages"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "- Use service tokens for applications",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 537,
    "section": "Usage",
    "subsection": "Best Practices",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "- Use consistent naming conventions",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 550,
    "section": "Usage",
    "subsection": "Best Practices",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "5. **Development Workflow**",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 555,
    "section": "Usage",
    "subsection": "Best Practices",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "environment_promotion_strategy",
    "description": "Best practices for promoting secrets between environments",
    "pattern": "- Separate environments (dev, staging, prod)",
    "category": "best_practices",
    "type": "environment_management",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 556,
    "section": "Usage",
    "subsection": "Best Practices",
    "usage": "Systematically promote secrets from development to production",
    "examples": [
      "doppler secrets download --no-file -c dev | doppler secrets upload -c staging",
      "Exclude environment-specific secrets like DATABASE_URL"
    ],
    "recommendations": [
      "Test in staging before production",
      "Exclude environment-specific secrets"
    ],
    "warnings": [
      "Always validate promoted secrets before deployment"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- Regular audits of secret usage",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 559,
    "section": "Usage",
    "subsection": "Best Practices",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "file_doppler_api_sdk_guide",
    "description": "Comprehensive guide: doppler_api_sdk_guide.md",
    "pattern": "Documentation file: doppler_api_sdk_guide.md",
    "category": "api_usage",
    "type": "documentation",
    "complexity": "expert",
    "safety": "safe",
    "filename": "doppler_api_sdk_guide.md",
    "lineNumber": 1,
    "section": "file_overview",
    "subsection": "",
    "usage": "Reference guide for doppler_api_sdk_guide",
    "examples": [
      "Study doppler_api_sdk_guide.md for detailed information"
    ],
    "recommendations": [
      "Follow practices outlined in doppler_api_sdk_guide.md"
    ],
    "warnings": [],
    "topics": [
      "Table of Contents",
      "API Overview",
      "Authentication",
      "Python SDK",
      "JavaScript/Node.js SDK",
      "Universal Import",
      "Practical Examples",
      "Best Practices"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "---",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 1,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "---"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "tags: [\"doppler\", \"getting-started\", \"tutorial\", \"quick-start\"]",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "tags: [\"doppler\", \"getting-started\", \"tutorial\", \"quick-start\"]"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- A Doppler account ([Sign up here](https://dashboard.doppler.com/register))",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 17,
    "section": "Getting Started with Doppler",
    "subsection": "Prerequisites",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- A Doppler account ([Sign up here](https://dashboard.doppler.com/register))"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "- Administrative access to your development environment",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 18,
    "section": "Getting Started with Doppler",
    "subsection": "Prerequisites",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "1. Visit [Doppler's dashboard](https://dashboard.doppler.com/register)",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 25,
    "section": "Getting Started with Doppler",
    "subsection": "Quick Start Guide",
    "usage": "Use as template for integration configuration",
    "examples": [
      "1. Visit [Doppler's dashboard](https://dashboard.doppler.com/register)"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "- **Development**: For local development",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 36,
    "section": "Getting Started with Doppler",
    "subsection": "Quick Start Guide",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "curl -sLf --retry 3 --tlsv1.2 --proto \"=https\" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | sudo gpg --dearmor -o /usr/share/keyrings/doppler-archive-keyring.gpg",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 62,
    "section": "Add Doppler's GPG key",
    "subsection": "Quick Start Guide",
    "usage": "Use as template for integration configuration",
    "examples": [
      "curl -sLf --retry 3 --tlsv1.2 --proto \"=https\" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | sudo gpg --dearmor -o /usr/share/keyrings/doppler-archive-keyring.gpg"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "echo \"deb [signed-by=/usr/share/keyrings/doppler-archive-keyring.gpg] https://packages.doppler.com/public/cli/deb/debian any-version main\" | sudo tee /etc/apt/sources.list.d/doppler-cli.list",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 65,
    "section": "Add repository",
    "subsection": "Quick Start Guide",
    "usage": "Use as template for integration configuration",
    "examples": [
      "echo \"deb [signed-by=/usr/share/keyrings/doppler-archive-keyring.gpg] https://packages.doppler.com/public/cli/deb/debian any-version main\" | sudo tee /etc/apt/sources.list.d/doppler-cli.list"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_login",
    "description": "CLI command: login command",
    "pattern": "doppler login",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 74,
    "section": "Install",
    "subsection": "Quick Start Guide",
    "usage": "Use doppler login for login operations",
    "examples": [
      "doppler login",
      "doppler login --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_login",
    "description": "Doppler CLI command: login",
    "pattern": "doppler login",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 74,
    "section": "Install",
    "subsection": "Quick Start Guide",
    "usage": "Execute login operations via CLI",
    "examples": [
      "doppler login"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "doppler setup",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 84,
    "section": "Install",
    "subsection": "Quick Start Guide",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "cli_setup",
    "description": "CLI command: setup command",
    "pattern": "doppler setup",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 84,
    "section": "Install",
    "subsection": "Quick Start Guide",
    "usage": "Use doppler setup for setup operations",
    "examples": [
      "doppler setup",
      "doppler setup --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_setup",
    "description": "Doppler CLI command: setup",
    "pattern": "doppler setup",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 84,
    "section": "Install",
    "subsection": "Quick Start Guide",
    "usage": "Execute setup operations via CLI",
    "examples": [
      "doppler setup"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "Add secrets via the dashboard or CLI:",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 94,
    "section": "Install",
    "subsection": "Quick Start Guide",
    "usage": "Use as template for integration configuration",
    "examples": [
      "Add secrets via the dashboard or CLI:"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set API_KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 98,
    "section": "Interactive mode (recommended for sensitive values)",
    "subsection": "Quick Start Guide",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set API_KEY",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set API_KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 98,
    "section": "Interactive mode (recommended for sensitive values)",
    "subsection": "Quick Start Guide",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set API_KEY"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set DATABASE_URL=\"postgresql://user:pass@host:5432/db\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 101,
    "section": "Direct setting",
    "subsection": "Quick Start Guide",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set DATABASE_URL=\"postgresql://user:pass@host:5432/db\"",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set DATABASE_URL=\"postgresql://user:pass@host:5432/db\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 101,
    "section": "Direct setting",
    "subsection": "Quick Start Guide",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set DATABASE_URL=\"postgresql://user:pass@host:5432/db\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "doppler secrets set DATABASE_URL=\"postgresql://user:pass@host:5432/db\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 101,
    "section": "Direct setting",
    "subsection": "Quick Start Guide",
    "usage": "Use as template for integration configuration",
    "examples": [
      "doppler secrets set DATABASE_URL=\"postgresql://user:pass@host:5432/db\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set PORT=\"3000\" NODE_ENV=\"development\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 104,
    "section": "Multiple secrets",
    "subsection": "Quick Start Guide",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set PORT=\"3000\" NODE_ENV=\"development\"",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "doppler secrets set PORT=\"3000\" NODE_ENV=\"development\"",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 104,
    "section": "Multiple secrets",
    "subsection": "Quick Start Guide",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set PORT=\"3000\" NODE_ENV=\"development\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 104,
    "section": "Multiple secrets",
    "subsection": "Quick Start Guide",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set PORT=\"3000\" NODE_ENV=\"development\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "Use Doppler to inject secrets into your application:",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 109,
    "section": "Multiple secrets",
    "subsection": "Quick Start Guide",
    "usage": "Use as template for integration configuration",
    "examples": [
      "Use Doppler to inject secrets into your application:"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 113,
    "section": "Run with environment variables",
    "subsection": "Quick Start Guide",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- npm start",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 113,
    "section": "Run with environment variables",
    "subsection": "Quick Start Guide",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--mount",
    "description": "CLI command: run --mount command",
    "pattern": "doppler run --mount .env -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 116,
    "section": "Or mount as a file",
    "subsection": "Quick Start Guide",
    "usage": "Use doppler run --mount for run operations",
    "examples": [
      "doppler run --mount .env -- npm start",
      "doppler run --mount --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--mount",
    "description": "Doppler CLI command: run --mount",
    "pattern": "doppler run --mount .env -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 116,
    "section": "Or mount as a file",
    "subsection": "Quick Start Guide",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --mount .env -- npm start"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "2. **Use Consistent Naming**: Follow a naming convention for secrets (e.g., `SERVICE_API_KEY`)",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 122,
    "section": "Or mount as a file",
    "subsection": "Best Practices for Getting Started",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "2. **Use Consistent Naming**: Follow a naming convention for secrets (e.g., `SERVICE_API_KEY`)",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 122,
    "section": "Or mount as a file",
    "subsection": "Best Practices for Getting Started",
    "usage": "Use as template for integration configuration",
    "examples": [
      "2. **Use Consistent Naming**: Follow a naming convention for secrets (e.g., `SERVICE_API_KEY`)"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_promotion_strategy",
    "description": "Best practices for promoting secrets between environments",
    "pattern": "3. **Start with Development**: Set up your development environment first, then staging and production",
    "category": "best_practices",
    "type": "environment_management",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 123,
    "section": "Or mount as a file",
    "subsection": "Best Practices for Getting Started",
    "usage": "Systematically promote secrets from development to production",
    "examples": [
      "doppler secrets download --no-file -c dev | doppler secrets upload -c staging",
      "Exclude environment-specific secrets like DATABASE_URL"
    ],
    "recommendations": [
      "Test in staging before production",
      "Exclude environment-specific secrets"
    ],
    "warnings": [
      "Always validate promoted secrets before deployment"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "3. **Start with Development**: Set up your development environment first, then staging and production",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 123,
    "section": "Or mount as a file",
    "subsection": "Best Practices for Getting Started",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "4. **Leverage the CLI**: Use the CLI for local development and scripts",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 124,
    "section": "Or mount as a file",
    "subsection": "Best Practices for Getting Started",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "5. **Set Up Team Access Early**: Configure team permissions from the beginning",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "getting-started.md",
    "lineNumber": 125,
    "section": "Or mount as a file",
    "subsection": "Best Practices for Getting Started",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "cli_secrets_upload",
    "description": "CLI command: secrets upload command",
    "pattern": "doppler secrets upload .env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 132,
    "section": "Or mount as a file",
    "subsection": "Common First Tasks",
    "usage": "Use doppler secrets upload for secrets operations",
    "examples": [
      "doppler secrets upload .env",
      "doppler secrets upload --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_upload",
    "description": "Doppler CLI command: secrets upload",
    "pattern": "doppler secrets upload .env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 132,
    "section": "Or mount as a file",
    "subsection": "Common First Tasks",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets upload .env"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "Generate a service token for your CI/CD pipeline:",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "getting-started.md",
    "lineNumber": 141,
    "section": "Or mount as a file",
    "subsection": "Common First Tasks",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "3. Click \"Service Tokens\"",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "getting-started.md",
    "lineNumber": 144,
    "section": "Or mount as a file",
    "subsection": "Common First Tasks",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "secret_rotation_strategy",
    "description": "Secret rotation best practices for security and compliance",
    "pattern": "- Configure [Automatic Secret Rotation](../secrets-management/rotation.md)",
    "category": "best_practices",
    "type": "security_lifecycle",
    "complexity": "high",
    "safety": "critical",
    "filename": "getting-started.md",
    "lineNumber": 152,
    "section": "Or mount as a file",
    "subsection": "Next Steps",
    "usage": "Implement regular secret rotation for security compliance",
    "examples": [
      "Automated rotation via API",
      "Zero-downtime rotation strategies"
    ],
    "recommendations": [
      "Automate rotation where possible",
      "Test rotation procedures"
    ],
    "warnings": [
      "Improper rotation can cause service outages"
    ]
  },
  {
    "name": "file_getting_started",
    "description": "Comprehensive guide: getting-started.md",
    "pattern": "Documentation file: getting-started.md",
    "category": "installation",
    "type": "documentation",
    "complexity": "high",
    "safety": "safe",
    "filename": "getting-started.md",
    "lineNumber": 1,
    "section": "file_overview",
    "subsection": "",
    "usage": "Reference guide for getting started",
    "examples": [
      "Study getting-started.md for detailed information"
    ],
    "recommendations": [
      "Follow practices outlined in getting-started.md"
    ],
    "warnings": [],
    "topics": [
      "Prerequisites",
      "Quick Start Guide",
      "Best Practices for Getting Started",
      "Common First Tasks",
      "Next Steps"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "---",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 1,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "---"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "description: \"Complete guide to migrating existing secrets to Doppler using dashboard import, CLI upload, scripted imports, API integration, and sync imports\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 3,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "description: \"Complete guide to migrating existing secrets to Doppler using dashboard import, CLI upload, scripted imports, API integration, and sync imports\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "category: \"secrets-management\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 4,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "category: \"secrets-management\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "tags: [\"doppler\", \"import\", \"migration\", \"secrets\", \"cli\", \"api\", \"dashboard\"]",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "tags: [\"doppler\", \"import\", \"migration\", \"secrets\", \"cli\", \"api\", \"dashboard\"]"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "|--------|----------|--------|-------|",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 21,
    "section": "Importing Secrets into Doppler",
    "subsection": "Import Methods Comparison",
    "usage": "Use as template for integration configuration",
    "examples": [
      "|--------|----------|--------|-------|"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_promotion_strategy",
    "description": "Best practices for promoting secrets between environments",
    "pattern": "2. Select the environment (e.g., `dev`, `staging`, `production`)",
    "category": "best_practices",
    "type": "environment_management",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 34,
    "section": "Importing Secrets into Doppler",
    "subsection": "1. Dashboard Import",
    "usage": "Systematically promote secrets from development to production",
    "examples": [
      "doppler secrets download --no-file -c dev | doppler secrets upload -c staging",
      "Exclude environment-specific secrets like DATABASE_URL"
    ],
    "recommendations": [
      "Test in staging before production",
      "Exclude environment-specific secrets"
    ],
    "warnings": [
      "Always validate promoted secrets before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "CERTIFICATE=\"-----BEGIN CERTIFICATE-----",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 50,
    "section": "Multi-line values (use quotes)",
    "subsection": "1. Dashboard Import",
    "usage": "Use as template for integration configuration",
    "examples": [
      "CERTIFICATE=\"-----BEGIN CERTIFICATE-----"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "-----END CERTIFICATE-----\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 52,
    "section": "Multi-line values (use quotes)",
    "subsection": "1. Dashboard Import",
    "usage": "Use as template for integration configuration",
    "examples": [
      "-----END CERTIFICATE-----\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 57,
    "section": "Multi-line values (use quotes)",
    "subsection": "1. Dashboard Import",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"FEATURE_FLAGS\": {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 61,
    "section": "Multi-line values (use quotes)",
    "subsection": "1. Dashboard Import",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"FEATURE_FLAGS\": {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_secrets_upload",
    "description": "CLI command: secrets upload command",
    "pattern": "doppler secrets upload .env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 85,
    "section": "Upload .env file",
    "subsection": "2. CLI File Upload",
    "usage": "Use doppler secrets upload for secrets operations",
    "examples": [
      "doppler secrets upload .env",
      "doppler secrets upload --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_upload",
    "description": "Doppler CLI command: secrets upload",
    "pattern": "doppler secrets upload .env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 85,
    "section": "Upload .env file",
    "subsection": "2. CLI File Upload",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets upload .env"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler secrets upload .env.production --config production",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 88,
    "section": "Upload to specific config",
    "subsection": "2. CLI File Upload",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_secrets_upload",
    "description": "CLI command: secrets upload command",
    "pattern": "doppler secrets upload .env.production --config production",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 88,
    "section": "Upload to specific config",
    "subsection": "2. CLI File Upload",
    "usage": "Use doppler secrets upload for secrets operations",
    "examples": [
      "doppler secrets upload .env.production --config production",
      "doppler secrets upload --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_upload",
    "description": "Doppler CLI command: secrets upload",
    "pattern": "doppler secrets upload .env.production --config production",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 88,
    "section": "Upload to specific config",
    "subsection": "2. CLI File Upload",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets upload .env.production --config production"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_upload",
    "description": "CLI command: secrets upload command",
    "pattern": "doppler secrets upload secrets.json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 91,
    "section": "Upload JSON file",
    "subsection": "2. CLI File Upload",
    "usage": "Use doppler secrets upload for secrets operations",
    "examples": [
      "doppler secrets upload secrets.json",
      "doppler secrets upload --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_upload",
    "description": "Doppler CLI command: secrets upload",
    "pattern": "doppler secrets upload secrets.json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 91,
    "section": "Upload JSON file",
    "subsection": "2. CLI File Upload",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets upload secrets.json"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_upload",
    "description": "CLI command: secrets upload command",
    "pattern": "doppler secrets upload config.yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 94,
    "section": "Upload YAML file",
    "subsection": "2. CLI File Upload",
    "usage": "Use doppler secrets upload for secrets operations",
    "examples": [
      "doppler secrets upload config.yaml",
      "doppler secrets upload --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_upload",
    "description": "Doppler CLI command: secrets upload",
    "pattern": "doppler secrets upload config.yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 94,
    "section": "Upload YAML file",
    "subsection": "2. CLI File Upload",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets upload config.yaml"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_upload",
    "description": "CLI command: secrets upload command",
    "pattern": "doppler secrets upload .env.$env --config $env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 101,
    "section": "Upload multiple environment files",
    "subsection": "2. CLI File Upload",
    "usage": "Use doppler secrets upload for secrets operations",
    "examples": [
      "doppler secrets upload .env.$env --config $env",
      "doppler secrets upload --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_upload",
    "description": "Doppler CLI command: secrets upload",
    "pattern": "doppler secrets upload .env.$env --config $env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 101,
    "section": "Upload multiple environment files",
    "subsection": "2. CLI File Upload",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets upload .env.$env --config $env"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_upload",
    "description": "CLI command: secrets upload command",
    "pattern": "doppler secrets upload .env --dry-run",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 108,
    "section": "Dry run to see what would be imported",
    "subsection": "2. CLI File Upload",
    "usage": "Use doppler secrets upload for secrets operations",
    "examples": [
      "doppler secrets upload .env --dry-run",
      "doppler secrets upload --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_upload",
    "description": "Doppler CLI command: secrets upload",
    "pattern": "doppler secrets upload .env --dry-run",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 108,
    "section": "Dry run to see what would be imported",
    "subsection": "2. CLI File Upload",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets upload .env --dry-run"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format env > current.env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 111,
    "section": "Compare with existing secrets",
    "subsection": "2. CLI File Upload",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format env > current.env",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format env > current.env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 111,
    "section": "Compare with existing secrets",
    "subsection": "2. CLI File Upload",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format env > current.env"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "DOPPLER_PROJECT=\"my-project\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "importing-secrets.md",
    "lineNumber": 127,
    "section": "Configuration",
    "subsection": "3. Scripted Migration",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "DOPPLER_CONFIG=\"production\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 128,
    "section": "Configuration",
    "subsection": "3. Scripted Migration",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "doppler_key=$(echo \"$secret_name\" | tr '[:lower:]' '[:upper:]' | tr '-' '_' | tr '/' '_')",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 137,
    "section": "Convert secret name to uppercase with underscores",
    "subsection": "3. Scripted Migration",
    "usage": "Use as template for integration configuration",
    "examples": [
      "doppler_key=$(echo \"$secret_name\" | tr '[:lower:]' '[:upper:]' | tr '-' '_' | tr '/' '_')"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "echo \"$secret_value\" | doppler secrets set \"$doppler_key\" --project \"$DOPPLER_PROJECT\" --config \"$DOPPLER_CONFIG\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 141,
    "section": "Set in Doppler",
    "subsection": "3. Scripted Migration",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "echo \"$secret_value\" | doppler secrets set \"$doppler_key\" --project \"$DOPPLER_PROJECT\" --config \"$DOPPLER_CONFIG\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "echo \"$secret_value\" | doppler secrets set \"$doppler_key\" --project \"$DOPPLER_PROJECT\" --config \"$DOPPLER_CONFIG\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "importing-secrets.md",
    "lineNumber": 141,
    "section": "Set in Doppler",
    "subsection": "3. Scripted Migration",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "fetch_secrets() {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 162,
    "section": "Function to recursively fetch secrets",
    "subsection": "3. Scripted Migration",
    "usage": "Use as template for integration configuration",
    "examples": [
      "fetch_secrets() {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "fetch_secrets \"${path}${item}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 169,
    "section": "Recursive call for directories",
    "subsection": "3. Scripted Migration",
    "usage": "Use as template for integration configuration",
    "examples": [
      "fetch_secrets \"${path}${item}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "secret_json=$(vault kv get -format=json \"${path}${item}\")",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 172,
    "section": "Fetch secret",
    "subsection": "3. Scripted Migration",
    "usage": "Use as template for integration configuration",
    "examples": [
      "secret_json=$(vault kv get -format=json \"${path}${item}\")"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "echo \"$value\" | doppler secrets set \"$key\" --project \"$DOPPLER_PROJECT\" --config production",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 181,
    "section": "Set in Doppler",
    "subsection": "3. Scripted Migration",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "echo \"$value\" | doppler secrets set \"$key\" --project \"$DOPPLER_PROJECT\" --config production",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 181,
    "section": "Set in Doppler",
    "subsection": "3. Scripted Migration",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "echo \"$value\" | doppler secrets set \"$key\" --project \"$DOPPLER_PROJECT\" --config production"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "echo \"$value\" | doppler secrets set \"$key\" --project \"$DOPPLER_PROJECT\" --config production",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "importing-secrets.md",
    "lineNumber": 181,
    "section": "Set in Doppler",
    "subsection": "3. Scripted Migration",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "# .github/workflows/export-secrets.yml",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "importing-secrets.md",
    "lineNumber": 194,
    "section": ".github/workflows/export-secrets.yml",
    "subsection": "3. Scripted Migration",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "# .github/workflows/export-secrets.yml",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "importing-secrets.md",
    "lineNumber": 194,
    "section": ".github/workflows/export-secrets.yml",
    "subsection": "3. Scripted Migration",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "name: Export GitHub Secrets to Doppler",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "importing-secrets.md",
    "lineNumber": 195,
    "section": ".github/workflows/export-secrets.yml",
    "subsection": "3. Scripted Migration",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export:",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "importing-secrets.md",
    "lineNumber": 201,
    "section": ".github/workflows/export-secrets.yml",
    "subsection": "3. Scripted Migration",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "curl -sLf --retry 3 --tlsv1.2 --proto \"=https\" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | sudo apt-key add -",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 206,
    "section": ".github/workflows/export-secrets.yml",
    "subsection": "3. Scripted Migration",
    "usage": "Use as template for integration configuration",
    "examples": [
      "curl -sLf --retry 3 --tlsv1.2 --proto \"=https\" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | sudo apt-key add -"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "echo \"deb https://packages.doppler.com/public/cli/deb/debian any-version main\" | sudo tee /etc/apt/sources.list.d/doppler-cli.list",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 207,
    "section": ".github/workflows/export-secrets.yml",
    "subsection": "3. Scripted Migration",
    "usage": "Use as template for integration configuration",
    "examples": [
      "echo \"deb https://packages.doppler.com/public/cli/deb/debian any-version main\" | sudo tee /etc/apt/sources.list.d/doppler-cli.list"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "- name: Export Secrets",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "importing-secrets.md",
    "lineNumber": 210,
    "section": ".github/workflows/export-secrets.yml",
    "subsection": "3. Scripted Migration",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "DOPPLER_TOKEN: ${{ secrets.DOPPLER_IMPORT_TOKEN }}",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "importing-secrets.md",
    "lineNumber": 212,
    "section": ".github/workflows/export-secrets.yml",
    "subsection": "3. Scripted Migration",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "DOPPLER_TOKEN: ${{ secrets.DOPPLER_IMPORT_TOKEN }}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 212,
    "section": ".github/workflows/export-secrets.yml",
    "subsection": "3. Scripted Migration",
    "usage": "Use as template for integration configuration",
    "examples": [
      "DOPPLER_TOKEN: ${{ secrets.DOPPLER_IMPORT_TOKEN }}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"GITHUB_API_KEY\": \"${{ secrets.API_KEY }}\",",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 217,
    "section": "Create JSON from GitHub secrets",
    "subsection": "3. Scripted Migration",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"GITHUB_API_KEY\": \"${{ secrets.API_KEY }}\","
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"GITHUB_DATABASE_URL\": \"${{ secrets.DATABASE_URL }}\",",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 218,
    "section": "Create JSON from GitHub secrets",
    "subsection": "3. Scripted Migration",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"GITHUB_DATABASE_URL\": \"${{ secrets.DATABASE_URL }}\","
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"GITHUB_REDIS_URL\": \"${{ secrets.REDIS_URL }}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 219,
    "section": "Create JSON from GitHub secrets",
    "subsection": "3. Scripted Migration",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"GITHUB_REDIS_URL\": \"${{ secrets.REDIS_URL }}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "def import_secrets(csv_file, project, config):",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 238,
    "section": "import-from-csv.py",
    "subsection": "4. Bulk Import Patterns",
    "usage": "Use as template for integration configuration",
    "examples": [
      "def import_secrets(csv_file, project, config):"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "print(f\"✓ Imported {key} to {environment}\")",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 267,
    "section": "Set secret in Doppler",
    "subsection": "4. Bulk Import Patterns",
    "usage": "Use as template for integration configuration",
    "examples": [
      "print(f\"✓ Imported {key} to {environment}\")"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "print(f\"✗ Failed to import {key}: {stderr}\")",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 269,
    "section": "Set secret in Doppler",
    "subsection": "4. Bulk Import Patterns",
    "usage": "Use as template for integration configuration",
    "examples": [
      "print(f\"✗ Failed to import {key}: {stderr}\")"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "secrets_dict = {}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 297,
    "section": "Create temporary JSON file",
    "subsection": "4. Bulk Import Patterns",
    "usage": "Use as template for integration configuration",
    "examples": [
      "secrets_dict = {}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "for _, row in env_secrets.iterrows():",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 298,
    "section": "Create temporary JSON file",
    "subsection": "4. Bulk Import Patterns",
    "usage": "Use as template for integration configuration",
    "examples": [
      "for _, row in env_secrets.iterrows():"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "with open(f'temp_{env}.json', 'w') as f:",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 304,
    "section": "Upload to Doppler",
    "subsection": "4. Bulk Import Patterns",
    "usage": "Use as template for integration configuration",
    "examples": [
      "with open(f'temp_{env}.json', 'w') as f:"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "f'temp_{env}.json',",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 309,
    "section": "Upload to Doppler",
    "subsection": "4. Bulk Import Patterns",
    "usage": "Use as template for integration configuration",
    "examples": [
      "f'temp_{env}.json',"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "os.remove(f'temp_{env}.json')",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 316,
    "section": "Cleanup",
    "subsection": "4. Bulk Import Patterns",
    "usage": "Use as template for integration configuration",
    "examples": [
      "os.remove(f'temp_{env}.json')"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "print(f\"Imported {len(secrets_dict)} secrets to {env}\")",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 318,
    "section": "Cleanup",
    "subsection": "4. Bulk Import Patterns",
    "usage": "Use as template for integration configuration",
    "examples": [
      "print(f\"Imported {len(secrets_dict)} secrets to {env}\")"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "1. **Audit Current Secrets**",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 328,
    "section": "Usage",
    "subsection": "5. Migration Best Practices",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "# Convert to Doppler naming convention",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 339,
    "section": "Convert to Doppler naming convention",
    "subsection": "5. Migration Best Practices",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "SOURCE_FILE=\"${1:-secrets.env}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 359,
    "section": "Configuration",
    "subsection": "5. Migration Best Practices",
    "usage": "Use as template for integration configuration",
    "examples": [
      "SOURCE_FILE=\"${1:-secrets.env}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "DOPPLER_PROJECT=\"${2:-my-project}\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "importing-secrets.md",
    "lineNumber": 360,
    "section": "Configuration",
    "subsection": "5. Migration Best Practices",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "DOPPLER_PROJECT=\"${2:-my-project}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 360,
    "section": "Configuration",
    "subsection": "5. Migration Best Practices",
    "usage": "Use as template for integration configuration",
    "examples": [
      "DOPPLER_PROJECT=\"${2:-my-project}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "DOPPLER_CONFIG=\"${3:-development}\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 361,
    "section": "Configuration",
    "subsection": "5. Migration Best Practices",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "DOPPLER_CONFIG=\"${3:-development}\"",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 361,
    "section": "Configuration",
    "subsection": "5. Migration Best Practices",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "DOPPLER_CONFIG=\"${3:-development}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 361,
    "section": "Configuration",
    "subsection": "5. Migration Best Practices",
    "usage": "Use as template for integration configuration",
    "examples": [
      "DOPPLER_CONFIG=\"${3:-development}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "echo \"Project: $DOPPLER_PROJECT, Config: $DOPPLER_CONFIG\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "importing-secrets.md",
    "lineNumber": 364,
    "section": "Configuration",
    "subsection": "5. Migration Best Practices",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 368,
    "section": "Backup current Doppler secrets",
    "subsection": "5. Migration Best Practices",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download \\",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 368,
    "section": "Backup current Doppler secrets",
    "subsection": "5. Migration Best Practices",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download \\"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "--project \"$DOPPLER_PROJECT\" \\",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "importing-secrets.md",
    "lineNumber": 369,
    "section": "Backup current Doppler secrets",
    "subsection": "5. Migration Best Practices",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_secrets_upload",
    "description": "CLI command: secrets upload command",
    "pattern": "doppler secrets upload \"$SOURCE_FILE\" \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 376,
    "section": "Import new secrets",
    "subsection": "5. Migration Best Practices",
    "usage": "Use doppler secrets upload for secrets operations",
    "examples": [
      "doppler secrets upload \"$SOURCE_FILE\" \\",
      "doppler secrets upload --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_upload",
    "description": "Doppler CLI command: secrets upload",
    "pattern": "doppler secrets upload \"$SOURCE_FILE\" \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 376,
    "section": "Import new secrets",
    "subsection": "5. Migration Best Practices",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets upload \"$SOURCE_FILE\" \\"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets",
    "description": "CLI command: secrets command",
    "pattern": "doppler secrets \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 382,
    "section": "Verify",
    "subsection": "5. Migration Best Practices",
    "usage": "Use doppler secrets for secrets operations",
    "examples": [
      "doppler secrets \\",
      "doppler secrets --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets",
    "description": "Doppler CLI command: secrets",
    "pattern": "doppler secrets \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 382,
    "section": "Verify",
    "subsection": "5. Migration Best Practices",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets \\"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "echo \"Source secrets: $(grep -c '^[A-Z_]' source.env)\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 393,
    "section": "Compare secret counts",
    "subsection": "5. Migration Best Practices",
    "usage": "Use as template for integration configuration",
    "examples": [
      "echo \"Source secrets: $(grep -c '^[A-Z_]' source.env)\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "command_secrets_--json",
    "description": "Doppler CLI command: secrets --json",
    "pattern": "echo \"Doppler secrets: $(doppler secrets --json | jq '. | length')\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 394,
    "section": "Compare secret counts",
    "subsection": "5. Migration Best Practices",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "echo \"Doppler secrets: $(doppler secrets --json | jq '. | length')\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "echo \"Doppler secrets: $(doppler secrets --json | jq '. | length')\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 394,
    "section": "Compare secret counts",
    "subsection": "5. Migration Best Practices",
    "usage": "Use as template for integration configuration",
    "examples": [
      "echo \"Doppler secrets: $(doppler secrets --json | jq '. | length')\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- bash -c 'env | grep \"^API_KEY=\"'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 397,
    "section": "Verify specific secrets",
    "subsection": "5. Migration Best Practices",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- bash -c 'env | grep \"^API_KEY=\"'",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- bash -c 'env | grep \"^API_KEY=\"'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 397,
    "section": "Verify specific secrets",
    "subsection": "5. Migration Best Practices",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- bash -c 'env | grep \"^API_KEY=\"'"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--",
    "description": "CLI command: run -- command",
    "pattern": "doppler run -- npm test",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 400,
    "section": "Test application",
    "subsection": "5. Migration Best Practices",
    "usage": "Use doppler run -- for run operations",
    "examples": [
      "doppler run -- npm test",
      "doppler run -- --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "doppler run -- npm test",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 400,
    "section": "Test application",
    "subsection": "5. Migration Best Practices",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run -- npm test"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "# Export from Heroku",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "importing-secrets.md",
    "lineNumber": 407,
    "section": "Export from Heroku",
    "subsection": "6. Common Import Scenarios",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler secrets upload heroku-config.env --config production",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 411,
    "section": "Import to Doppler",
    "subsection": "6. Common Import Scenarios",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_secrets_upload",
    "description": "CLI command: secrets upload command",
    "pattern": "doppler secrets upload heroku-config.env --config production",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 411,
    "section": "Import to Doppler",
    "subsection": "6. Common Import Scenarios",
    "usage": "Use doppler secrets upload for secrets operations",
    "examples": [
      "doppler secrets upload heroku-config.env --config production",
      "doppler secrets upload --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_upload",
    "description": "Doppler CLI command: secrets upload",
    "pattern": "doppler secrets upload heroku-config.env --config production",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 411,
    "section": "Import to Doppler",
    "subsection": "6. Common Import Scenarios",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets upload heroku-config.env --config production"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "docker_secret_injection",
    "description": "Docker container secret injection using Doppler CLI",
    "pattern": "sed 's/^\\s*//' > docker-secrets.env",
    "category": "integration",
    "type": "container_deployment",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "importing-secrets.md",
    "lineNumber": 419,
    "section": "Extract from docker-compose.yml",
    "subsection": "6. Common Import Scenarios",
    "usage": "Inject secrets into Docker containers using Doppler CLI",
    "examples": [
      "doppler run -- docker build -t myapp .",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use Doppler CLI for secret injection",
      "Never bake secrets into images"
    ],
    "warnings": [
      "Ensure Doppler CLI is available in container"
    ]
  },
  {
    "name": "docker_secret_injection",
    "description": "Docker container secret injection using Doppler CLI",
    "pattern": "doppler secrets upload docker-secrets.env",
    "category": "integration",
    "type": "container_deployment",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "importing-secrets.md",
    "lineNumber": 422,
    "section": "Import to Doppler",
    "subsection": "6. Common Import Scenarios",
    "usage": "Inject secrets into Docker containers using Doppler CLI",
    "examples": [
      "doppler run -- docker build -t myapp .",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use Doppler CLI for secret injection",
      "Never bake secrets into images"
    ],
    "warnings": [
      "Ensure Doppler CLI is available in container"
    ]
  },
  {
    "name": "cli_secrets_upload",
    "description": "CLI command: secrets upload command",
    "pattern": "doppler secrets upload docker-secrets.env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 422,
    "section": "Import to Doppler",
    "subsection": "6. Common Import Scenarios",
    "usage": "Use doppler secrets upload for secrets operations",
    "examples": [
      "doppler secrets upload docker-secrets.env",
      "doppler secrets upload --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_upload",
    "description": "Doppler CLI command: secrets upload",
    "pattern": "doppler secrets upload docker-secrets.env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 422,
    "section": "Import to Doppler",
    "subsection": "6. Common Import Scenarios",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets upload docker-secrets.env"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "### Migrating from Kubernetes",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "importing-secrets.md",
    "lineNumber": 425,
    "section": "Import to Doppler",
    "subsection": "6. Common Import Scenarios",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "# Export from ConfigMap",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "importing-secrets.md",
    "lineNumber": 427,
    "section": "Export from ConfigMap",
    "subsection": "6. Common Import Scenarios",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "jq -r '.data | to_entries | .[] | \"\\(.key)=\\(.value)\"' > k8s-config.env",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "importing-secrets.md",
    "lineNumber": 429,
    "section": "Export from ConfigMap",
    "subsection": "6. Common Import Scenarios",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "# Export from Secret",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "importing-secrets.md",
    "lineNumber": 431,
    "section": "Export from Secret",
    "subsection": "6. Common Import Scenarios",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "jq -r '.data | to_entries | .[] | \"\\(.key)=\\(.value | @base64d)\"' > k8s-secrets.env",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "importing-secrets.md",
    "lineNumber": 433,
    "section": "Export from Secret",
    "subsection": "6. Common Import Scenarios",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "cat k8s-config.env k8s-secrets.env | doppler secrets upload",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "importing-secrets.md",
    "lineNumber": 436,
    "section": "Combine and import",
    "subsection": "6. Common Import Scenarios",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "command_secrets_upload",
    "description": "Doppler CLI command: secrets upload",
    "pattern": "cat k8s-config.env k8s-secrets.env | doppler secrets upload",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 436,
    "section": "Combine and import",
    "subsection": "6. Common Import Scenarios",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "cat k8s-config.env k8s-secrets.env | doppler secrets upload"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "# Fix naming issues",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 445,
    "section": "Fix naming issues",
    "subsection": "7. Troubleshooting Import Issues",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "cli_secrets_upload",
    "description": "CLI command: secrets upload command",
    "pattern": "doppler secrets upload \"$file\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 460,
    "section": "Split large files",
    "subsection": "7. Troubleshooting Import Issues",
    "usage": "Use doppler secrets upload for secrets operations",
    "examples": [
      "doppler secrets upload \"$file\"",
      "doppler secrets upload --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_upload",
    "description": "Doppler CLI command: secrets upload",
    "pattern": "doppler secrets upload \"$file\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 460,
    "section": "Split large files",
    "subsection": "7. Troubleshooting Import Issues",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets upload \"$file\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_secrets_--json",
    "description": "Doppler CLI command: secrets --json",
    "pattern": "<(doppler secrets --json | jq -r 'keys[]' | sort) > missing.txt",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 478,
    "section": "Check for missing secrets",
    "subsection": "7. Troubleshooting Import Issues",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "<(doppler secrets --json | jq -r 'keys[]' | sort) > missing.txt"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "echo \"Missing secrets:\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 481,
    "section": "Check for missing secrets",
    "subsection": "7. Troubleshooting Import Issues",
    "usage": "Use as template for integration configuration",
    "examples": [
      "echo \"Missing secrets:\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "file_importing_secrets",
    "description": "Comprehensive guide: importing-secrets.md",
    "pattern": "Documentation file: importing-secrets.md",
    "category": "best_practices",
    "type": "documentation",
    "complexity": "expert",
    "safety": "safe",
    "filename": "importing-secrets.md",
    "lineNumber": 1,
    "section": "file_overview",
    "subsection": "",
    "usage": "Reference guide for importing secrets",
    "examples": [
      "Study importing-secrets.md for detailed information"
    ],
    "recommendations": [
      "Follow practices outlined in importing-secrets.md"
    ],
    "warnings": [],
    "topics": [
      "Overview",
      "Import Methods Comparison",
      "1. Dashboard Import",
      "2. CLI File Upload",
      "3. Scripted Migration",
      "4. Bulk Import Patterns",
      "5. Migration Best Practices",
      "6. Common Import Scenarios",
      "7. Troubleshooting Import Issues"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "---",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 1,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "---"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "tags: [\"doppler\", \"cli\", \"installation\", \"setup\"]",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "tags: [\"doppler\", \"cli\", \"installation\", \"setup\"]"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "curl -Ls --tlsv1.2 --proto \"=https\" --retry 3 https://cli.doppler.com/install.sh | sh",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 38,
    "section": "Download and install the latest release",
    "subsection": "Installation Methods",
    "usage": "Use as template for integration configuration",
    "examples": [
      "curl -Ls --tlsv1.2 --proto \"=https\" --retry 3 https://cli.doppler.com/install.sh | sh"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "command_https",
    "description": "Doppler CLI command: https",
    "pattern": "scoop bucket add doppler https://github.com/DopplerHQ/scoop-doppler.git",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 51,
    "section": "Add Doppler bucket",
    "subsection": "Installation Methods",
    "usage": "Execute https operations via CLI",
    "examples": [
      "scoop bucket add doppler https://github.com/DopplerHQ/scoop-doppler.git"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "scoop bucket add doppler https://github.com/DopplerHQ/scoop-doppler.git",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 51,
    "section": "Add Doppler bucket",
    "subsection": "Installation Methods",
    "usage": "Use as template for integration configuration",
    "examples": [
      "scoop bucket add doppler https://github.com/DopplerHQ/scoop-doppler.git"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "iwr -useb https://cli.doppler.com/install.ps1 | iex",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 60,
    "section": "Run as Administrator",
    "subsection": "Installation Methods",
    "usage": "Use as template for integration configuration",
    "examples": [
      "iwr -useb https://cli.doppler.com/install.ps1 | iex"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "curl -sLf --retry 3 --tlsv1.2 --proto \"=https\" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | sudo gpg --dearmor -o /usr/share/keyrings/doppler-archive-keyring.gpg",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 71,
    "section": "Add Doppler's GPG key",
    "subsection": "Installation Methods",
    "usage": "Use as template for integration configuration",
    "examples": [
      "curl -sLf --retry 3 --tlsv1.2 --proto \"=https\" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | sudo gpg --dearmor -o /usr/share/keyrings/doppler-archive-keyring.gpg"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "echo \"deb [signed-by=/usr/share/keyrings/doppler-archive-keyring.gpg] https://packages.doppler.com/public/cli/deb/debian any-version main\" | sudo tee /etc/apt/sources.list.d/doppler-cli.list",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 74,
    "section": "Add repository",
    "subsection": "Installation Methods",
    "usage": "Use as template for integration configuration",
    "examples": [
      "echo \"deb [signed-by=/usr/share/keyrings/doppler-archive-keyring.gpg] https://packages.doppler.com/public/cli/deb/debian any-version main\" | sudo tee /etc/apt/sources.list.d/doppler-cli.list"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "sudo rpm --import 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key'",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 83,
    "section": "Add Doppler's GPG key",
    "subsection": "Installation Methods",
    "usage": "Use as template for integration configuration",
    "examples": [
      "sudo rpm --import 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key'"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "curl -sLf --retry 3 --tlsv1.2 --proto \"=https\" 'https://packages.doppler.com/public/cli/config.rpm.txt' | sudo tee /etc/yum.repos.d/doppler-cli.repo",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 86,
    "section": "Add repository",
    "subsection": "Installation Methods",
    "usage": "Use as template for integration configuration",
    "examples": [
      "curl -sLf --retry 3 --tlsv1.2 --proto \"=https\" 'https://packages.doppler.com/public/cli/config.rpm.txt' | sudo tee /etc/yum.repos.d/doppler-cli.repo"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "wget -q -t3 'https://packages.doppler.com/public/cli/rsa.8004D9FF50437357.key' -O /etc/apk/keys/[email protected]",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 98,
    "section": "Add Doppler's signing key",
    "subsection": "Installation Methods",
    "usage": "Use as template for integration configuration",
    "examples": [
      "wget -q -t3 'https://packages.doppler.com/public/cli/rsa.8004D9FF50437357.key' -O /etc/apk/keys/[email protected]"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "echo 'https://packages.doppler.com/public/cli/alpine/any-version/main' | tee -a /etc/apk/repositories",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 101,
    "section": "Add repository",
    "subsection": "Installation Methods",
    "usage": "Use as template for integration configuration",
    "examples": [
      "echo 'https://packages.doppler.com/public/cli/alpine/any-version/main' | tee -a /etc/apk/repositories"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "curl -sLf --retry 3 --tlsv1.2 --proto \"=https\" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | gpg --dearmor -o /usr/share/keyrings/doppler-archive-keyring.gpg && \\",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 121,
    "section": "Add to your Dockerfile",
    "subsection": "Installation Methods",
    "usage": "Use as template for integration configuration",
    "examples": [
      "curl -sLf --retry 3 --tlsv1.2 --proto \"=https\" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | gpg --dearmor -o /usr/share/keyrings/doppler-archive-keyring.gpg && \\"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "echo \"deb [signed-by=/usr/share/keyrings/doppler-archive-keyring.gpg] https://packages.doppler.com/public/cli/deb/debian any-version main\" | tee /etc/apt/sources.list.d/doppler-cli.list && \\",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 122,
    "section": "Add to your Dockerfile",
    "subsection": "Installation Methods",
    "usage": "Use as template for integration configuration",
    "examples": [
      "echo \"deb [signed-by=/usr/share/keyrings/doppler-archive-keyring.gpg] https://packages.doppler.com/public/cli/deb/debian any-version main\" | tee /etc/apt/sources.list.d/doppler-cli.list && \\"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_--version",
    "description": "CLI command: --version command",
    "pattern": "doppler --version",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 132,
    "section": "Check version",
    "subsection": "Verification",
    "usage": "Use doppler --version for --version operations",
    "examples": [
      "doppler --version",
      "doppler --version --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_--version",
    "description": "Doppler CLI command: --version",
    "pattern": "doppler --version",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 132,
    "section": "Check version",
    "subsection": "Verification",
    "usage": "Execute --version operations via CLI",
    "examples": [
      "doppler --version"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_--help",
    "description": "CLI command: --help command",
    "pattern": "doppler --help",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 135,
    "section": "View help",
    "subsection": "Verification",
    "usage": "Use doppler --help for --help operations",
    "examples": [
      "doppler --help",
      "doppler --help --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_--help",
    "description": "Doppler CLI command: --help",
    "pattern": "doppler --help",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 135,
    "section": "View help",
    "subsection": "Verification",
    "usage": "Execute --help operations via CLI",
    "examples": [
      "doppler --help"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_login",
    "description": "CLI command: login command",
    "pattern": "doppler login",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 142,
    "section": "View help",
    "subsection": "Post-Installation Setup",
    "usage": "Use doppler login for login operations",
    "examples": [
      "doppler login",
      "doppler login --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_login",
    "description": "Doppler CLI command: login",
    "pattern": "doppler login",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 142,
    "section": "View help",
    "subsection": "Post-Installation Setup",
    "usage": "Execute login operations via CLI",
    "examples": [
      "doppler login"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_completion_bash",
    "description": "Doppler CLI command: completion bash",
    "pattern": "source <(doppler completion bash)",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 150,
    "section": "Add to ~/.bashrc or ~/.bash_profile",
    "subsection": "Post-Installation Setup",
    "usage": "Execute completion operations via CLI",
    "examples": [
      "source <(doppler completion bash)"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_completion_zsh",
    "description": "Doppler CLI command: completion zsh",
    "pattern": "source <(doppler completion zsh)",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 156,
    "section": "Add to ~/.zshrc",
    "subsection": "Post-Installation Setup",
    "usage": "Execute completion operations via CLI",
    "examples": [
      "source <(doppler completion zsh)"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_completion_fish",
    "description": "CLI command: completion fish command",
    "pattern": "doppler completion fish | source",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 162,
    "section": "Add to ~/.config/fish/config.fish",
    "subsection": "Post-Installation Setup",
    "usage": "Use doppler completion fish for completion operations",
    "examples": [
      "doppler completion fish | source",
      "doppler completion fish --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_completion_fish",
    "description": "Doppler CLI command: completion fish",
    "pattern": "doppler completion fish | source",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 162,
    "section": "Add to ~/.config/fish/config.fish",
    "subsection": "Post-Installation Setup",
    "usage": "Execute completion operations via CLI",
    "examples": [
      "doppler completion fish | source"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_configure_set",
    "description": "CLI command: configure set command",
    "pattern": "doppler configure set output json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 168,
    "section": "Set default output format",
    "subsection": "Post-Installation Setup",
    "usage": "Use doppler configure set for configure operations",
    "examples": [
      "doppler configure set output json",
      "doppler configure set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configure_set",
    "description": "Doppler CLI command: configure set",
    "pattern": "doppler configure set output json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 168,
    "section": "Set default output format",
    "subsection": "Post-Installation Setup",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "doppler configure set output json"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_configure_set",
    "description": "CLI command: configure set command",
    "pattern": "doppler configure set analytics true",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 171,
    "section": "Enable analytics (optional)",
    "subsection": "Post-Installation Setup",
    "usage": "Use doppler configure set for configure operations",
    "examples": [
      "doppler configure set analytics true",
      "doppler configure set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configure_set",
    "description": "Doppler CLI command: configure set",
    "pattern": "doppler configure set analytics true",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 171,
    "section": "Enable analytics (optional)",
    "subsection": "Post-Installation Setup",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "doppler configure set analytics true"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_update",
    "description": "CLI command: update command",
    "pattern": "doppler update",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 193,
    "section": "Enable analytics (optional)",
    "subsection": "Updating Doppler CLI",
    "usage": "Use doppler update for update operations",
    "examples": [
      "doppler update",
      "doppler update --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_update",
    "description": "Doppler CLI command: update",
    "pattern": "doppler update",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 193,
    "section": "Enable analytics (optional)",
    "subsection": "Updating Doppler CLI",
    "usage": "Execute update operations via CLI",
    "examples": [
      "doppler update"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "1. **Permission Denied**",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "installation.md",
    "lineNumber": 200,
    "section": "Enable analytics (optional)",
    "subsection": "Troubleshooting Installation",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- Check file permissions in installation directory",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "installation.md",
    "lineNumber": 202,
    "section": "Enable analytics (optional)",
    "subsection": "Troubleshooting Installation",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "command_configure_get",
    "description": "Doppler CLI command: configure get",
    "pattern": "- Check installation logs: `doppler configure get install_log`",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 218,
    "section": "Enable analytics (optional)",
    "subsection": "Troubleshooting Installation",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "- Check installation logs: `doppler configure get install_log`"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- Check installation logs: `doppler configure get install_log`",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 218,
    "section": "Enable analytics (optional)",
    "subsection": "Troubleshooting Installation",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- Check installation logs: `doppler configure get install_log`"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- Visit [Doppler Community](https://community.doppler.com)",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 219,
    "section": "Enable analytics (optional)",
    "subsection": "Troubleshooting Installation",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- Visit [Doppler Community](https://community.doppler.com)"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- Contact support: [support.doppler.com](https://support.doppler.com)",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 220,
    "section": "Enable analytics (optional)",
    "subsection": "Troubleshooting Installation",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- Contact support: [support.doppler.com](https://support.doppler.com)"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "file_installation",
    "description": "Comprehensive guide: installation.md",
    "pattern": "Documentation file: installation.md",
    "category": "installation",
    "type": "documentation",
    "complexity": "expert",
    "safety": "safe",
    "filename": "installation.md",
    "lineNumber": 1,
    "section": "file_overview",
    "subsection": "",
    "usage": "Reference guide for installation",
    "examples": [
      "Study installation.md for detailed information"
    ],
    "recommendations": [
      "Follow practices outlined in installation.md"
    ],
    "warnings": [],
    "topics": [
      "System Requirements",
      "Installation Methods",
      "Verification",
      "Post-Installation Setup",
      "Updating Doppler CLI",
      "Troubleshooting Installation",
      "Uninstallation"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "---",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "overview.md",
    "lineNumber": 1,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "---"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "description: \"Introduction to Doppler, the SecretOps platform for managing application secrets and configuration\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "overview.md",
    "lineNumber": 3,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "description: \"Introduction to Doppler, the SecretOps platform for managing application secrets and configuration\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "tags: [\"doppler\", \"overview\", \"secops\", \"secrets-management\"]",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "overview.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "tags: [\"doppler\", \"overview\", \"secops\", \"secrets-management\"]"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "Doppler is a SecretOps Platform designed to simplify secrets management for teams of all sizes. The platform aims to help developers manage configuration and secrets more efficiently across development and production environments.",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "overview.md",
    "lineNumber": 16,
    "section": "Doppler Overview",
    "subsection": "What is Doppler?",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "Doppler is a SecretOps Platform designed to simplify secrets management for teams of all sizes. The platform aims to help developers manage configuration and secrets more efficiently across development and production environments.",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "overview.md",
    "lineNumber": 16,
    "section": "Doppler Overview",
    "subsection": "What is Doppler?",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- **Fine-grained Access Controls**: Role-based permissions for projects and environments",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "overview.md",
    "lineNumber": 34,
    "section": "Doppler Overview",
    "subsection": "Core Features",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- **Activity Logging**: Complete audit trail of all secret changes",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "overview.md",
    "lineNumber": 35,
    "section": "Doppler Overview",
    "subsection": "Core Features",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- **Activity Logging**: Complete audit trail of all secret changes",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "overview.md",
    "lineNumber": 35,
    "section": "Doppler Overview",
    "subsection": "Core Features",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- **Activity Logging**: Complete audit trail of all secret changes"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- Maintains comprehensive audit logs",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "overview.md",
    "lineNumber": 44,
    "section": "Doppler Overview",
    "subsection": "Key Benefits",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "- Seamless CLI for local development",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "overview.md",
    "lineNumber": 48,
    "section": "Doppler Overview",
    "subsection": "Key Benefits",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "environment_promotion_strategy",
    "description": "Best practices for promoting secrets between environments",
    "pattern": "3. **Environments**: Development stages (dev, staging, production)",
    "category": "best_practices",
    "type": "environment_management",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "overview.md",
    "lineNumber": 62,
    "section": "Doppler Overview",
    "subsection": "Platform Architecture",
    "usage": "Systematically promote secrets from development to production",
    "examples": [
      "doppler secrets download --no-file -c dev | doppler secrets upload -c staging",
      "Exclude environment-specific secrets like DATABASE_URL"
    ],
    "recommendations": [
      "Test in staging before production",
      "Exclude environment-specific secrets"
    ],
    "warnings": [
      "Always validate promoted secrets before deployment"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "3. **Environments**: Development stages (dev, staging, production)",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "overview.md",
    "lineNumber": 62,
    "section": "Doppler Overview",
    "subsection": "Platform Architecture",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "- Container Platforms (Docker, Kubernetes)",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "overview.md",
    "lineNumber": 70,
    "section": "Doppler Overview",
    "subsection": "Integration Ecosystem",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "github_actions_integration",
    "description": "GitHub Actions workflow integration with Doppler secrets",
    "pattern": "- CI/CD Systems (GitHub Actions, GitLab CI, CircleCI)",
    "category": "integration",
    "type": "ci_cd_workflow",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "overview.md",
    "lineNumber": 71,
    "section": "Doppler Overview",
    "subsection": "Integration Ecosystem",
    "usage": "Integrate Doppler secrets into GitHub Actions workflows",
    "examples": [
      "uses: dopplerhq/secrets-fetch-action@v1.1.0",
      "with: doppler-token: ${{ secrets.DOPPLER_TOKEN }}"
    ],
    "recommendations": [
      "Use GitHub Actions integration action",
      "Store Doppler token in GitHub Secrets"
    ],
    "warnings": [
      "Never expose Doppler tokens in workflow logs"
    ]
  },
  {
    "name": "file_overview",
    "description": "Comprehensive guide: overview.md",
    "pattern": "Documentation file: overview.md",
    "category": "best_practices",
    "type": "documentation",
    "complexity": "low",
    "safety": "safe",
    "filename": "overview.md",
    "lineNumber": 1,
    "section": "file_overview",
    "subsection": "",
    "usage": "Reference guide for overview",
    "examples": [
      "Study overview.md for detailed information"
    ],
    "recommendations": [
      "Follow practices outlined in overview.md"
    ],
    "warnings": [],
    "topics": [
      "What is Doppler?",
      "Key Problems Doppler Solves",
      "Core Features",
      "Key Benefits",
      "Platform Architecture",
      "Integration Ecosystem"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "---",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "project-organization.md",
    "lineNumber": 1,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "---"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "description: \"Learn best practices for organizing Doppler projects, environments, and configurations with proper naming conventions and structural hierarchy\"",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "project-organization.md",
    "lineNumber": 3,
    "section": "",
    "subsection": "",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "tags: [\"doppler\", \"organization\", \"projects\", \"environments\", \"structure\", \"best-practices\"]",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "project-organization.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "tags: [\"doppler\", \"organization\", \"projects\", \"environments\", \"structure\", \"best-practices\"]"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_promotion_strategy",
    "description": "Best practices for promoting secrets between environments",
    "pattern": "│   ├── Environments (dev, staging, production)",
    "category": "best_practices",
    "type": "environment_management",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "project-organization.md",
    "lineNumber": 21,
    "section": "Doppler Project Organization",
    "subsection": "Core Organizational Concepts",
    "usage": "Systematically promote secrets from development to production",
    "examples": [
      "doppler secrets download --no-file -c dev | doppler secrets upload -c staging",
      "Exclude environment-specific secrets like DATABASE_URL"
    ],
    "recommendations": [
      "Test in staging before production",
      "Exclude environment-specific secrets"
    ],
    "warnings": [
      "Always validate promoted secrets before deployment"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "└── Team Members & Permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "project-organization.md",
    "lineNumber": 25,
    "section": "Doppler Project Organization",
    "subsection": "Core Organizational Concepts",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "## Project Naming Best Practices",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "project-organization.md",
    "lineNumber": 28,
    "section": "Doppler Project Organization",
    "subsection": "Project Naming Best Practices",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "Projects should map 1:1 to a specific application or service. Follow these naming conventions:",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "project-organization.md",
    "lineNumber": 30,
    "section": "Doppler Project Organization",
    "subsection": "Project Naming Best Practices",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "### Naming Patterns",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "project-organization.md",
    "lineNumber": 32,
    "section": "Doppler Project Organization",
    "subsection": "Project Naming Best Practices",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "2. **Service-Based Naming**: Use descriptive service names",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "project-organization.md",
    "lineNumber": 42,
    "section": "Doppler Project Organization",
    "subsection": "Project Naming Best Practices",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "### Naming Rules",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "project-organization.md",
    "lineNumber": 55,
    "section": "Doppler Project Organization",
    "subsection": "Project Naming Best Practices",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "Each project contains environments that map to your deployment stages:",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "project-organization.md",
    "lineNumber": 63,
    "section": "Doppler Project Organization",
    "subsection": "Environment Structure",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "- **Development** (`dev`): Local development",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "project-organization.md",
    "lineNumber": 66,
    "section": "Doppler Project Organization",
    "subsection": "Environment Structure",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "DATABASE_URL=${shared-database.DATABASE_URL}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "project-organization.md",
    "lineNumber": 136,
    "section": "Doppler Project Organization",
    "subsection": "Organizational Strategies",
    "usage": "Use as template for integration configuration",
    "examples": [
      "DATABASE_URL=${shared-database.DATABASE_URL}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "Use branch configs instead for developer-specific configurations.",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "project-organization.md",
    "lineNumber": 195,
    "section": "Doppler Project Organization",
    "subsection": "Anti-Patterns to Avoid",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "### ❌ Inconsistent Naming",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "project-organization.md",
    "lineNumber": 197,
    "section": "Doppler Project Organization",
    "subsection": "Anti-Patterns to Avoid",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "Maintain consistent naming conventions across all projects.",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "project-organization.md",
    "lineNumber": 203,
    "section": "Doppler Project Organization",
    "subsection": "Anti-Patterns to Avoid",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "- [ ] Establish naming conventions before creating projects",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "project-organization.md",
    "lineNumber": 208,
    "section": "Doppler Project Organization",
    "subsection": "Project Organization Checklist",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "- [ ] Plan environment structure based on deployment pipeline",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "project-organization.md",
    "lineNumber": 209,
    "section": "Doppler Project Organization",
    "subsection": "Project Organization Checklist",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "3. **Regular Audits**: Review project structure quarterly",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "project-organization.md",
    "lineNumber": 219,
    "section": "Doppler Project Organization",
    "subsection": "Tips for Large Organizations",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "4. **Automate Creation**: Use Doppler's API for consistent project setup",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "project-organization.md",
    "lineNumber": 220,
    "section": "Doppler Project Organization",
    "subsection": "Tips for Large Organizations",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "file_project_organization",
    "description": "Comprehensive guide: project-organization.md",
    "pattern": "Documentation file: project-organization.md",
    "category": "configuration",
    "type": "documentation",
    "complexity": "expert",
    "safety": "safe",
    "filename": "project-organization.md",
    "lineNumber": 1,
    "section": "file_overview",
    "subsection": "",
    "usage": "Reference guide for project organization",
    "examples": [
      "Study project-organization.md for detailed information"
    ],
    "recommendations": [
      "Follow practices outlined in project-organization.md"
    ],
    "warnings": [],
    "topics": [
      "Core Organizational Concepts",
      "Project Naming Best Practices",
      "Environment Structure",
      "Organizational Strategies",
      "Dynamic Environments",
      "Anti-Patterns to Avoid",
      "Project Organization Checklist",
      "Tips for Large Organizations"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "---",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 1,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "---"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "description: \"Learn to use Doppler's template system for dynamic secret injection into configuration files using Go text/template syntax for Kubernetes manifests and structured formats\"",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "secret-injection.md",
    "lineNumber": 3,
    "section": "",
    "subsection": "",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "description: \"Learn to use Doppler's template system for dynamic secret injection into configuration files using Go text/template syntax for Kubernetes manifests and structured formats\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 3,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "description: \"Learn to use Doppler's template system for dynamic secret injection into configuration files using Go text/template syntax for Kubernetes manifests and structured formats\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "category: \"secrets-management\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 4,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "category: \"secrets-management\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "tags: [\"doppler\", \"templates\", \"injection\", \"kubernetes\", \"configuration\", \"go-templates\"]",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "secret-injection.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "tags: [\"doppler\", \"templates\", \"injection\", \"kubernetes\", \"configuration\", \"go-templates\"]",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "tags: [\"doppler\", \"templates\", \"injection\", \"kubernetes\", \"configuration\", \"go-templates\"]"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "Doppler's template system allows you to dynamically inject secrets into configuration files using Go's text/template syntax. This is particularly useful for generating complex configuration files, Kubernetes manifests, or any structured format that requires secret values.",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "secret-injection.md",
    "lineNumber": 16,
    "section": "Secret Injection with Templates in Doppler",
    "subsection": "Overview",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "host: {{.SERVER_HOST}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 24,
    "section": "template.yaml",
    "subsection": "Template Syntax Basics",
    "usage": "Use as template for integration configuration",
    "examples": [
      "host: {{.SERVER_HOST}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "port: {{.SERVER_PORT}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 25,
    "section": "template.yaml",
    "subsection": "Template Syntax Basics",
    "usage": "Use as template for integration configuration",
    "examples": [
      "port: {{.SERVER_PORT}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "url: {{.DATABASE_URL}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 27,
    "section": "template.yaml",
    "subsection": "Template Syntax Basics",
    "usage": "Use as template for integration configuration",
    "examples": [
      "url: {{.DATABASE_URL}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{/* This is a comment and won't appear in output */}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 32,
    "section": "template.yaml",
    "subsection": "Template Syntax Basics",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{/* This is a comment and won't appear in output */}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{/* Use comments to document your templates */}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 33,
    "section": "template.yaml",
    "subsection": "Template Syntax Basics",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{/* Use comments to document your templates */}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "key: {{.API_KEY}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 35,
    "section": "template.yaml",
    "subsection": "Template Syntax Basics",
    "usage": "Use as template for integration configuration",
    "examples": [
      "key: {{.API_KEY}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{/* TODO: Add rate limiting config */}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 36,
    "section": "template.yaml",
    "subsection": "Template Syntax Basics",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{/* TODO: Add rate limiting config */}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_secrets_substitute",
    "description": "CLI command: secrets substitute command",
    "pattern": "doppler secrets substitute template.yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 45,
    "section": "Substitute secrets into template and output to stdout",
    "subsection": "Using Templates",
    "usage": "Use doppler secrets substitute for secrets operations",
    "examples": [
      "doppler secrets substitute template.yaml",
      "doppler secrets substitute --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_substitute",
    "description": "Doppler CLI command: secrets substitute",
    "pattern": "doppler secrets substitute template.yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 45,
    "section": "Substitute secrets into template and output to stdout",
    "subsection": "Using Templates",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets substitute template.yaml"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_substitute",
    "description": "CLI command: secrets substitute command",
    "pattern": "doppler secrets substitute template.yaml > config.yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 48,
    "section": "Save to file",
    "subsection": "Using Templates",
    "usage": "Use doppler secrets substitute for secrets operations",
    "examples": [
      "doppler secrets substitute template.yaml > config.yaml",
      "doppler secrets substitute --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_substitute",
    "description": "Doppler CLI command: secrets substitute",
    "pattern": "doppler secrets substitute template.yaml > config.yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 48,
    "section": "Save to file",
    "subsection": "Using Templates",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets substitute template.yaml > config.yaml"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler secrets substitute template.yaml --project api --config production",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 51,
    "section": "Use specific project/config",
    "subsection": "Using Templates",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_secrets_substitute",
    "description": "CLI command: secrets substitute command",
    "pattern": "doppler secrets substitute template.yaml --project api --config production",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 51,
    "section": "Use specific project/config",
    "subsection": "Using Templates",
    "usage": "Use doppler secrets substitute for secrets operations",
    "examples": [
      "doppler secrets substitute template.yaml --project api --config production",
      "doppler secrets substitute --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_substitute",
    "description": "Doppler CLI command: secrets substitute",
    "pattern": "doppler secrets substitute template.yaml --project api --config production",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 51,
    "section": "Use specific project/config",
    "subsection": "Using Templates",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets substitute template.yaml --project api --config production"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "kubectl apply -f <(doppler secrets substitute k8s-deployment.yaml)",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "secret-injection.md",
    "lineNumber": 54,
    "section": "Pipe directly to kubectl",
    "subsection": "Using Templates",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "kubectl apply -f <(doppler secrets substitute k8s-deployment.yaml)",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "secret-injection.md",
    "lineNumber": 54,
    "section": "Pipe directly to kubectl",
    "subsection": "Using Templates",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "command_secrets_substitute",
    "description": "Doppler CLI command: secrets substitute",
    "pattern": "kubectl apply -f <(doppler secrets substitute k8s-deployment.yaml)",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 54,
    "section": "Pipe directly to kubectl",
    "subsection": "Using Templates",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "kubectl apply -f <(doppler secrets substitute k8s-deployment.yaml)"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "output=\"${template%.tmpl}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 61,
    "section": "Process all templates in a directory",
    "subsection": "Using Templates",
    "usage": "Use as template for integration configuration",
    "examples": [
      "output=\"${template%.tmpl}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_secrets_substitute",
    "description": "CLI command: secrets substitute command",
    "pattern": "doppler secrets substitute \"$template\" > \"$output\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 62,
    "section": "Process all templates in a directory",
    "subsection": "Using Templates",
    "usage": "Use doppler secrets substitute for secrets operations",
    "examples": [
      "doppler secrets substitute \"$template\" > \"$output\"",
      "doppler secrets substitute --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_substitute",
    "description": "Doppler CLI command: secrets substitute",
    "pattern": "doppler secrets substitute \"$template\" > \"$output\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 62,
    "section": "Process all templates in a directory",
    "subsection": "Using Templates",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets substitute \"$template\" > \"$output\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "name: {{.APP_NAME}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 73,
    "section": "config.yaml.tmpl",
    "subsection": "Advanced Template Features",
    "usage": "Use as template for integration configuration",
    "examples": [
      "name: {{.APP_NAME}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "environment: {{.ENVIRONMENT}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 74,
    "section": "config.yaml.tmpl",
    "subsection": "Advanced Template Features",
    "usage": "Use as template for integration configuration",
    "examples": [
      "environment: {{.ENVIRONMENT}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{if .ENABLE_DEBUG}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 76,
    "section": "config.yaml.tmpl",
    "subsection": "Advanced Template Features",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{if .ENABLE_DEBUG}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "level: {{.DEBUG_LEVEL}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 79,
    "section": "config.yaml.tmpl",
    "subsection": "Advanced Template Features",
    "usage": "Use as template for integration configuration",
    "examples": [
      "level: {{.DEBUG_LEVEL}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{end}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 80,
    "section": "config.yaml.tmpl",
    "subsection": "Advanced Template Features",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{end}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{if eq .ENVIRONMENT \"production\"}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 82,
    "section": "config.yaml.tmpl",
    "subsection": "Advanced Template Features",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{if eq .ENVIRONMENT \"production\"}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "endpoint: {{.MONITORING_ENDPOINT}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 85,
    "section": "config.yaml.tmpl",
    "subsection": "Advanced Template Features",
    "usage": "Use as template for integration configuration",
    "examples": [
      "endpoint: {{.MONITORING_ENDPOINT}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{else}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 86,
    "section": "config.yaml.tmpl",
    "subsection": "Advanced Template Features",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{else}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "primary: {{.DATABASE_URL}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 97,
    "section": "Using 'with' for optional blocks",
    "subsection": "Advanced Template Features",
    "usage": "Use as template for integration configuration",
    "examples": [
      "primary: {{.DATABASE_URL}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{with .DATABASE_REPLICA_URL}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 98,
    "section": "Using 'with' for optional blocks",
    "subsection": "Advanced Template Features",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{with .DATABASE_REPLICA_URL}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "replica: {{.}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 99,
    "section": "Using 'with' for optional blocks",
    "subsection": "Advanced Template Features",
    "usage": "Use as template for integration configuration",
    "examples": [
      "replica: {{.}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{with .REDIS_URL}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 102,
    "section": "Using 'with' for optional blocks",
    "subsection": "Advanced Template Features",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{with .REDIS_URL}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "url: {{.}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 105,
    "section": "Using 'with' for optional blocks",
    "subsection": "Advanced Template Features",
    "usage": "Use as template for integration configuration",
    "examples": [
      "url: {{.}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "port: {{or .PORT \"3000\"}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 117,
    "section": "Provide defaults for missing values",
    "subsection": "Advanced Template Features",
    "usage": "Use as template for integration configuration",
    "examples": [
      "port: {{or .PORT \"3000\"}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "host: {{or .HOST \"localhost\"}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 118,
    "section": "Provide defaults for missing values",
    "subsection": "Advanced Template Features",
    "usage": "Use as template for integration configuration",
    "examples": [
      "host: {{or .HOST \"localhost\"}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "workers: {{or .WORKER_COUNT \"4\"}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 119,
    "section": "Provide defaults for missing values",
    "subsection": "Advanced Template Features",
    "usage": "Use as template for integration configuration",
    "examples": [
      "workers: {{or .WORKER_COUNT \"4\"}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "private_key: {{tojson .PRIVATE_KEY}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 133,
    "section": "Convert multi-line private key to JSON string",
    "subsection": "Custom Template Functions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "private_key: {{tojson .PRIVATE_KEY}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "# private_key: \"-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkq...\\n-----END PRIVATE KEY-----\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 136,
    "section": "private_key: \"-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkq...\\n-----END PRIVATE KEY-----\"",
    "subsection": "Custom Template Functions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "# private_key: \"-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkq...\\n-----END PRIVATE KEY-----\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "Parses JSON-formatted secret:",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 140,
    "section": "private_key: \"-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkq...\\n-----END PRIVATE KEY-----\"",
    "subsection": "Custom Template Functions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "Parses JSON-formatted secret:"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "# If API_CONFIG contains: {\"timeout\": 30, \"retries\": 3}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 143,
    "section": "If API_CONFIG contains: {\"timeout\": 30, \"retries\": 3}",
    "subsection": "Custom Template Functions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "# If API_CONFIG contains: {\"timeout\": 30, \"retries\": 3}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{with fromjson .API_CONFIG}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 144,
    "section": "If API_CONFIG contains: {\"timeout\": 30, \"retries\": 3}",
    "subsection": "Custom Template Functions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{with fromjson .API_CONFIG}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "timeout: {{.timeout}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 146,
    "section": "If API_CONFIG contains: {\"timeout\": 30, \"retries\": 3}",
    "subsection": "Custom Template Functions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "timeout: {{.timeout}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "retries: {{.retries}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 147,
    "section": "If API_CONFIG contains: {\"timeout\": 30, \"retries\": 3}",
    "subsection": "Custom Template Functions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "retries: {{.retries}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{with fromjson .SERVICE_ACCOUNTS}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 155,
    "section": "Complex example with nested JSON",
    "subsection": "Custom Template Functions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{with fromjson .SERVICE_ACCOUNTS}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{range $name, $config := .}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 157,
    "section": "Complex example with nested JSON",
    "subsection": "Custom Template Functions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{range $name, $config := .}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- name: {{$name}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 158,
    "section": "Complex example with nested JSON",
    "subsection": "Custom Template Functions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- name: {{$name}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "credentials: {{tojson $config.credentials}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 159,
    "section": "Complex example with nested JSON",
    "subsection": "Custom Template Functions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "credentials: {{tojson $config.credentials}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "endpoint: {{$config.endpoint}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 160,
    "section": "Complex example with nested JSON",
    "subsection": "Custom Template Functions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "endpoint: {{$config.endpoint}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "### Kubernetes Deployment",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "secret-injection.md",
    "lineNumber": 167,
    "section": "Complex example with nested JSON",
    "subsection": "Real-World Template Examples",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "### Kubernetes Deployment",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "secret-injection.md",
    "lineNumber": 167,
    "section": "Complex example with nested JSON",
    "subsection": "Real-World Template Examples",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "# k8s-deployment.yaml.tmpl",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "secret-injection.md",
    "lineNumber": 170,
    "section": "k8s-deployment.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "# k8s-deployment.yaml.tmpl",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "secret-injection.md",
    "lineNumber": 170,
    "section": "k8s-deployment.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "kind: Deployment",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "secret-injection.md",
    "lineNumber": 172,
    "section": "k8s-deployment.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "namespace: {{.K8S_NAMESPACE}}",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "secret-injection.md",
    "lineNumber": 175,
    "section": "k8s-deployment.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "namespace: {{.K8S_NAMESPACE}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 175,
    "section": "k8s-deployment.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "namespace: {{.K8S_NAMESPACE}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "replicas: {{.REPLICAS}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 177,
    "section": "k8s-deployment.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "replicas: {{.REPLICAS}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "app: {{.APP_NAME}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 180,
    "section": "k8s-deployment.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "app: {{.APP_NAME}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "version: {{.APP_VERSION}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 185,
    "section": "k8s-deployment.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "version: {{.APP_VERSION}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- name: {{.APP_NAME}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 188,
    "section": "k8s-deployment.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- name: {{.APP_NAME}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "image: {{.DOCKER_REGISTRY}}/{{.APP_NAME}}:{{.APP_VERSION}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 189,
    "section": "k8s-deployment.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "image: {{.DOCKER_REGISTRY}}/{{.APP_NAME}}:{{.APP_VERSION}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- containerPort: {{.PORT}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 191,
    "section": "k8s-deployment.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- containerPort: {{.PORT}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "value: \"{{.DATABASE_URL}}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 194,
    "section": "k8s-deployment.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "value: \"{{.DATABASE_URL}}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "value: \"{{.REDIS_URL}}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 196,
    "section": "k8s-deployment.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "value: \"{{.REDIS_URL}}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{if .ENABLE_PROFILING}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 197,
    "section": "k8s-deployment.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{if .ENABLE_PROFILING}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "memory: \"{{.MEMORY_REQUEST}}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 203,
    "section": "k8s-deployment.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "memory: \"{{.MEMORY_REQUEST}}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "cpu: \"{{.CPU_REQUEST}}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 204,
    "section": "k8s-deployment.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "cpu: \"{{.CPU_REQUEST}}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "memory: \"{{.MEMORY_LIMIT}}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 206,
    "section": "k8s-deployment.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "memory: \"{{.MEMORY_LIMIT}}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "cpu: \"{{.CPU_LIMIT}}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 207,
    "section": "k8s-deployment.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "cpu: \"{{.CPU_LIMIT}}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "image: {{.APP_IMAGE}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 217,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "image: {{.APP_IMAGE}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- \"{{.HOST_PORT}}:{{.CONTAINER_PORT}}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 219,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- \"{{.HOST_PORT}}:{{.CONTAINER_PORT}}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "NODE_ENV: {{.NODE_ENV}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 221,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "NODE_ENV: {{.NODE_ENV}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "API_KEY: {{.API_KEY}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 222,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "API_KEY: {{.API_KEY}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "DATABASE_URL: {{.DATABASE_URL}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 223,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "DATABASE_URL: {{.DATABASE_URL}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{with .VOLUMES}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 224,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{with .VOLUMES}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{range .}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 226,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{range .}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- {{.}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 227,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- {{.}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "{{if eq .ENVIRONMENT \"development\"}}",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 231,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{if eq .ENVIRONMENT \"development\"}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 231,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{if eq .ENVIRONMENT \"development\"}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "POSTGRES_DB: {{.DB_NAME}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 235,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "POSTGRES_DB: {{.DB_NAME}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "POSTGRES_USER: {{.DB_USER}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 236,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "POSTGRES_USER: {{.DB_USER}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "POSTGRES_PASSWORD: {{.DB_PASSWORD}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 237,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "POSTGRES_PASSWORD: {{.DB_PASSWORD}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{/* app-config.json.tmpl */}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 244,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{/* app-config.json.tmpl */}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 245,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"app\": {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 246,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"app\": {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"name\": \"{{.APP_NAME}}\",",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 247,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"name\": \"{{.APP_NAME}}\","
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"version\": \"{{.APP_VERSION}}\",",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 248,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"version\": \"{{.APP_VERSION}}\","
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"environment\": \"{{.ENVIRONMENT}}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 249,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"environment\": \"{{.ENVIRONMENT}}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"server\": {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 251,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"server\": {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"host\": \"{{.SERVER_HOST}}\",",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 252,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"host\": \"{{.SERVER_HOST}}\","
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"port\": {{.SERVER_PORT}},",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 253,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"port\": {{.SERVER_PORT}},"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"ssl\": {{if eq .ENVIRONMENT \"production\"}}true{{else}}false{{end}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 254,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"ssl\": {{if eq .ENVIRONMENT \"production\"}}true{{else}}false{{end}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"database\": {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 256,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"database\": {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"host\": \"{{.DB_HOST}}\",",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 257,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"host\": \"{{.DB_HOST}}\","
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"port\": {{.DB_PORT}},",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 258,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"port\": {{.DB_PORT}},"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"name\": \"{{.DB_NAME}}\",",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 259,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"name\": \"{{.DB_NAME}}\","
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"pool\": {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 260,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"pool\": {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"min\": {{or .DB_POOL_MIN \"2\"}},",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 261,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"min\": {{or .DB_POOL_MIN \"2\"}},"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"max\": {{or .DB_POOL_MAX \"10\"}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 262,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"max\": {{or .DB_POOL_MAX \"10\"}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{with fromjson .FEATURE_FLAGS}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 265,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{with fromjson .FEATURE_FLAGS}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "\"features\": {{tojson .}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 266,
    "section": "docker-compose.yaml.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "\"features\": {{tojson .}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "server {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 275,
    "section": "nginx.conf.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "server {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "listen {{.NGINX_PORT}};",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 276,
    "section": "nginx.conf.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "listen {{.NGINX_PORT}};"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "server_name {{.SERVER_NAME}};",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 277,
    "section": "nginx.conf.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "server_name {{.SERVER_NAME}};"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{if .SSL_ENABLED}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 279,
    "section": "nginx.conf.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{if .SSL_ENABLED}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "ssl_certificate {{.SSL_CERT_PATH}};",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 281,
    "section": "nginx.conf.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "ssl_certificate {{.SSL_CERT_PATH}};"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "ssl_certificate_key {{.SSL_KEY_PATH}};",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 282,
    "section": "nginx.conf.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "ssl_certificate_key {{.SSL_KEY_PATH}};"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "location / {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 285,
    "section": "nginx.conf.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "location / {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "proxy_pass http://{{.UPSTREAM_HOST}}:{{.UPSTREAM_PORT}};",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 286,
    "section": "nginx.conf.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "proxy_pass http://{{.UPSTREAM_HOST}}:{{.UPSTREAM_PORT}};"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{if .ENABLE_CORS}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 290,
    "section": "nginx.conf.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{if .ENABLE_CORS}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "add_header 'Access-Control-Allow-Origin' '{{.CORS_ORIGIN}}';",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 291,
    "section": "nginx.conf.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "add_header 'Access-Control-Allow-Origin' '{{.CORS_ORIGIN}}';"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{range $path, $backend := fromjson .API_ROUTES}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 296,
    "section": "nginx.conf.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{range $path, $backend := fromjson .API_ROUTES}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "location {{$path}} {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 297,
    "section": "nginx.conf.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "location {{$path}} {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "proxy_pass http://{{$backend}};",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 298,
    "section": "nginx.conf.tmpl",
    "subsection": "Real-World Template Examples",
    "usage": "Use as template for integration configuration",
    "examples": [
      "proxy_pass http://{{$backend}};"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "│   ├── deployment.yaml.tmpl",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "secret-injection.md",
    "lineNumber": 310,
    "section": "nginx.conf.tmpl",
    "subsection": "Template Patterns and Best Practices",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "command_secrets_substitute",
    "description": "Doppler CLI command: secrets substitute",
    "pattern": "if doppler secrets substitute \"$template\" > /dev/null 2>&1; then",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 330,
    "section": "validate-templates.sh",
    "subsection": "Template Patterns and Best Practices",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "if doppler secrets substitute \"$template\" > /dev/null 2>&1; then"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_substitute",
    "description": "CLI command: secrets substitute command",
    "pattern": "doppler secrets substitute \"$template\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 334,
    "section": "validate-templates.sh",
    "subsection": "Template Patterns and Best Practices",
    "usage": "Use doppler secrets substitute for secrets operations",
    "examples": [
      "doppler secrets substitute \"$template\"",
      "doppler secrets substitute --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_substitute",
    "description": "Doppler CLI command: secrets substitute",
    "pattern": "doppler secrets substitute \"$template\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 334,
    "section": "validate-templates.sh",
    "subsection": "Template Patterns and Best Practices",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets substitute \"$template\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "{{template \"prod-config.yaml.tmpl\" .}}",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 343,
    "section": "base-config.yaml.tmpl",
    "subsection": "Template Patterns and Best Practices",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{template \"prod-config.yaml.tmpl\" .}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 343,
    "section": "base-config.yaml.tmpl",
    "subsection": "Template Patterns and Best Practices",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{template \"prod-config.yaml.tmpl\" .}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_promotion_strategy",
    "description": "Best practices for promoting secrets between environments",
    "pattern": "{{else if eq .ENVIRONMENT \"staging\"}}",
    "category": "best_practices",
    "type": "environment_management",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 344,
    "section": "base-config.yaml.tmpl",
    "subsection": "Template Patterns and Best Practices",
    "usage": "Systematically promote secrets from development to production",
    "examples": [
      "doppler secrets download --no-file -c dev | doppler secrets upload -c staging",
      "Exclude environment-specific secrets like DATABASE_URL"
    ],
    "recommendations": [
      "Test in staging before production",
      "Exclude environment-specific secrets"
    ],
    "warnings": [
      "Always validate promoted secrets before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{else if eq .ENVIRONMENT \"staging\"}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 344,
    "section": "base-config.yaml.tmpl",
    "subsection": "Template Patterns and Best Practices",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{else if eq .ENVIRONMENT \"staging\"}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "{{template \"staging-config.yaml.tmpl\" .}}",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 345,
    "section": "base-config.yaml.tmpl",
    "subsection": "Template Patterns and Best Practices",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{template \"staging-config.yaml.tmpl\" .}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 345,
    "section": "base-config.yaml.tmpl",
    "subsection": "Template Patterns and Best Practices",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{template \"staging-config.yaml.tmpl\" .}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "{{template \"dev-config.yaml.tmpl\" .}}",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 347,
    "section": "base-config.yaml.tmpl",
    "subsection": "Template Patterns and Best Practices",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{template \"dev-config.yaml.tmpl\" .}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 347,
    "section": "base-config.yaml.tmpl",
    "subsection": "Template Patterns and Best Practices",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{template \"dev-config.yaml.tmpl\" .}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{/* Define reusable database config */}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 353,
    "section": "base-config.yaml.tmpl",
    "subsection": "Template Patterns and Best Practices",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{/* Define reusable database config */}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{define \"database-config\"}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 354,
    "section": "base-config.yaml.tmpl",
    "subsection": "Template Patterns and Best Practices",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{define \"database-config\"}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "host: {{.DB_HOST}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 356,
    "section": "base-config.yaml.tmpl",
    "subsection": "Template Patterns and Best Practices",
    "usage": "Use as template for integration configuration",
    "examples": [
      "host: {{.DB_HOST}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "port: {{.DB_PORT}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 357,
    "section": "base-config.yaml.tmpl",
    "subsection": "Template Patterns and Best Practices",
    "usage": "Use as template for integration configuration",
    "examples": [
      "port: {{.DB_PORT}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "name: {{.DB_NAME}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 358,
    "section": "base-config.yaml.tmpl",
    "subsection": "Template Patterns and Best Practices",
    "usage": "Use as template for integration configuration",
    "examples": [
      "name: {{.DB_NAME}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "ssl: {{.DB_SSL_ENABLED}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 359,
    "section": "base-config.yaml.tmpl",
    "subsection": "Template Patterns and Best Practices",
    "usage": "Use as template for integration configuration",
    "examples": [
      "ssl: {{.DB_SSL_ENABLED}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{/* Use in main template */}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 362,
    "section": "base-config.yaml.tmpl",
    "subsection": "Template Patterns and Best Practices",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{/* Use in main template */}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{template \"database-config\" .}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 363,
    "section": "base-config.yaml.tmpl",
    "subsection": "Template Patterns and Best Practices",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{template \"database-config\" .}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_secrets_substitute",
    "description": "CLI command: secrets substitute command",
    "pattern": "doppler secrets substitute template.yaml \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 372,
    "section": "Generate configs for all environments",
    "subsection": "Complex Use Cases",
    "usage": "Use doppler secrets substitute for secrets operations",
    "examples": [
      "doppler secrets substitute template.yaml \\",
      "doppler secrets substitute --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_substitute",
    "description": "Doppler CLI command: secrets substitute",
    "pattern": "doppler secrets substitute template.yaml \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 372,
    "section": "Generate configs for all environments",
    "subsection": "Complex Use Cases",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets substitute template.yaml \\"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_get",
    "description": "CLI command: secrets get command",
    "pattern": "doppler secrets get FILE_CONFIGS --plain | jq -r 'to_entries | .[]' | while IFS= read -r entry; do",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 380,
    "section": "Generate multiple files from JSON secret",
    "subsection": "Complex Use Cases",
    "usage": "Use doppler secrets get for secrets operations",
    "examples": [
      "doppler secrets get FILE_CONFIGS --plain | jq -r 'to_entries | .[]' | while IFS= read -r entry; do",
      "doppler secrets get --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "doppler secrets get FILE_CONFIGS --plain | jq -r 'to_entries | .[]' | while IFS= read -r entry; do",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 380,
    "section": "Generate multiple files from JSON secret",
    "subsection": "Complex Use Cases",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets get FILE_CONFIGS --plain | jq -r 'to_entries | .[]' | while IFS= read -r entry; do"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "# .github/workflows/deploy.yml",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "secret-injection.md",
    "lineNumber": 389,
    "section": ".github/workflows/deploy.yml",
    "subsection": "Complex Use Cases",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "- name: Generate Kubernetes manifests",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "secret-injection.md",
    "lineNumber": 390,
    "section": ".github/workflows/deploy.yml",
    "subsection": "Complex Use Cases",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "doppler secrets substitute k8s/deployment.yaml.tmpl > k8s/deployment.yaml",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "secret-injection.md",
    "lineNumber": 392,
    "section": ".github/workflows/deploy.yml",
    "subsection": "Complex Use Cases",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "cli_secrets_substitute",
    "description": "CLI command: secrets substitute command",
    "pattern": "doppler secrets substitute k8s/deployment.yaml.tmpl > k8s/deployment.yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 392,
    "section": ".github/workflows/deploy.yml",
    "subsection": "Complex Use Cases",
    "usage": "Use doppler secrets substitute for secrets operations",
    "examples": [
      "doppler secrets substitute k8s/deployment.yaml.tmpl > k8s/deployment.yaml",
      "doppler secrets substitute --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "doppler secrets substitute k8s/deployment.yaml.tmpl > k8s/deployment.yaml",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "secret-injection.md",
    "lineNumber": 392,
    "section": ".github/workflows/deploy.yml",
    "subsection": "Complex Use Cases",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "command_secrets_substitute",
    "description": "Doppler CLI command: secrets substitute",
    "pattern": "doppler secrets substitute k8s/deployment.yaml.tmpl > k8s/deployment.yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 392,
    "section": ".github/workflows/deploy.yml",
    "subsection": "Complex Use Cases",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets substitute k8s/deployment.yaml.tmpl > k8s/deployment.yaml"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "doppler secrets substitute k8s/service.yaml.tmpl > k8s/service.yaml",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "secret-injection.md",
    "lineNumber": 393,
    "section": ".github/workflows/deploy.yml",
    "subsection": "Complex Use Cases",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "cli_secrets_substitute",
    "description": "CLI command: secrets substitute command",
    "pattern": "doppler secrets substitute k8s/service.yaml.tmpl > k8s/service.yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 393,
    "section": ".github/workflows/deploy.yml",
    "subsection": "Complex Use Cases",
    "usage": "Use doppler secrets substitute for secrets operations",
    "examples": [
      "doppler secrets substitute k8s/service.yaml.tmpl > k8s/service.yaml",
      "doppler secrets substitute --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_substitute",
    "description": "Doppler CLI command: secrets substitute",
    "pattern": "doppler secrets substitute k8s/service.yaml.tmpl > k8s/service.yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 393,
    "section": ".github/workflows/deploy.yml",
    "subsection": "Complex Use Cases",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets substitute k8s/service.yaml.tmpl > k8s/service.yaml"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "doppler secrets substitute k8s/configmap.yaml.tmpl > k8s/configmap.yaml",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "secret-injection.md",
    "lineNumber": 394,
    "section": ".github/workflows/deploy.yml",
    "subsection": "Complex Use Cases",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "cli_secrets_substitute",
    "description": "CLI command: secrets substitute command",
    "pattern": "doppler secrets substitute k8s/configmap.yaml.tmpl > k8s/configmap.yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 394,
    "section": ".github/workflows/deploy.yml",
    "subsection": "Complex Use Cases",
    "usage": "Use doppler secrets substitute for secrets operations",
    "examples": [
      "doppler secrets substitute k8s/configmap.yaml.tmpl > k8s/configmap.yaml",
      "doppler secrets substitute --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_substitute",
    "description": "Doppler CLI command: secrets substitute",
    "pattern": "doppler secrets substitute k8s/configmap.yaml.tmpl > k8s/configmap.yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 394,
    "section": ".github/workflows/deploy.yml",
    "subsection": "Complex Use Cases",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets substitute k8s/configmap.yaml.tmpl > k8s/configmap.yaml"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "- name: Deploy to Kubernetes",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "secret-injection.md",
    "lineNumber": 396,
    "section": ".github/workflows/deploy.yml",
    "subsection": "Complex Use Cases",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "- name: Deploy to Kubernetes",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "secret-injection.md",
    "lineNumber": 396,
    "section": ".github/workflows/deploy.yml",
    "subsection": "Complex Use Cases",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "kubectl apply -f k8s/",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "secret-injection.md",
    "lineNumber": 398,
    "section": ".github/workflows/deploy.yml",
    "subsection": "Complex Use Cases",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "# Solution: Ensure all referenced secrets exist",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 409,
    "section": "Solution: Ensure all referenced secrets exist",
    "subsection": "Troubleshooting Templates",
    "usage": "Use as template for integration configuration",
    "examples": [
      "# Solution: Ensure all referenced secrets exist"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set MISSING_VAR=\"default-value\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 410,
    "section": "Solution: Ensure all referenced secrets exist",
    "subsection": "Troubleshooting Templates",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set MISSING_VAR=\"default-value\"",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set MISSING_VAR=\"default-value\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 410,
    "section": "Solution: Ensure all referenced secrets exist",
    "subsection": "Troubleshooting Templates",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set MISSING_VAR=\"default-value\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "port: \"{{.PORT}}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 416,
    "section": "Wrong: This will quote the number",
    "subsection": "Troubleshooting Templates",
    "usage": "Use as template for integration configuration",
    "examples": [
      "port: \"{{.PORT}}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "port: {{.PORT}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 419,
    "section": "Correct: Let template engine handle types",
    "subsection": "Troubleshooting Templates",
    "usage": "Use as template for integration configuration",
    "examples": [
      "port: {{.PORT}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_secrets_get",
    "description": "CLI command: secrets get command",
    "pattern": "doppler secrets get MY_JSON_SECRET --plain | jq .",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 425,
    "section": "Debug JSON secrets",
    "subsection": "Troubleshooting Templates",
    "usage": "Use doppler secrets get for secrets operations",
    "examples": [
      "doppler secrets get MY_JSON_SECRET --plain | jq .",
      "doppler secrets get --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "doppler secrets get MY_JSON_SECRET --plain | jq .",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 425,
    "section": "Debug JSON secrets",
    "subsection": "Troubleshooting Templates",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets get MY_JSON_SECRET --plain | jq ."
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{with fromjson .MY_JSON_SECRET}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 428,
    "section": "Safe JSON handling",
    "subsection": "Troubleshooting Templates",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{with fromjson .MY_JSON_SECRET}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "{{if .}}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 429,
    "section": "Safe JSON handling",
    "subsection": "Troubleshooting Templates",
    "usage": "Use as template for integration configuration",
    "examples": [
      "{{if .}}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_secrets_substitute",
    "description": "CLI command: secrets substitute command",
    "pattern": "doppler secrets substitute template.yaml --dry-run",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 438,
    "section": "Test with dry run",
    "subsection": "Troubleshooting Templates",
    "usage": "Use doppler secrets substitute for secrets operations",
    "examples": [
      "doppler secrets substitute template.yaml --dry-run",
      "doppler secrets substitute --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_substitute",
    "description": "Doppler CLI command: secrets substitute",
    "pattern": "doppler secrets substitute template.yaml --dry-run",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 438,
    "section": "Test with dry run",
    "subsection": "Troubleshooting Templates",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets substitute template.yaml --dry-run"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_secrets_upload",
    "description": "Doppler CLI command: secrets upload",
    "pattern": "SERVER_PORT=3000' | doppler secrets upload --config test",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 442,
    "section": "Test with minimal secrets",
    "subsection": "Troubleshooting Templates",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "SERVER_PORT=3000' | doppler secrets upload --config test"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_substitute",
    "description": "CLI command: secrets substitute command",
    "pattern": "doppler secrets substitute template.yaml --config test",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 444,
    "section": "Test with minimal secrets",
    "subsection": "Troubleshooting Templates",
    "usage": "Use doppler secrets substitute for secrets operations",
    "examples": [
      "doppler secrets substitute template.yaml --config test",
      "doppler secrets substitute --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_substitute",
    "description": "Doppler CLI command: secrets substitute",
    "pattern": "doppler secrets substitute template.yaml --config test",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 444,
    "section": "Test with minimal secrets",
    "subsection": "Troubleshooting Templates",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets substitute template.yaml --config test"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_substitute",
    "description": "CLI command: secrets substitute command",
    "pattern": "doppler secrets substitute template.yaml | grep -E '(password|key|token)'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 456,
    "section": "Check for exposed secrets",
    "subsection": "Security Considerations",
    "usage": "Use doppler secrets substitute for secrets operations",
    "examples": [
      "doppler secrets substitute template.yaml | grep -E '(password|key|token)'",
      "doppler secrets substitute --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_substitute",
    "description": "Doppler CLI command: secrets substitute",
    "pattern": "doppler secrets substitute template.yaml | grep -E '(password|key|token)'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 456,
    "section": "Check for exposed secrets",
    "subsection": "Security Considerations",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets substitute template.yaml | grep -E '(password|key|token)'"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set DEPLOYMENT_TEMPLATE < deployment.yaml.tmpl",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 462,
    "section": "Store template content as secret",
    "subsection": "Security Considerations",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set DEPLOYMENT_TEMPLATE < deployment.yaml.tmpl",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "doppler secrets set DEPLOYMENT_TEMPLATE < deployment.yaml.tmpl",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "secret-injection.md",
    "lineNumber": 462,
    "section": "Store template content as secret",
    "subsection": "Security Considerations",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set DEPLOYMENT_TEMPLATE < deployment.yaml.tmpl",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 462,
    "section": "Store template content as secret",
    "subsection": "Security Considerations",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set DEPLOYMENT_TEMPLATE < deployment.yaml.tmpl"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "file_secret_injection",
    "description": "Comprehensive guide: secret-injection.md",
    "pattern": "Documentation file: secret-injection.md",
    "category": "best_practices",
    "type": "documentation",
    "complexity": "expert",
    "safety": "safe",
    "filename": "secret-injection.md",
    "lineNumber": 1,
    "section": "file_overview",
    "subsection": "",
    "usage": "Reference guide for secret injection",
    "examples": [
      "Study secret-injection.md for detailed information"
    ],
    "recommendations": [
      "Follow practices outlined in secret-injection.md"
    ],
    "warnings": [],
    "topics": [
      "Overview",
      "Template Syntax Basics",
      "Using Templates",
      "Advanced Template Features",
      "Custom Template Functions",
      "Real-World Template Examples",
      "Template Patterns and Best Practices",
      "Complex Use Cases",
      "Troubleshooting Templates",
      "Security Considerations"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "---",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 1,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "---"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "description: \"Understand the fundamentals of secrets in Doppler including types, naming conventions, creation, editing, and basic management operations\"",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 3,
    "section": "",
    "subsection": "",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "description: \"Understand the fundamentals of secrets in Doppler including types, naming conventions, creation, editing, and basic management operations\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 3,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "description: \"Understand the fundamentals of secrets in Doppler including types, naming conventions, creation, editing, and basic management operations\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "category: \"secrets-management\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 4,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "category: \"secrets-management\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "tags: [\"doppler\", \"secrets\", \"basics\", \"naming\", \"management\", \"fundamentals\"]",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "tags: [\"doppler\", \"secrets\", \"basics\", \"naming\", \"management\", \"fundamentals\"]",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "tags: [\"doppler\", \"secrets\", \"basics\", \"naming\", \"management\", \"fundamentals\"]"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "## Secret Naming Conventions",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 24,
    "section": "Doppler Secrets Management Basics",
    "subsection": "Secret Naming Conventions",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "# Good naming patterns",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 34,
    "section": "Good naming patterns",
    "subsection": "Secret Naming Conventions",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "|------|-------------|---------|",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 53,
    "section": "Avoid",
    "subsection": "Secret Types and Values",
    "usage": "Use as template for integration configuration",
    "examples": [
      "|------|-------------|---------|"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "| JSON | Structured data | `{\"key\": \"value\"}` |",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 57,
    "section": "Avoid",
    "subsection": "Secret Types and Values",
    "usage": "Use as template for integration configuration",
    "examples": [
      "| JSON | Structured data | `{\"key\": \"value\"}` |"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set PORT=\"3000\" --type integer",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 66,
    "section": "Set with specific type",
    "subsection": "Secret Types and Values",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set PORT=\"3000\" --type integer",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set PORT=\"3000\" --type integer",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 66,
    "section": "Set with specific type",
    "subsection": "Secret Types and Values",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set PORT=\"3000\" --type integer"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set ENABLE_FEATURE=\"true\" --type boolean",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 67,
    "section": "Set with specific type",
    "subsection": "Secret Types and Values",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set ENABLE_FEATURE=\"true\" --type boolean",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set ENABLE_FEATURE=\"true\" --type boolean",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 67,
    "section": "Set with specific type",
    "subsection": "Secret Types and Values",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set ENABLE_FEATURE=\"true\" --type boolean"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set CONFIG='{\"timeout\": 30}' --type json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 68,
    "section": "Set with specific type",
    "subsection": "Secret Types and Values",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set CONFIG='{\"timeout\": 30}' --type json",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set CONFIG='{\"timeout\": 30}' --type json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 68,
    "section": "Set with specific type",
    "subsection": "Secret Types and Values",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set CONFIG='{\"timeout\": 30}' --type json"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "doppler secrets set CONFIG='{\"timeout\": 30}' --type json",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 68,
    "section": "Set with specific type",
    "subsection": "Secret Types and Values",
    "usage": "Use as template for integration configuration",
    "examples": [
      "doppler secrets set CONFIG='{\"timeout\": 30}' --type json"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set API_KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 78,
    "section": "Interactive mode (recommended for sensitive values)",
    "subsection": "Managing Secrets",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set API_KEY",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set API_KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 78,
    "section": "Interactive mode (recommended for sensitive values)",
    "subsection": "Managing Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set API_KEY"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set DATABASE_URL=\"postgresql://localhost:5432/myapp\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 82,
    "section": "Direct setting",
    "subsection": "Managing Secrets",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set DATABASE_URL=\"postgresql://localhost:5432/myapp\"",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set DATABASE_URL=\"postgresql://localhost:5432/myapp\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 82,
    "section": "Direct setting",
    "subsection": "Managing Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set DATABASE_URL=\"postgresql://localhost:5432/myapp\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "doppler secrets set DATABASE_URL=\"postgresql://localhost:5432/myapp\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 82,
    "section": "Direct setting",
    "subsection": "Managing Secrets",
    "usage": "Use as template for integration configuration",
    "examples": [
      "doppler secrets set DATABASE_URL=\"postgresql://localhost:5432/myapp\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 85,
    "section": "Multiple secrets",
    "subsection": "Managing Secrets",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set \\",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 85,
    "section": "Multiple secrets",
    "subsection": "Managing Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set \\"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "cat certificate.pem | doppler secrets set TLS_CERTIFICATE",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 91,
    "section": "From file content",
    "subsection": "Managing Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "cat certificate.pem | doppler secrets set TLS_CERTIFICATE"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets",
    "description": "CLI command: secrets command",
    "pattern": "doppler secrets",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 105,
    "section": "List all secrets",
    "subsection": "Managing Secrets",
    "usage": "Use doppler secrets for secrets operations",
    "examples": [
      "doppler secrets",
      "doppler secrets --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets",
    "description": "Doppler CLI command: secrets",
    "pattern": "doppler secrets",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 105,
    "section": "List all secrets",
    "subsection": "Managing Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_get",
    "description": "CLI command: secrets get command",
    "pattern": "doppler secrets get API_KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 108,
    "section": "Get specific secret",
    "subsection": "Managing Secrets",
    "usage": "Use doppler secrets get for secrets operations",
    "examples": [
      "doppler secrets get API_KEY",
      "doppler secrets get --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "doppler secrets get API_KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 108,
    "section": "Get specific secret",
    "subsection": "Managing Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets get API_KEY"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_get",
    "description": "CLI command: secrets get command",
    "pattern": "doppler secrets get DATABASE_URL --plain",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 111,
    "section": "Get raw value",
    "subsection": "Managing Secrets",
    "usage": "Use doppler secrets get for secrets operations",
    "examples": [
      "doppler secrets get DATABASE_URL --plain",
      "doppler secrets get --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "doppler secrets get DATABASE_URL --plain",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 111,
    "section": "Get raw value",
    "subsection": "Managing Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets get DATABASE_URL --plain"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_get",
    "description": "CLI command: secrets get command",
    "pattern": "doppler secrets get API_KEY DATABASE_URL --json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 114,
    "section": "Get multiple secrets as JSON",
    "subsection": "Managing Secrets",
    "usage": "Use doppler secrets get for secrets operations",
    "examples": [
      "doppler secrets get API_KEY DATABASE_URL --json",
      "doppler secrets get --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "doppler secrets get API_KEY DATABASE_URL --json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 114,
    "section": "Get multiple secrets as JSON",
    "subsection": "Managing Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets get API_KEY DATABASE_URL --json"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file --format env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 117,
    "section": "Download all secrets",
    "subsection": "Managing Secrets",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file --format env",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file --format env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 117,
    "section": "Download all secrets",
    "subsection": "Managing Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file --format env"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set API_KEY=\"new-value\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 124,
    "section": "Update existing secret",
    "subsection": "Managing Secrets",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set API_KEY=\"new-value\"",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set API_KEY=\"new-value\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 124,
    "section": "Update existing secret",
    "subsection": "Managing Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set API_KEY=\"new-value\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set DATABASE_URL --no-interactive",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 127,
    "section": "Update with confirmation",
    "subsection": "Managing Secrets",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set DATABASE_URL --no-interactive",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set DATABASE_URL --no-interactive",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 127,
    "section": "Update with confirmation",
    "subsection": "Managing Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set DATABASE_URL --no-interactive"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_delete",
    "description": "CLI command: secrets delete command",
    "pattern": "doppler secrets delete OLD_API_KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 134,
    "section": "Delete single secret",
    "subsection": "Managing Secrets",
    "usage": "Use doppler secrets delete for secrets operations",
    "examples": [
      "doppler secrets delete OLD_API_KEY",
      "doppler secrets delete --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": [
      "Deletion is irreversible"
    ]
  },
  {
    "name": "command_secrets_delete",
    "description": "Doppler CLI command: secrets delete",
    "pattern": "doppler secrets delete OLD_API_KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 134,
    "section": "Delete single secret",
    "subsection": "Managing Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets delete OLD_API_KEY"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_delete",
    "description": "CLI command: secrets delete command",
    "pattern": "doppler secrets delete TEMP_KEY TEST_VALUE",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 137,
    "section": "Delete multiple",
    "subsection": "Managing Secrets",
    "usage": "Use doppler secrets delete for secrets operations",
    "examples": [
      "doppler secrets delete TEMP_KEY TEST_VALUE",
      "doppler secrets delete --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": [
      "Deletion is irreversible"
    ]
  },
  {
    "name": "command_secrets_delete",
    "description": "Doppler CLI command: secrets delete",
    "pattern": "doppler secrets delete TEMP_KEY TEST_VALUE",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 137,
    "section": "Delete multiple",
    "subsection": "Managing Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets delete TEMP_KEY TEST_VALUE"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_delete",
    "description": "CLI command: secrets delete command",
    "pattern": "doppler secrets delete DEPRECATED_KEY --yes",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 140,
    "section": "Skip confirmation",
    "subsection": "Managing Secrets",
    "usage": "Use doppler secrets delete for secrets operations",
    "examples": [
      "doppler secrets delete DEPRECATED_KEY --yes",
      "doppler secrets delete --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": [
      "Deletion is irreversible"
    ]
  },
  {
    "name": "command_secrets_delete",
    "description": "Doppler CLI command: secrets delete",
    "pattern": "doppler secrets delete DEPRECATED_KEY --yes",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 140,
    "section": "Skip confirmation",
    "subsection": "Managing Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets delete DEPRECATED_KEY --yes"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "- Only accessible via service tokens",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "secrets-basics.md",
    "lineNumber": 157,
    "section": "Skip confirmation",
    "subsection": "Secret Visibility Levels",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set API_KEY --visibility restricted",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 162,
    "section": "Set visibility when creating",
    "subsection": "Secret Visibility Levels",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set API_KEY --visibility restricted",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set API_KEY --visibility restricted",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 162,
    "section": "Set visibility when creating",
    "subsection": "Secret Visibility Levels",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set API_KEY --visibility restricted"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set APP_NAME --visibility unmasked",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 163,
    "section": "Set visibility when creating",
    "subsection": "Secret Visibility Levels",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set APP_NAME --visibility unmasked",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set APP_NAME --visibility unmasked",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 163,
    "section": "Set visibility when creating",
    "subsection": "Secret Visibility Levels",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set APP_NAME --visibility unmasked"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "Reference other secrets within values using `${SECRET_NAME}` syntax.",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 168,
    "section": "Set visibility when creating",
    "subsection": "Secret Referencing",
    "usage": "Use as template for integration configuration",
    "examples": [
      "Reference other secrets within values using `${SECRET_NAME}` syntax."
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "API_BASE_URL=\"https://${API_HOST}/${API_VERSION}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 179,
    "section": "Reference them",
    "subsection": "Secret Referencing",
    "usage": "Use as template for integration configuration",
    "examples": [
      "API_BASE_URL=\"https://${API_HOST}/${API_VERSION}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "DATABASE_URL=\"${root.DATABASE_HOST}:${root.DATABASE_PORT}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 188,
    "section": "Reference from root config",
    "subsection": "Secret Referencing",
    "usage": "Use as template for integration configuration",
    "examples": [
      "DATABASE_URL=\"${root.DATABASE_HOST}:${root.DATABASE_PORT}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "API_KEY=\"${production.MASTER_API_KEY}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 192,
    "section": "Reference from specific config",
    "subsection": "Secret Referencing",
    "usage": "Use as template for integration configuration",
    "examples": [
      "API_KEY=\"${production.MASTER_API_KEY}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "SHARED_SECRET=\"${shared-services.production.AUTH_SECRET}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 199,
    "section": "Reference from another project",
    "subsection": "Secret Referencing",
    "usage": "Use as template for integration configuration",
    "examples": [
      "SHARED_SECRET=\"${shared-services.production.AUTH_SECRET}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set PRIVATE_KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 208,
    "section": "Interactive mode for multi-line",
    "subsection": "Multi-line Secrets",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set PRIVATE_KEY",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set PRIVATE_KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 208,
    "section": "Interactive mode for multi-line",
    "subsection": "Multi-line Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set PRIVATE_KEY"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "cat private-key.pem | doppler secrets set PRIVATE_KEY",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 212,
    "section": "From file",
    "subsection": "Multi-line Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "cat private-key.pem | doppler secrets set PRIVATE_KEY"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set CONFIG_FILE < config.yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 215,
    "section": "Preserve formatting",
    "subsection": "Multi-line Secrets",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set CONFIG_FILE < config.yaml",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set CONFIG_FILE < config.yaml",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 215,
    "section": "Preserve formatting",
    "subsection": "Multi-line Secrets",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set CONFIG_FILE < config.yaml"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "Doppler automatically provides these special secrets:",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 220,
    "section": "Preserve formatting",
    "subsection": "Reserved Secrets",
    "usage": "Use as template for integration configuration",
    "examples": [
      "Doppler automatically provides these special secrets:"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "|--------|-------------|",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 223,
    "section": "Preserve formatting",
    "subsection": "Reserved Secrets",
    "usage": "Use as template for integration configuration",
    "examples": [
      "|--------|-------------|"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "| `DOPPLER_PROJECT` | Current project identifier |",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "secrets-basics.md",
    "lineNumber": 224,
    "section": "Preserve formatting",
    "subsection": "Reserved Secrets",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "Each secret maintains metadata:",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 230,
    "section": "Preserve formatting",
    "subsection": "Secret Metadata",
    "usage": "Use as template for integration configuration",
    "examples": [
      "Each secret maintains metadata:"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler activity --config production",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 238,
    "section": "Preserve formatting",
    "subsection": "Secret Metadata",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_activity_--config",
    "description": "CLI command: activity --config command",
    "pattern": "doppler activity --config production",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 238,
    "section": "Preserve formatting",
    "subsection": "Secret Metadata",
    "usage": "Use doppler activity --config for activity operations",
    "examples": [
      "doppler activity --config production",
      "doppler activity --config --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_activity_--config",
    "description": "Doppler CLI command: activity --config",
    "pattern": "doppler activity --config production",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 238,
    "section": "Preserve formatting",
    "subsection": "Secret Metadata",
    "usage": "Execute activity operations via CLI",
    "examples": [
      "doppler activity --config production"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "### 1. Naming Strategy",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 243,
    "section": "Preserve formatting",
    "subsection": "Best Practices",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "secret_rotation_strategy",
    "description": "Secret rotation best practices for security and compliance",
    "pattern": "- Rotate credentials regularly",
    "category": "best_practices",
    "type": "security_lifecycle",
    "complexity": "high",
    "safety": "critical",
    "filename": "secrets-basics.md",
    "lineNumber": 251,
    "section": "Preserve formatting",
    "subsection": "Best Practices",
    "usage": "Implement regular secret rotation for security compliance",
    "examples": [
      "Automated rotation via API",
      "Zero-downtime rotation strategies"
    ],
    "recommendations": [
      "Automate rotation where possible",
      "Test rotation procedures"
    ],
    "warnings": [
      "Improper rotation can cause service outages"
    ]
  },
  {
    "name": "secret_rotation_strategy",
    "description": "Secret rotation best practices for security and compliance",
    "pattern": "- Implement secret rotation reminders",
    "category": "best_practices",
    "type": "security_lifecycle",
    "complexity": "high",
    "safety": "critical",
    "filename": "secrets-basics.md",
    "lineNumber": 273,
    "section": "Environment configs",
    "subsection": "Best Practices",
    "usage": "Implement regular secret rotation for security compliance",
    "examples": [
      "Automated rotation via API",
      "Zero-downtime rotation strategies"
    ],
    "recommendations": [
      "Automate rotation where possible",
      "Test rotation procedures"
    ],
    "warnings": [
      "Improper rotation can cause service outages"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- Audit secret access regularly",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 274,
    "section": "Environment configs",
    "subsection": "Best Practices",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "- Use service tokens for automation",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "secrets-basics.md",
    "lineNumber": 275,
    "section": "Environment configs",
    "subsection": "Best Practices",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "LOG_LEVEL=\"debug\"  # In dev config",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 286,
    "section": "Environment overrides",
    "subsection": "Common Patterns",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "LOG_LEVEL=\"error\"  # In prod config",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 287,
    "section": "Environment overrides",
    "subsection": "Common Patterns",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "REDIS_URL=\"redis://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 306,
    "section": "Complete service setup",
    "subsection": "Common Patterns",
    "usage": "Use as template for integration configuration",
    "examples": [
      "REDIS_URL=\"redis://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "file_secrets_basics",
    "description": "Comprehensive guide: secrets-basics.md",
    "pattern": "Documentation file: secrets-basics.md",
    "category": "best_practices",
    "type": "documentation",
    "complexity": "expert",
    "safety": "safe",
    "filename": "secrets-basics.md",
    "lineNumber": 1,
    "section": "file_overview",
    "subsection": "",
    "usage": "Reference guide for secrets basics",
    "examples": [
      "Study secrets-basics.md for detailed information"
    ],
    "recommendations": [
      "Follow practices outlined in secrets-basics.md"
    ],
    "warnings": [],
    "topics": [
      "What are Secrets?",
      "Secret Naming Conventions",
      "Secret Types and Values",
      "Managing Secrets",
      "Secret Visibility Levels",
      "Secret Referencing",
      "Multi-line Secrets",
      "Reserved Secrets",
      "Secret Metadata",
      "Best Practices"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "---",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 1,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "---"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "tags: [\"doppler\", \"troubleshooting\", \"debugging\", \"errors\", \"authentication\", \"support\"]",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "tags: [\"doppler\", \"troubleshooting\", \"debugging\", \"errors\", \"authentication\", \"support\"]"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "command_login",
    "description": "Doppler CLI command: login",
    "pattern": "- `Error: Unable to authenticate. Please run 'doppler login'`",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 25,
    "section": "Doppler Troubleshooting Guide",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute login operations via CLI",
    "examples": [
      "- `Error: Unable to authenticate. Please run 'doppler login'`"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- `Error: Unable to authenticate. Please run 'doppler login'`",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 25,
    "section": "Doppler Troubleshooting Guide",
    "subsection": "Common Issues and Solutions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- `Error: Unable to authenticate. Please run 'doppler login'`"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "- 401 Unauthorized errors",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 26,
    "section": "Doppler Troubleshooting Guide",
    "subsection": "Common Issues and Solutions",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "cli_logout",
    "description": "CLI command: logout command",
    "pattern": "doppler logout",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 34,
    "section": "Re-authenticate",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler logout for logout operations",
    "examples": [
      "doppler logout",
      "doppler logout --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_logout",
    "description": "Doppler CLI command: logout",
    "pattern": "doppler logout",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 34,
    "section": "Re-authenticate",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute logout operations via CLI",
    "examples": [
      "doppler logout"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_login",
    "description": "CLI command: login command",
    "pattern": "doppler login",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 35,
    "section": "Re-authenticate",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler login for login operations",
    "examples": [
      "doppler login",
      "doppler login --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_login",
    "description": "Doppler CLI command: login",
    "pattern": "doppler login",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 35,
    "section": "Re-authenticate",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute login operations via CLI",
    "examples": [
      "doppler login"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_me",
    "description": "CLI command: me command",
    "pattern": "doppler me",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 38,
    "section": "Verify authentication",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler me for me operations",
    "examples": [
      "doppler me",
      "doppler me --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_me",
    "description": "Doppler CLI command: me",
    "pattern": "doppler me",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 38,
    "section": "Verify authentication",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute me operations via CLI",
    "examples": [
      "doppler me"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "2. **For Service Tokens:**",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 41,
    "section": "Verify authentication",
    "subsection": "Common Issues and Solutions",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "echo $DOPPLER_TOKEN | grep -E \"^dp\\.(pt|st)\\.[a-zA-Z0-9_]+\\.[a-zA-Z0-9]{20,}$\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 44,
    "section": "Verify token format",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "echo $DOPPLER_TOKEN | grep -E \"^dp\\.(pt|st)\\.[a-zA-Z0-9_]+\\.[a-zA-Z0-9]{20,}$\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 44,
    "section": "Verify token format",
    "subsection": "Common Issues and Solutions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "echo $DOPPLER_TOKEN | grep -E \"^dp\\.(pt|st)\\.[a-zA-Z0-9_]+\\.[a-zA-Z0-9]{20,}$\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "api_endpoint_usage",
    "description": "Doppler REST API endpoint usage pattern",
    "pattern": "curl -X GET https://api.doppler.com/v3/me \\",
    "category": "api_usage",
    "type": "rest_api",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 47,
    "section": "Test token directly",
    "subsection": "Common Issues and Solutions",
    "usage": "Use Doppler REST API for programmatic access",
    "examples": [
      "curl -X GET https://api.doppler.com/v3/me \\"
    ],
    "recommendations": [
      "Use service tokens for API access",
      "Implement proper error handling"
    ],
    "warnings": [
      "Rate limiting applies to API calls"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "curl -X GET https://api.doppler.com/v3/me \\",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 47,
    "section": "Test token directly",
    "subsection": "Common Issues and Solutions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "curl -X GET https://api.doppler.com/v3/me \\"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "-H \"Authorization: Bearer $DOPPLER_TOKEN\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 48,
    "section": "Test token directly",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "# Check token permissions",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 50,
    "section": "Check token permissions",
    "subsection": "Common Issues and Solutions",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "cli_configs_tokens",
    "description": "CLI command: configs tokens command",
    "pattern": "doppler configs tokens list --json | jq '.[] | select(.slug==\"your-token-slug\")'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 51,
    "section": "Check token permissions",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler configs tokens for configs operations",
    "examples": [
      "doppler configs tokens list --json | jq '.[] | select(.slug==\"your-token-slug\")'",
      "doppler configs tokens --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configs_tokens",
    "description": "Doppler CLI command: configs tokens",
    "pattern": "doppler configs tokens list --json | jq '.[] | select(.slug==\"your-token-slug\")'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 51,
    "section": "Check token permissions",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute configs operations via CLI",
    "examples": [
      "doppler configs tokens list --json | jq '.[] | select(.slug==\"your-token-slug\")'"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_configure_clear",
    "description": "CLI command: configure clear command",
    "pattern": "doppler configure clear",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 57,
    "section": "Clear all Doppler cache",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler configure clear for configure operations",
    "examples": [
      "doppler configure clear",
      "doppler configure clear --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configure_clear",
    "description": "Doppler CLI command: configure clear",
    "pattern": "doppler configure clear",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 57,
    "section": "Clear all Doppler cache",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "doppler configure clear"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "doppler setup",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 61,
    "section": "Re-setup",
    "subsection": "Common Issues and Solutions",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "cli_setup",
    "description": "CLI command: setup command",
    "pattern": "doppler setup",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 61,
    "section": "Re-setup",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler setup for setup operations",
    "examples": [
      "doppler setup",
      "doppler setup --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_setup",
    "description": "Doppler CLI command: setup",
    "pattern": "doppler setup",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 61,
    "section": "Re-setup",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute setup operations via CLI",
    "examples": [
      "doppler setup"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "troubleshoot_token_error",
    "description": "Troubleshooting guide for invalid or expired token",
    "pattern": "#### Issue: \"Token expired\" or \"Invalid token\"",
    "category": "troubleshooting",
    "type": "error_resolution",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 64,
    "section": "Re-setup",
    "subsection": "Common Issues and Solutions",
    "usage": "Resolve invalid or expired token issues",
    "examples": [
      "Check token validity: doppler me",
      "Regenerate token if expired"
    ],
    "recommendations": [
      "Verify token format",
      "Check token expiration",
      "Regenerate if needed"
    ],
    "warnings": []
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler configs tokens list --project myapp --config production --json | \\",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 71,
    "section": "List tokens with expiration dates",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_configs_tokens",
    "description": "CLI command: configs tokens command",
    "pattern": "doppler configs tokens list --project myapp --config production --json | \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 71,
    "section": "List tokens with expiration dates",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler configs tokens for configs operations",
    "examples": [
      "doppler configs tokens list --project myapp --config production --json | \\",
      "doppler configs tokens --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configs_tokens",
    "description": "Doppler CLI command: configs tokens",
    "pattern": "doppler configs tokens list --project myapp --config production --json | \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 71,
    "section": "List tokens with expiration dates",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute configs operations via CLI",
    "examples": [
      "doppler configs tokens list --project myapp --config production --json | \\"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "jq '.[] | {name, expires_at}'",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 72,
    "section": "List tokens with expiration dates",
    "subsection": "Common Issues and Solutions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "jq '.[] | {name, expires_at}'"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_configs_tokens",
    "description": "CLI command: configs tokens command",
    "pattern": "doppler configs tokens create \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 78,
    "section": "Generate fresh token",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler configs tokens for configs operations",
    "examples": [
      "doppler configs tokens create \\",
      "doppler configs tokens --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configs_tokens",
    "description": "Doppler CLI command: configs tokens",
    "pattern": "doppler configs tokens create \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 78,
    "section": "Generate fresh token",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute configs operations via CLI",
    "examples": [
      "doppler configs tokens create \\"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "--config production \\",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 80,
    "section": "Generate fresh token",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "github_actions_integration",
    "description": "GitHub Actions workflow integration with Doppler secrets",
    "pattern": "# GitHub Actions example",
    "category": "integration",
    "type": "ci_cd_workflow",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 88,
    "section": "GitHub Actions example",
    "subsection": "Common Issues and Solutions",
    "usage": "Integrate Doppler secrets into GitHub Actions workflows",
    "examples": [
      "uses: dopplerhq/secrets-fetch-action@v1.1.0",
      "with: doppler-token: ${{ secrets.DOPPLER_TOKEN }}"
    ],
    "recommendations": [
      "Use GitHub Actions integration action",
      "Store Doppler token in GitHub Secrets"
    ],
    "warnings": [
      "Never expose Doppler tokens in workflow logs"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "gh secret set DOPPLER_TOKEN --body \"dp.st.production.newtoken\"",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 89,
    "section": "GitHub Actions example",
    "subsection": "Common Issues and Solutions",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "gh secret set DOPPLER_TOKEN --body \"dp.st.production.newtoken\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 89,
    "section": "GitHub Actions example",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "doppler setup --project myapp --config dev --no-interactive",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 108,
    "section": "Non-interactive setup",
    "subsection": "Common Issues and Solutions",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler setup --project myapp --config dev --no-interactive",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 108,
    "section": "Non-interactive setup",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_setup_--project",
    "description": "CLI command: setup --project command",
    "pattern": "doppler setup --project myapp --config dev --no-interactive",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 108,
    "section": "Non-interactive setup",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler setup --project for setup operations",
    "examples": [
      "doppler setup --project myapp --config dev --no-interactive",
      "doppler setup --project --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_setup_--project",
    "description": "Doppler CLI command: setup --project",
    "pattern": "doppler setup --project myapp --config dev --no-interactive",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 108,
    "section": "Non-interactive setup",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute setup operations via CLI",
    "examples": [
      "doppler setup --project myapp --config dev --no-interactive"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_configure_set",
    "description": "CLI command: configure set command",
    "pattern": "doppler configure set project myapp",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 114,
    "section": "Set project",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler configure set for configure operations",
    "examples": [
      "doppler configure set project myapp",
      "doppler configure set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configure_set",
    "description": "Doppler CLI command: configure set",
    "pattern": "doppler configure set project myapp",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 114,
    "section": "Set project",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "doppler configure set project myapp"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler configure set config production",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 117,
    "section": "Set config",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_configure_set",
    "description": "CLI command: configure set command",
    "pattern": "doppler configure set config production",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 117,
    "section": "Set config",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler configure set for configure operations",
    "examples": [
      "doppler configure set config production",
      "doppler configure set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configure_set",
    "description": "Doppler CLI command: configure set",
    "pattern": "doppler configure set config production",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 117,
    "section": "Set config",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "doppler configure set config production"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_configure",
    "description": "CLI command: configure command",
    "pattern": "doppler configure",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 120,
    "section": "Verify settings",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler configure for configure operations",
    "examples": [
      "doppler configure",
      "doppler configure --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configure",
    "description": "Doppler CLI command: configure",
    "pattern": "doppler configure",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 120,
    "section": "Verify settings",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "doppler configure"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "doppler setup --scope .",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 126,
    "section": "Setup for current directory only",
    "subsection": "Common Issues and Solutions",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "cli_setup_--scope",
    "description": "CLI command: setup --scope command",
    "pattern": "doppler setup --scope .",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 126,
    "section": "Setup for current directory only",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler setup --scope for setup operations",
    "examples": [
      "doppler setup --scope .",
      "doppler setup --scope --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_setup_--scope",
    "description": "Doppler CLI command: setup --scope",
    "pattern": "doppler setup --scope .",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 126,
    "section": "Setup for current directory only",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute setup operations via CLI",
    "examples": [
      "doppler setup --scope ."
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_configure_get",
    "description": "CLI command: configure get command",
    "pattern": "doppler configure get project",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 142,
    "section": "Check specific values",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler configure get for configure operations",
    "examples": [
      "doppler configure get project",
      "doppler configure get --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configure_get",
    "description": "Doppler CLI command: configure get",
    "pattern": "doppler configure get project",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 142,
    "section": "Check specific values",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "doppler configure get project"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_configure_get",
    "description": "CLI command: configure get command",
    "pattern": "doppler configure get config",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 143,
    "section": "Check specific values",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler configure get for configure operations",
    "examples": [
      "doppler configure get config",
      "doppler configure get --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configure_get",
    "description": "Doppler CLI command: configure get",
    "pattern": "doppler configure get config",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 143,
    "section": "Check specific values",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "doppler configure get config"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler run --project myapp --config production -- env",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 149,
    "section": "Run with specific config",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_run_--project",
    "description": "CLI command: run --project command",
    "pattern": "doppler run --project myapp --config production -- env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 149,
    "section": "Run with specific config",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler run --project for run operations",
    "examples": [
      "doppler run --project myapp --config production -- env",
      "doppler run --project --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--project",
    "description": "Doppler CLI command: run --project",
    "pattern": "doppler run --project myapp --config production -- env",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 149,
    "section": "Run with specific config",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --project myapp --config production -- env"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "export DOPPLER_CONFIG=production",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 152,
    "section": "Set environment variable",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_CONFIG=production",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 152,
    "section": "Set environment variable",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_DEBUG=1",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 158,
    "section": "Enable debug mode",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_secrets",
    "description": "CLI command: secrets command",
    "pattern": "doppler secrets",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 171,
    "section": "List all secrets",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler secrets for secrets operations",
    "examples": [
      "doppler secrets",
      "doppler secrets --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets",
    "description": "Doppler CLI command: secrets",
    "pattern": "doppler secrets",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 171,
    "section": "List all secrets",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets",
    "description": "CLI command: secrets command",
    "pattern": "doppler secrets | grep -i database",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 174,
    "section": "Search for specific secret",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler secrets for secrets operations",
    "examples": [
      "doppler secrets | grep -i database",
      "doppler secrets --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets",
    "description": "Doppler CLI command: secrets",
    "pattern": "doppler secrets | grep -i database",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 174,
    "section": "Search for specific secret",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets | grep -i database"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler secrets --config staging | grep DATABASE_URL",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 177,
    "section": "Check in different configs",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_secrets_--config",
    "description": "CLI command: secrets --config command",
    "pattern": "doppler secrets --config staging | grep DATABASE_URL",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 177,
    "section": "Check in different configs",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler secrets --config for secrets operations",
    "examples": [
      "doppler secrets --config staging | grep DATABASE_URL",
      "doppler secrets --config --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_--config",
    "description": "Doppler CLI command: secrets --config",
    "pattern": "doppler secrets --config staging | grep DATABASE_URL",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 177,
    "section": "Check in different configs",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets --config staging | grep DATABASE_URL"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_--json",
    "description": "CLI command: secrets --json command",
    "pattern": "doppler secrets --json | jq '.DATABASE_URL'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 183,
    "section": "Look for computed secrets",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler secrets --json for secrets operations",
    "examples": [
      "doppler secrets --json | jq '.DATABASE_URL'",
      "doppler secrets --json --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_--json",
    "description": "Doppler CLI command: secrets --json",
    "pattern": "doppler secrets --json | jq '.DATABASE_URL'",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 183,
    "section": "Look for computed secrets",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets --json | jq '.DATABASE_URL'"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_get",
    "description": "CLI command: secrets get command",
    "pattern": "doppler secrets get DATEBASE_URL 2>&1 | grep -q \"not found\" && \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 186,
    "section": "Check for typos",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler secrets get for secrets operations",
    "examples": [
      "doppler secrets get DATEBASE_URL 2>&1 | grep -q \"not found\" && \\",
      "doppler secrets get --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "doppler secrets get DATEBASE_URL 2>&1 | grep -q \"not found\" && \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 186,
    "section": "Check for typos",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets get DATEBASE_URL 2>&1 | grep -q \"not found\" && \\"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "secret_rotation_strategy",
    "description": "Secret rotation best practices for security and compliance",
    "pattern": "1. **Force Refresh:**",
    "category": "best_practices",
    "type": "security_lifecycle",
    "complexity": "high",
    "safety": "critical",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 194,
    "section": "Check for typos",
    "subsection": "Common Issues and Solutions",
    "usage": "Implement regular secret rotation for security compliance",
    "examples": [
      "Automated rotation via API",
      "Zero-downtime rotation strategies"
    ],
    "recommendations": [
      "Automate rotation where possible",
      "Test rotation procedures"
    ],
    "warnings": [
      "Improper rotation can cause service outages"
    ]
  },
  {
    "name": "cli_secrets_--no-cache",
    "description": "CLI command: secrets --no-cache command",
    "pattern": "doppler secrets --no-cache",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 200,
    "section": "Fetch fresh secrets",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler secrets --no-cache for secrets operations",
    "examples": [
      "doppler secrets --no-cache",
      "doppler secrets --no-cache --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_--no-cache",
    "description": "Doppler CLI command: secrets --no-cache",
    "pattern": "doppler secrets --no-cache",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 200,
    "section": "Fetch fresh secrets",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets --no-cache"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "api_endpoint_usage",
    "description": "Doppler REST API endpoint usage pattern",
    "pattern": "curl -X POST https://api.doppler.com/v3/webhooks/test \\",
    "category": "api_usage",
    "type": "rest_api",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 215,
    "section": "For applications using webhooks",
    "subsection": "Common Issues and Solutions",
    "usage": "Use Doppler REST API for programmatic access",
    "examples": [
      "curl -X POST https://api.doppler.com/v3/webhooks/test \\"
    ],
    "recommendations": [
      "Use service tokens for API access",
      "Implement proper error handling"
    ],
    "warnings": [
      "Rate limiting applies to API calls"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "curl -X POST https://api.doppler.com/v3/webhooks/test \\",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 215,
    "section": "For applications using webhooks",
    "subsection": "Common Issues and Solutions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "curl -X POST https://api.doppler.com/v3/webhooks/test \\"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "#### Issue: \"Command not found: doppler\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 221,
    "section": "For applications using webhooks",
    "subsection": "Common Issues and Solutions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "#### Issue: \"Command not found: doppler\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_--version",
    "description": "CLI command: --version command",
    "pattern": "doppler --version",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 231,
    "section": "Check version",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler --version for --version operations",
    "examples": [
      "doppler --version",
      "doppler --version --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_--version",
    "description": "Doppler CLI command: --version",
    "pattern": "doppler --version",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 231,
    "section": "Check version",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute --version operations via CLI",
    "examples": [
      "doppler --version"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "https://cli.doppler.com/install.sh | sudo sh",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 235,
    "section": "Reinstall if needed",
    "subsection": "Common Issues and Solutions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "https://cli.doppler.com/install.sh | sudo sh"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "echo 'export PATH=\"/usr/local/bin:$PATH\"' >> ~/.bashrc",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 241,
    "section": "Add to PATH",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "api_endpoint_usage",
    "description": "Doppler REST API endpoint usage pattern",
    "pattern": "curl -I https://api.doppler.com/v3/ping",
    "category": "api_usage",
    "type": "rest_api",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 252,
    "section": "Test API connectivity",
    "subsection": "Common Issues and Solutions",
    "usage": "Use Doppler REST API for programmatic access",
    "examples": [
      "curl -I https://api.doppler.com/v3/ping"
    ],
    "recommendations": [
      "Use service tokens for API access",
      "Implement proper error handling"
    ],
    "warnings": [
      "Rate limiting applies to API calls"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "curl -I https://api.doppler.com/v3/ping",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 252,
    "section": "Test API connectivity",
    "subsection": "Common Issues and Solutions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "curl -I https://api.doppler.com/v3/ping"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_ping",
    "description": "CLI command: ping command",
    "pattern": "doppler ping",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 255,
    "section": "Check with Doppler",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler ping for ping operations",
    "examples": [
      "doppler ping",
      "doppler ping --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_ping",
    "description": "Doppler CLI command: ping",
    "pattern": "doppler ping",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 255,
    "section": "Check with Doppler",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute ping operations via CLI",
    "examples": [
      "doppler ping"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_secrets",
    "description": "Doppler CLI command: secrets",
    "pattern": "timeout 5 doppler secrets || echo \"Command timed out\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 258,
    "section": "Test with timeout",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "timeout 5 doppler secrets || echo \"Command timed out\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export HTTPS_PROXY=http://proxy.company.com:8080",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 264,
    "section": "Set proxy if needed",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export NO_PROXY=localhost,127.0.0.1",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 265,
    "section": "Set proxy if needed",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_TIMEOUT=30",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 275,
    "section": "Enable verbose logging",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "docker_secret_injection",
    "description": "Docker container secret injection using Doppler CLI",
    "pattern": "#### Issue: Docker container can't access secrets",
    "category": "integration",
    "type": "container_deployment",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 281,
    "section": "Enable verbose logging",
    "subsection": "Common Issues and Solutions",
    "usage": "Inject secrets into Docker containers using Doppler CLI",
    "examples": [
      "doppler run -- docker build -t myapp .",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use Doppler CLI for secret injection",
      "Never bake secrets into images"
    ],
    "warnings": [
      "Ensure Doppler CLI is available in container"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "#### Issue: Docker container can't access secrets",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 281,
    "section": "Enable verbose logging",
    "subsection": "Common Issues and Solutions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "#### Issue: Docker container can't access secrets"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "docker_secret_injection",
    "description": "Docker container secret injection using Doppler CLI",
    "pattern": "docker run --rm -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp:latest \\",
    "category": "integration",
    "type": "container_deployment",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 288,
    "section": "Debug Dockerfile",
    "subsection": "Common Issues and Solutions",
    "usage": "Inject secrets into Docker containers using Doppler CLI",
    "examples": [
      "doppler run -- docker build -t myapp .",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use Doppler CLI for secret injection",
      "Never bake secrets into images"
    ],
    "warnings": [
      "Ensure Doppler CLI is available in container"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "docker run --rm -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp:latest \\",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 288,
    "section": "Debug Dockerfile",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "sh -c 'echo $DOPPLER_TOKEN | head -c 20'",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 289,
    "section": "Debug Dockerfile",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "RUN wget -q -t3 'https://packages.doppler.com/public/cli/rsa.8004D9FF50437357.key' -O /etc/apk/keys/cli@doppler-8004D9FF50437357.rsa.pub && \\",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 297,
    "section": "Install Doppler CLI",
    "subsection": "Common Issues and Solutions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "RUN wget -q -t3 'https://packages.doppler.com/public/cli/rsa.8004D9FF50437357.key' -O /etc/apk/keys/cli@doppler-8004D9FF50437357.rsa.pub && \\"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "echo 'https://packages.doppler.com/public/cli/alpine/any-version/main' | tee -a /etc/apk/repositories && \\",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 298,
    "section": "Install Doppler CLI",
    "subsection": "Common Issues and Solutions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "echo 'https://packages.doppler.com/public/cli/alpine/any-version/main' | tee -a /etc/apk/repositories && \\"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "ARG DOPPLER_TOKEN",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 302,
    "section": "Don't hardcode token!",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "ENV DOPPLER_TOKEN=$DOPPLER_TOKEN",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 303,
    "section": "Don't hardcode token!",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "- DOPPLER_TOKEN=${DOPPLER_TOKEN}",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 316,
    "section": "Run with Doppler",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- DOPPLER_TOKEN=${DOPPLER_TOKEN}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 316,
    "section": "Run with Doppler",
    "subsection": "Common Issues and Solutions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- DOPPLER_TOKEN=${DOPPLER_TOKEN}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "command_run_--",
    "description": "Doppler CLI command: run --",
    "pattern": "command: doppler run -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 317,
    "section": "Run with Doppler",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute run operations via CLI",
    "examples": [
      "command: doppler run -- npm start"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "command: doppler run -- npm start",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 317,
    "section": "Run with Doppler",
    "subsection": "Common Issues and Solutions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "command: doppler run -- npm start"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "kubernetes_integration",
    "description": "Kubernetes secret management with Doppler operator or CLI",
    "pattern": "#### Issue: Kubernetes pods failing to start",
    "category": "integration",
    "type": "orchestration",
    "complexity": "high",
    "safety": "careful",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 320,
    "section": "Run with Doppler",
    "subsection": "Common Issues and Solutions",
    "usage": "Deploy secrets to Kubernetes using Doppler operator or sidecar pattern",
    "examples": [
      "kubectl apply -f doppler-operator.yaml",
      "doppler kubernetes create secret --name myapp-secrets"
    ],
    "recommendations": [
      "Use Doppler Kubernetes operator",
      "Implement proper RBAC"
    ],
    "warnings": [
      "Kubernetes secrets are base64 encoded, not encrypted"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "--from-literal=token=$DOPPLER_TOKEN \\",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 331,
    "section": "Recreate if needed",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "name: debug-doppler",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 340,
    "section": "Recreate if needed",
    "subsection": "Common Issues and Solutions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "name: debug-doppler"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "image: dopplerhq/cli:latest",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 344,
    "section": "Recreate if needed",
    "subsection": "Common Issues and Solutions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "image: dopplerhq/cli:latest"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "command: [\"sh\", \"-c\", \"doppler secrets get DOPPLER_PROJECT --plain\"]",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 345,
    "section": "Recreate if needed",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "command: [\"sh\", \"-c\", \"doppler secrets get DOPPLER_PROJECT --plain\"]"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "command: [\"sh\", \"-c\", \"doppler secrets get DOPPLER_PROJECT --plain\"]",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 345,
    "section": "Recreate if needed",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "command: [\"sh\", \"-c\", \"doppler secrets get DOPPLER_PROJECT --plain\"]",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 345,
    "section": "Recreate if needed",
    "subsection": "Common Issues and Solutions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "command: [\"sh\", \"-c\", \"doppler secrets get DOPPLER_PROJECT --plain\"]"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "- name: DOPPLER_TOKEN",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 347,
    "section": "Recreate if needed",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "secretKeyRef:",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 349,
    "section": "Recreate if needed",
    "subsection": "Common Issues and Solutions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "secretKeyRef:"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "name: doppler-token",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 350,
    "section": "Recreate if needed",
    "subsection": "Common Issues and Solutions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "name: doppler-token"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "--image=dopplerhq/cli:latest \\",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 358,
    "section": "Run debug pod",
    "subsection": "Common Issues and Solutions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "--image=dopplerhq/cli:latest \\"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "--env=\"DOPPLER_TOKEN=$DOPPLER_TOKEN\" \\",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 359,
    "section": "Run debug pod",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "command_secrets",
    "description": "Doppler CLI command: secrets",
    "pattern": "-- doppler secrets",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 360,
    "section": "Run debug pod",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "-- doppler secrets"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "#### Issue: Slow secret fetching",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 365,
    "section": "Run debug pod",
    "subsection": "Common Issues and Solutions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "#### Issue: Slow secret fetching"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_secrets_download",
    "description": "CLI command: secrets download command",
    "pattern": "doppler secrets download --no-file > .doppler-cache",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 372,
    "section": "Use local cache",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler secrets download for secrets operations",
    "examples": [
      "doppler secrets download --no-file > .doppler-cache",
      "doppler secrets download --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "doppler secrets download --no-file > .doppler-cache",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 372,
    "section": "Use local cache",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets download --no-file > .doppler-cache"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_run_--fallback",
    "description": "CLI command: run --fallback command",
    "pattern": "doppler run --fallback .doppler-cache -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 375,
    "section": "Run with fallback",
    "subsection": "Common Issues and Solutions",
    "usage": "Use doppler run --fallback for run operations",
    "examples": [
      "doppler run --fallback .doppler-cache -- npm start",
      "doppler run --fallback --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_run_--fallback",
    "description": "Doppler CLI command: run --fallback",
    "pattern": "doppler run --fallback .doppler-cache -- npm start",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 375,
    "section": "Run with fallback",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute run operations via CLI",
    "examples": [
      "doppler run --fallback .doppler-cache -- npm start"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_secrets_download",
    "description": "Doppler CLI command: secrets download",
    "pattern": "eval $(doppler secrets download --no-file --format shell)",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 381,
    "section": "Download once, use multiple times",
    "subsection": "Common Issues and Solutions",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "eval $(doppler secrets download --no-file --format shell)"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_API_HOST=https://api.eu.doppler.com",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 391,
    "section": "Use closer API endpoint if available",
    "subsection": "Common Issues and Solutions",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "export DOPPLER_API_HOST=https://api.eu.doppler.com",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 391,
    "section": "Use closer API endpoint if available",
    "subsection": "Common Issues and Solutions",
    "usage": "Use as template for integration configuration",
    "examples": [
      "export DOPPLER_API_HOST=https://api.eu.doppler.com"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_TIMEOUT=60",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 401,
    "section": "Maximum debugging",
    "subsection": "Advanced Debugging",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "export DOPPLER_LOG_LEVEL=debug",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 402,
    "section": "Maximum debugging",
    "subsection": "Advanced Debugging",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_secrets",
    "description": "CLI command: secrets command",
    "pattern": "doppler secrets 2>&1 | tee doppler-debug.log",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 405,
    "section": "Run command",
    "subsection": "Advanced Debugging",
    "usage": "Use doppler secrets for secrets operations",
    "examples": [
      "doppler secrets 2>&1 | tee doppler-debug.log",
      "doppler secrets --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets",
    "description": "Doppler CLI command: secrets",
    "pattern": "doppler secrets 2>&1 | tee doppler-debug.log",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 405,
    "section": "Run command",
    "subsection": "Advanced Debugging",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets 2>&1 | tee doppler-debug.log"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "api_endpoint_usage",
    "description": "Doppler REST API endpoint usage pattern",
    "pattern": "nslookup api.doppler.com",
    "category": "api_usage",
    "type": "rest_api",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 415,
    "section": "Network diagnostic script",
    "subsection": "Advanced Debugging",
    "usage": "Use Doppler REST API for programmatic access",
    "examples": [
      "nslookup api.doppler.com"
    ],
    "recommendations": [
      "Use service tokens for API access",
      "Implement proper error handling"
    ],
    "warnings": [
      "Rate limiting applies to API calls"
    ]
  },
  {
    "name": "api_endpoint_usage",
    "description": "Doppler REST API endpoint usage pattern",
    "pattern": "openssl s_client -connect api.doppler.com:443 -servername api.doppler.com < /dev/null",
    "category": "api_usage",
    "type": "rest_api",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 421,
    "section": "Network diagnostic script",
    "subsection": "Advanced Debugging",
    "usage": "Use Doppler REST API for programmatic access",
    "examples": [
      "openssl s_client -connect api.doppler.com:443 -servername api.doppler.com < /dev/null"
    ],
    "recommendations": [
      "Use service tokens for API access",
      "Implement proper error handling"
    ],
    "warnings": [
      "Rate limiting applies to API calls"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "openssl s_client -connect api.doppler.com:443 -servername api.doppler.com < /dev/null",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 421,
    "section": "Network diagnostic script",
    "subsection": "Advanced Debugging",
    "usage": "Use as template for integration configuration",
    "examples": [
      "openssl s_client -connect api.doppler.com:443 -servername api.doppler.com < /dev/null"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "api_endpoint_usage",
    "description": "Doppler REST API endpoint usage pattern",
    "pattern": "traceroute api.doppler.com",
    "category": "api_usage",
    "type": "rest_api",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 424,
    "section": "Network diagnostic script",
    "subsection": "Advanced Debugging",
    "usage": "Use Doppler REST API for programmatic access",
    "examples": [
      "traceroute api.doppler.com"
    ],
    "recommendations": [
      "Use service tokens for API access",
      "Implement proper error handling"
    ],
    "warnings": [
      "Rate limiting applies to API calls"
    ]
  },
  {
    "name": "api_endpoint_usage",
    "description": "Doppler REST API endpoint usage pattern",
    "pattern": "time curl -s https://api.doppler.com/v3/ping > /dev/null",
    "category": "api_usage",
    "type": "rest_api",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 427,
    "section": "Network diagnostic script",
    "subsection": "Advanced Debugging",
    "usage": "Use Doppler REST API for programmatic access",
    "examples": [
      "time curl -s https://api.doppler.com/v3/ping > /dev/null"
    ],
    "recommendations": [
      "Use service tokens for API access",
      "Implement proper error handling"
    ],
    "warnings": [
      "Rate limiting applies to API calls"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "time curl -s https://api.doppler.com/v3/ping > /dev/null",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 427,
    "section": "Network diagnostic script",
    "subsection": "Advanced Debugging",
    "usage": "Use as template for integration configuration",
    "examples": [
      "time curl -s https://api.doppler.com/v3/ping > /dev/null"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "TOKEN=${1:-$DOPPLER_TOKEN}",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 436,
    "section": "Comprehensive token validation",
    "subsection": "Advanced Debugging",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "TOKEN=${1:-$DOPPLER_TOKEN}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 436,
    "section": "Comprehensive token validation",
    "subsection": "Advanced Debugging",
    "usage": "Use as template for integration configuration",
    "examples": [
      "TOKEN=${1:-$DOPPLER_TOKEN}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "echo \"Validating token: ${TOKEN:0:20}...\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 443,
    "section": "Comprehensive token validation",
    "subsection": "Advanced Debugging",
    "usage": "Use as template for integration configuration",
    "examples": [
      "echo \"Validating token: ${TOKEN:0:20}...\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "if ! echo \"$TOKEN\" | grep -qE \"^dp\\.(pt|st)\\.[a-zA-Z0-9_]+\\.[a-zA-Z0-9]{20,}$\"; then",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 446,
    "section": "Check format",
    "subsection": "Advanced Debugging",
    "usage": "Use as template for integration configuration",
    "examples": [
      "if ! echo \"$TOKEN\" | grep -qE \"^dp\\.(pt|st)\\.[a-zA-Z0-9_]+\\.[a-zA-Z0-9]{20,}$\"; then"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "troubleshoot_token_error",
    "description": "Troubleshooting guide for invalid or expired token",
    "pattern": "echo \"Error: Invalid token format\"",
    "category": "troubleshooting",
    "type": "error_resolution",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 447,
    "section": "Check format",
    "subsection": "Advanced Debugging",
    "usage": "Resolve invalid or expired token issues",
    "examples": [
      "Check token validity: doppler me",
      "Regenerate token if expired"
    ],
    "recommendations": [
      "Verify token format",
      "Check token expiration",
      "Regenerate if needed"
    ],
    "warnings": []
  },
  {
    "name": "api_endpoint_usage",
    "description": "Doppler REST API endpoint usage pattern",
    "pattern": "RESPONSE=$(curl -s -w \"\\n%{http_code}\" https://api.doppler.com/v3/me \\",
    "category": "api_usage",
    "type": "rest_api",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 452,
    "section": "Test API access",
    "subsection": "Advanced Debugging",
    "usage": "Use Doppler REST API for programmatic access",
    "examples": [
      "RESPONSE=$(curl -s -w \"\\n%{http_code}\" https://api.doppler.com/v3/me \\"
    ],
    "recommendations": [
      "Use service tokens for API access",
      "Implement proper error handling"
    ],
    "warnings": [
      "Rate limiting applies to API calls"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "RESPONSE=$(curl -s -w \"\\n%{http_code}\" https://api.doppler.com/v3/me \\",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 452,
    "section": "Test API access",
    "subsection": "Advanced Debugging",
    "usage": "Use as template for integration configuration",
    "examples": [
      "RESPONSE=$(curl -s -w \"\\n%{http_code}\" https://api.doppler.com/v3/me \\"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_--version",
    "description": "CLI command: --version command",
    "pattern": "doppler --version || echo \"Doppler CLI not found\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 479,
    "section": "Full environment diagnostic",
    "subsection": "Advanced Debugging",
    "usage": "Use doppler --version for --version operations",
    "examples": [
      "doppler --version || echo \"Doppler CLI not found\"",
      "doppler --version --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_--version",
    "description": "Doppler CLI command: --version",
    "pattern": "doppler --version || echo \"Doppler CLI not found\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 479,
    "section": "Full environment diagnostic",
    "subsection": "Advanced Debugging",
    "usage": "Execute --version operations via CLI",
    "examples": [
      "doppler --version || echo \"Doppler CLI not found\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_configure",
    "description": "CLI command: configure command",
    "pattern": "doppler configure || echo \"No configuration found\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 482,
    "section": "Full environment diagnostic",
    "subsection": "Advanced Debugging",
    "usage": "Use doppler configure for configure operations",
    "examples": [
      "doppler configure || echo \"No configuration found\"",
      "doppler configure --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configure",
    "description": "Doppler CLI command: configure",
    "pattern": "doppler configure || echo \"No configuration found\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 482,
    "section": "Full environment diagnostic",
    "subsection": "Advanced Debugging",
    "usage": "Execute configure operations via CLI",
    "examples": [
      "doppler configure || echo \"No configuration found\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_directory",
    "description": "Doppler CLI command: directory",
    "pattern": "ls -la ~/.doppler/ 2>/dev/null || echo \"No .doppler directory\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 488,
    "section": "Full environment diagnostic",
    "subsection": "Advanced Debugging",
    "usage": "Execute directory operations via CLI",
    "examples": [
      "ls -la ~/.doppler/ 2>/dev/null || echo \"No .doppler directory\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_directory",
    "description": "Doppler CLI command: directory",
    "pattern": "ls -la .doppler/ 2>/dev/null || echo \"No local .doppler directory\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 489,
    "section": "Full environment diagnostic",
    "subsection": "Advanced Debugging",
    "usage": "Execute directory operations via CLI",
    "examples": [
      "ls -la .doppler/ 2>/dev/null || echo \"No local .doppler directory\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "if [ -n \"$DOPPLER_TOKEN\" ]; then",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 492,
    "section": "Full environment diagnostic",
    "subsection": "Advanced Debugging",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_me",
    "description": "CLI command: me command",
    "pattern": "doppler me || echo \"Token authentication failed\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 493,
    "section": "Full environment diagnostic",
    "subsection": "Advanced Debugging",
    "usage": "Use doppler me for me operations",
    "examples": [
      "doppler me || echo \"Token authentication failed\"",
      "doppler me --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_me",
    "description": "Doppler CLI command: me",
    "pattern": "doppler me || echo \"Token authentication failed\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 493,
    "section": "Full environment diagnostic",
    "subsection": "Advanced Debugging",
    "usage": "Execute me operations via CLI",
    "examples": [
      "doppler me || echo \"Token authentication failed\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "echo \"No DOPPLER_TOKEN set\"",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 495,
    "section": "Full environment diagnostic",
    "subsection": "Advanced Debugging",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "cli_ping",
    "description": "CLI command: ping command",
    "pattern": "doppler ping || echo \"API ping failed\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 499,
    "section": "Full environment diagnostic",
    "subsection": "Advanced Debugging",
    "usage": "Use doppler ping for ping operations",
    "examples": [
      "doppler ping || echo \"API ping failed\"",
      "doppler ping --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_ping",
    "description": "Doppler CLI command: ping",
    "pattern": "doppler ping || echo \"API ping failed\"",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 499,
    "section": "Full environment diagnostic",
    "subsection": "Advanced Debugging",
    "usage": "Execute ping operations via CLI",
    "examples": [
      "doppler ping || echo \"API ping failed\""
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "|-------|-------|----------|",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 507,
    "section": "Full environment diagnostic",
    "subsection": "Error Reference",
    "usage": "Use as template for integration configuration",
    "examples": [
      "|-------|-------|----------|"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "command_login",
    "description": "Doppler CLI command: login",
    "pattern": "| `Unable to authenticate` | Invalid or missing token | Run `doppler login` or check `DOPPLER_TOKEN` |",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 508,
    "section": "Full environment diagnostic",
    "subsection": "Error Reference",
    "usage": "Execute login operations via CLI",
    "examples": [
      "| `Unable to authenticate` | Invalid or missing token | Run `doppler login` or check `DOPPLER_TOKEN` |"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "| `Unable to authenticate` | Invalid or missing token | Run `doppler login` or check `DOPPLER_TOKEN` |",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 508,
    "section": "Full environment diagnostic",
    "subsection": "Error Reference",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "| `Project not found` | Project doesn't exist or no access | Verify project name and permissions |",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 509,
    "section": "Full environment diagnostic",
    "subsection": "Error Reference",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "| `Permission denied` | Insufficient token permissions | Create new token with proper scope |",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 514,
    "section": "Full environment diagnostic",
    "subsection": "Error Reference",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "|------|---------|---------|",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 519,
    "section": "Full environment diagnostic",
    "subsection": "Error Reference",
    "usage": "Use as template for integration configuration",
    "examples": [
      "|------|---------|---------|"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "troubleshoot_token_error",
    "description": "Troubleshooting guide for invalid or expired token",
    "pattern": "| 2 | Authentication error | Invalid token or not logged in |",
    "category": "troubleshooting",
    "type": "error_resolution",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 522,
    "section": "Full environment diagnostic",
    "subsection": "Error Reference",
    "usage": "Resolve invalid or expired token issues",
    "examples": [
      "Check token validity: doppler me",
      "Regenerate token if expired"
    ],
    "recommendations": [
      "Verify token format",
      "Check token expiration",
      "Regenerate if needed"
    ],
    "warnings": []
  },
  {
    "name": "cli_--help",
    "description": "CLI command: --help command",
    "pattern": "doppler --help",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 534,
    "section": "CLI help",
    "subsection": "Getting Help",
    "usage": "Use doppler --help for --help operations",
    "examples": [
      "doppler --help",
      "doppler --help --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_--help",
    "description": "Doppler CLI command: --help",
    "pattern": "doppler --help",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 534,
    "section": "CLI help",
    "subsection": "Getting Help",
    "usage": "Execute --help operations via CLI",
    "examples": [
      "doppler --help"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_--help",
    "description": "CLI command: secrets --help command",
    "pattern": "doppler secrets --help",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 535,
    "section": "CLI help",
    "subsection": "Getting Help",
    "usage": "Use doppler secrets --help for secrets operations",
    "examples": [
      "doppler secrets --help",
      "doppler secrets --help --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_--help",
    "description": "Doppler CLI command: secrets --help",
    "pattern": "doppler secrets --help",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 535,
    "section": "CLI help",
    "subsection": "Getting Help",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets --help"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "open https://docs.doppler.com",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 538,
    "section": "Online docs",
    "subsection": "Getting Help",
    "usage": "Use as template for integration configuration",
    "examples": [
      "open https://docs.doppler.com"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_update_check",
    "description": "CLI command: update check command",
    "pattern": "doppler update check",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 544,
    "section": "Check for updates",
    "subsection": "Getting Help",
    "usage": "Use doppler update check for update operations",
    "examples": [
      "doppler update check",
      "doppler update check --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_update_check",
    "description": "Doppler CLI command: update check",
    "pattern": "doppler update check",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 544,
    "section": "Check for updates",
    "subsection": "Getting Help",
    "usage": "Execute update operations via CLI",
    "examples": [
      "doppler update check"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- [Doppler Community Forum](https://community.doppler.com)",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 553,
    "section": "Current version",
    "subsection": "Getting Help",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- [Doppler Community Forum](https://community.doppler.com)"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- Email: support@doppler.com",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 557,
    "section": "Current version",
    "subsection": "Getting Help",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- Email: support@doppler.com"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- [status.doppler.com](https://status.doppler.com)",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 561,
    "section": "Current version",
    "subsection": "Getting Help",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- [status.doppler.com](https://status.doppler.com)"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_update_install",
    "description": "CLI command: update install command",
    "pattern": "doppler update install",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 575,
    "section": "Update CLI",
    "subsection": "Preventive Measures",
    "usage": "Use doppler update install for update operations",
    "examples": [
      "doppler update install",
      "doppler update install --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_update_install",
    "description": "Doppler CLI command: update install",
    "pattern": "doppler update install",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 575,
    "section": "Update CLI",
    "subsection": "Preventive Measures",
    "usage": "Execute update operations via CLI",
    "examples": [
      "doppler update install"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "echo \"Reviewing service tokens...\"",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 578,
    "section": "Clean old tokens",
    "subsection": "Preventive Measures",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "cli_configs_tokens",
    "description": "CLI command: configs tokens command",
    "pattern": "doppler configs tokens list --json | \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 579,
    "section": "Clean old tokens",
    "subsection": "Preventive Measures",
    "usage": "Use doppler configs tokens for configs operations",
    "examples": [
      "doppler configs tokens list --json | \\",
      "doppler configs tokens --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configs_tokens",
    "description": "Doppler CLI command: configs tokens",
    "pattern": "doppler configs tokens list --json | \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 579,
    "section": "Clean old tokens",
    "subsection": "Preventive Measures",
    "usage": "Execute configs operations via CLI",
    "examples": [
      "doppler configs tokens list --json | \\"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_projects",
    "description": "CLI command: projects command",
    "pattern": "doppler projects | while read project; do",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 587,
    "section": "Verify configurations",
    "subsection": "Preventive Measures",
    "usage": "Use doppler projects for projects operations",
    "examples": [
      "doppler projects | while read project; do",
      "doppler projects --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_projects",
    "description": "Doppler CLI command: projects",
    "pattern": "doppler projects | while read project; do",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 587,
    "section": "Verify configurations",
    "subsection": "Preventive Measures",
    "usage": "Execute projects operations via CLI",
    "examples": [
      "doppler projects | while read project; do"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler configs --project \"$project\" > /dev/null || \\",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 589,
    "section": "Verify configurations",
    "subsection": "Preventive Measures",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_configs_--project",
    "description": "CLI command: configs --project command",
    "pattern": "doppler configs --project \"$project\" > /dev/null || \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 589,
    "section": "Verify configurations",
    "subsection": "Preventive Measures",
    "usage": "Use doppler configs --project for configs operations",
    "examples": [
      "doppler configs --project \"$project\" > /dev/null || \\",
      "doppler configs --project --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_configs_--project",
    "description": "Doppler CLI command: configs --project",
    "pattern": "doppler configs --project \"$project\" > /dev/null || \\",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 589,
    "section": "Verify configurations",
    "subsection": "Preventive Measures",
    "usage": "Execute configs operations via CLI",
    "examples": [
      "doppler configs --project \"$project\" > /dev/null || \\"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "check_doppler_health() {",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 602,
    "section": "Health check script for monitoring",
    "subsection": "Preventive Measures",
    "usage": "Use as template for integration configuration",
    "examples": [
      "check_doppler_health() {"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "command_ping",
    "description": "Doppler CLI command: ping",
    "pattern": "if ! doppler ping &> /dev/null; then",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 610,
    "section": "Check API",
    "subsection": "Preventive Measures",
    "usage": "Execute ping operations via CLI",
    "examples": [
      "if ! doppler ping &> /dev/null; then"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "command_me",
    "description": "Doppler CLI command: me",
    "pattern": "if ! doppler me &> /dev/null; then",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 617,
    "section": "Check token",
    "subsection": "Preventive Measures",
    "usage": "Execute me operations via CLI",
    "examples": [
      "if ! doppler me &> /dev/null; then"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- [Doppler Documentation](https://docs.doppler.com)",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 632,
    "section": "Check token",
    "subsection": "Resources",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- [Doppler Documentation](https://docs.doppler.com)"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- [API Reference](https://docs.doppler.com/reference)",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 633,
    "section": "Check token",
    "subsection": "Resources",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- [API Reference](https://docs.doppler.com/reference)"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- [Status Page](https://status.doppler.com)",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 635,
    "section": "Check token",
    "subsection": "Resources",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- [Status Page](https://status.doppler.com)"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "- [Community Forum](https://community.doppler.com)",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 636,
    "section": "Check token",
    "subsection": "Resources",
    "usage": "Use as template for integration configuration",
    "examples": [
      "- [Community Forum](https://community.doppler.com)"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "file_troubleshooting_guide",
    "description": "Comprehensive guide: troubleshooting-guide.md",
    "pattern": "Documentation file: troubleshooting-guide.md",
    "category": "troubleshooting",
    "type": "documentation",
    "complexity": "expert",
    "safety": "safe",
    "filename": "troubleshooting-guide.md",
    "lineNumber": 1,
    "section": "file_overview",
    "subsection": "",
    "usage": "Reference guide for troubleshooting guide",
    "examples": [
      "Study troubleshooting-guide.md for detailed information"
    ],
    "recommendations": [
      "Follow practices outlined in troubleshooting-guide.md"
    ],
    "warnings": [],
    "topics": [
      "Overview",
      "Common Issues and Solutions",
      "Advanced Debugging",
      "Error Reference",
      "Getting Help",
      "Preventive Measures",
      "Resources"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "---",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 1,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "---"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "description: \"Master the Doppler Text-based UI for interactive terminal-based secrets management with navigation, editing, and configuration management features\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 3,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "description: \"Master the Doppler Text-based UI for interactive terminal-based secrets management with navigation, editing, and configuration management features\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "tags: [\"doppler\", \"tui\", \"terminal\", \"interface\", \"interactive\", \"secrets-management\"]",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "tags: [\"doppler\", \"tui\", \"terminal\", \"interface\", \"interactive\", \"secrets-management\"]"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "cli_tui",
    "description": "CLI command: tui command",
    "pattern": "doppler tui",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 22,
    "section": "Start the TUI in current directory",
    "subsection": "Launching the TUI",
    "usage": "Use doppler tui for tui operations",
    "examples": [
      "doppler tui",
      "doppler tui --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_tui",
    "description": "Doppler CLI command: tui",
    "pattern": "doppler tui",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 22,
    "section": "Start the TUI in current directory",
    "subsection": "Launching the TUI",
    "usage": "Execute tui operations via CLI",
    "examples": [
      "doppler tui"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler tui --project api-service --config dev",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 25,
    "section": "Start with specific project/config",
    "subsection": "Launching the TUI",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_tui_--project",
    "description": "CLI command: tui --project command",
    "pattern": "doppler tui --project api-service --config dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 25,
    "section": "Start with specific project/config",
    "subsection": "Launching the TUI",
    "usage": "Use doppler tui --project for tui operations",
    "examples": [
      "doppler tui --project api-service --config dev",
      "doppler tui --project --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_tui_--project",
    "description": "Doppler CLI command: tui --project",
    "pattern": "doppler tui --project api-service --config dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 25,
    "section": "Start with specific project/config",
    "subsection": "Launching the TUI",
    "usage": "Execute tui operations via CLI",
    "examples": [
      "doppler tui --project api-service --config dev"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_variable_configuration",
    "description": "Environment variable configuration for Doppler integration",
    "pattern": "- Export selected secrets",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "low",
    "safety": "moderate",
    "filename": "tui-guide.md",
    "lineNumber": 127,
    "section": "Start with specific project/config",
    "subsection": "Advanced Features",
    "usage": "Configure environment variables for Doppler CLI and applications",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_token\"",
      "export DOPPLER_PROJECT=\"myproject\""
    ],
    "recommendations": [
      "Use secure token storage",
      "Set project defaults for convenience"
    ],
    "warnings": [
      "Never expose tokens in scripts or logs"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "|-----|--------|",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 133,
    "section": "Start with specific project/config",
    "subsection": "Advanced Features",
    "usage": "Use as template for integration configuration",
    "examples": [
      "|-----|--------|"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "- No activity log viewing",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 171,
    "section": "Start with specific project/config",
    "subsection": "Limitations",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "- No service token management",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "tui-guide.md",
    "lineNumber": 172,
    "section": "Start with specific project/config",
    "subsection": "Limitations",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler tui --config production",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 180,
    "section": "Launch TUI for production fixes",
    "subsection": "Common Use Cases",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_tui_--config",
    "description": "CLI command: tui --config command",
    "pattern": "doppler tui --config production",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 180,
    "section": "Launch TUI for production fixes",
    "subsection": "Common Use Cases",
    "usage": "Use doppler tui --config for tui operations",
    "examples": [
      "doppler tui --config production",
      "doppler tui --config --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_tui_--config",
    "description": "Doppler CLI command: tui --config",
    "pattern": "doppler tui --config production",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 180,
    "section": "Launch TUI for production fixes",
    "subsection": "Common Use Cases",
    "usage": "Execute tui operations via CLI",
    "examples": [
      "doppler tui --config production"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "### Development Configuration",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 185,
    "section": "Navigate to secret, press 'e', update, 's' to save",
    "subsection": "Common Use Cases",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "### Development Configuration",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 185,
    "section": "Navigate to secret, press 'e', update, 's' to save",
    "subsection": "Common Use Cases",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "# Use TUI for local development setup",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 187,
    "section": "Use TUI for local development setup",
    "subsection": "Common Use Cases",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler tui --config dev",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 188,
    "section": "Use TUI for local development setup",
    "subsection": "Common Use Cases",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_tui_--config",
    "description": "CLI command: tui --config command",
    "pattern": "doppler tui --config dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 188,
    "section": "Use TUI for local development setup",
    "subsection": "Common Use Cases",
    "usage": "Use doppler tui --config for tui operations",
    "examples": [
      "doppler tui --config dev",
      "doppler tui --config --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_tui_--config",
    "description": "Doppler CLI command: tui --config",
    "pattern": "doppler tui --config dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 188,
    "section": "Use TUI for local development setup",
    "subsection": "Common Use Cases",
    "usage": "Execute tui operations via CLI",
    "examples": [
      "doppler tui --config dev"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "audit_logging",
    "description": "Activity logging for compliance and security monitoring",
    "pattern": "### Secret Auditing",
    "category": "security",
    "type": "audit_compliance",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 193,
    "section": "Add multiple secrets quickly with 'a'",
    "subsection": "Common Use Cases",
    "usage": "Enable audit logging for compliance and security monitoring",
    "examples": [
      "doppler activity",
      "API endpoint: /v3/logs/activity"
    ],
    "recommendations": [
      "Regular audit log review",
      "Set up automated alerting"
    ],
    "warnings": [
      "Audit logs are essential for compliance"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler tui --config staging",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 196,
    "section": "Review all secrets in staging",
    "subsection": "Common Use Cases",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_tui_--config",
    "description": "CLI command: tui --config command",
    "pattern": "doppler tui --config staging",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 196,
    "section": "Review all secrets in staging",
    "subsection": "Common Use Cases",
    "usage": "Use doppler tui --config for tui operations",
    "examples": [
      "doppler tui --config staging",
      "doppler tui --config --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_tui_--config",
    "description": "Doppler CLI command: tui --config",
    "pattern": "doppler tui --config staging",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 196,
    "section": "Review all secrets in staging",
    "subsection": "Common Use Cases",
    "usage": "Execute tui operations via CLI",
    "examples": [
      "doppler tui --config staging"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "- Run `doppler setup` first if needed",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 205,
    "section": "Use '/' to filter and check specific values",
    "subsection": "Troubleshooting",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "command_setup",
    "description": "Doppler CLI command: setup",
    "pattern": "- Run `doppler setup` first if needed",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 205,
    "section": "Use '/' to filter and check specific values",
    "subsection": "Troubleshooting",
    "usage": "Execute setup operations via CLI",
    "examples": [
      "- Run `doppler setup` first if needed"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_set",
    "description": "CLI command: secrets set command",
    "pattern": "doppler secrets set BULK_DATA < data.json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 223,
    "section": "Use CLI for automation",
    "subsection": "Integration with CLI",
    "usage": "Use doppler secrets set for secrets operations",
    "examples": [
      "doppler secrets set BULK_DATA < data.json",
      "doppler secrets set --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_set",
    "description": "Doppler CLI command: secrets set",
    "pattern": "doppler secrets set BULK_DATA < data.json",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 223,
    "section": "Use CLI for automation",
    "subsection": "Integration with CLI",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets set BULK_DATA < data.json"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "cli_secrets_get",
    "description": "CLI command: secrets get command",
    "pattern": "doppler secrets get BULK_DATA",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 229,
    "section": "Verify with CLI",
    "subsection": "Integration with CLI",
    "usage": "Use doppler secrets get for secrets operations",
    "examples": [
      "doppler secrets get BULK_DATA",
      "doppler secrets get --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_secrets_get",
    "description": "Doppler CLI command: secrets get",
    "pattern": "doppler secrets get BULK_DATA",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 229,
    "section": "Verify with CLI",
    "subsection": "Integration with CLI",
    "usage": "Execute secrets operations via CLI",
    "examples": [
      "doppler secrets get BULK_DATA"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "file_tui_guide",
    "description": "Comprehensive guide: tui-guide.md",
    "pattern": "Documentation file: tui-guide.md",
    "category": "best_practices",
    "type": "documentation",
    "complexity": "high",
    "safety": "safe",
    "filename": "tui-guide.md",
    "lineNumber": 1,
    "section": "file_overview",
    "subsection": "",
    "usage": "Reference guide for tui guide",
    "examples": [
      "Study tui-guide.md for detailed information"
    ],
    "recommendations": [
      "Follow practices outlined in tui-guide.md"
    ],
    "warnings": [],
    "topics": [
      "Overview",
      "Launching the TUI",
      "Interface Layout",
      "Navigation",
      "Secret Management",
      "Filtering and Search",
      "Saving Changes",
      "Advanced Features",
      "Tips and Best Practices",
      "Limitations"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "---",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "workplace-structure.md",
    "lineNumber": 1,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "---"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "description: \"Understand Doppler's organizational hierarchy for managing secrets at scale including projects, environments, configurations, teams, and permissions\"",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "workplace-structure.md",
    "lineNumber": 3,
    "section": "",
    "subsection": "",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "description: \"Understand Doppler's organizational hierarchy for managing secrets at scale including projects, environments, configurations, teams, and permissions\"",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "workplace-structure.md",
    "lineNumber": 3,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "description: \"Understand Doppler's organizational hierarchy for managing secrets at scale including projects, environments, configurations, teams, and permissions\""
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "permission_troubleshooting",
    "description": "Troubleshooting permission and access issues",
    "pattern": "tags: [\"doppler\", \"workplace\", \"organization\", \"hierarchy\", \"structure\", \"teams\", \"permissions\"]",
    "category": "troubleshooting",
    "type": "access_issues",
    "complexity": "moderate",
    "safety": "moderate",
    "filename": "workplace-structure.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Diagnose and resolve permission-related access issues",
    "examples": [
      "Check token permissions: doppler me",
      "Verify project access in Doppler dashboard"
    ],
    "recommendations": [
      "Verify token scope",
      "Check workplace permissions"
    ],
    "warnings": [
      "Overly permissive tokens pose security risks"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "tags: [\"doppler\", \"workplace\", \"organization\", \"hierarchy\", \"structure\", \"teams\", \"permissions\"]",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "workplace-structure.md",
    "lineNumber": 6,
    "section": "",
    "subsection": "",
    "usage": "Use as template for integration configuration",
    "examples": [
      "tags: [\"doppler\", \"workplace\", \"organization\", \"hierarchy\", \"structure\", \"teams\", \"permissions\"]"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "service_token_usage",
    "description": "Service token for production applications - read-only recommended",
    "pattern": "│   └── Service Tokens",
    "category": "security",
    "type": "token_management",
    "complexity": "moderate",
    "safety": "careful",
    "filename": "workplace-structure.md",
    "lineNumber": 26,
    "section": "Doppler Workplace Structure",
    "subsection": "Organizational Hierarchy",
    "usage": "Use service tokens (dp.st.) for production applications with read-only access",
    "examples": [
      "export DOPPLER_TOKEN=\"dp.st.your_service_token\"",
      "docker run -e DOPPLER_TOKEN=$DOPPLER_TOKEN myapp"
    ],
    "recommendations": [
      "Use read-only tokens in production",
      "Rotate tokens regularly"
    ],
    "warnings": [
      "Never commit service tokens to version control"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "- Naming conventions are crucial for organization",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "workplace-structure.md",
    "lineNumber": 44,
    "section": "Doppler Workplace Structure",
    "subsection": "Core Concepts",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "- Deployment stages (dev, staging, production)",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "workplace-structure.md",
    "lineNumber": 47,
    "section": "Doppler Workplace Structure",
    "subsection": "Core Concepts",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "- Useful for feature branches or regional deployments",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "workplace-structure.md",
    "lineNumber": 54,
    "section": "Doppler Workplace Structure",
    "subsection": "Core Concepts",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "## Project Naming Strategies",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "workplace-structure.md",
    "lineNumber": 57,
    "section": "Doppler Workplace Structure",
    "subsection": "Project Naming Strategies",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "- Requires consistent naming discipline",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "workplace-structure.md",
    "lineNumber": 93,
    "section": "Doppler Workplace Structure",
    "subsection": "Project Naming Strategies",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "- Supports complex deployments",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "workplace-structure.md",
    "lineNumber": 106,
    "section": "Doppler Workplace Structure",
    "subsection": "Project Naming Strategies",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "- May hit naming limits",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "workplace-structure.md",
    "lineNumber": 111,
    "section": "Doppler Workplace Structure",
    "subsection": "Project Naming Strategies",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "development_workflow",
    "description": "Local development workflow with Doppler integration",
    "pattern": "├── dev (Development)",
    "category": "workflows",
    "type": "development_process",
    "complexity": "low",
    "safety": "safe",
    "filename": "workplace-structure.md",
    "lineNumber": 119,
    "section": "Doppler Workplace Structure",
    "subsection": "Environment Configuration",
    "usage": "Set up local development environment with Doppler secrets",
    "examples": [
      "doppler login",
      "doppler run -- npm start"
    ],
    "recommendations": [
      "Use personal tokens for development",
      "Never commit .env files"
    ],
    "warnings": [
      "Development secrets should not be production secrets"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "dev (inherits from base_config)",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "workplace-structure.md",
    "lineNumber": 141,
    "section": "Doppler Workplace Structure",
    "subsection": "Environment Configuration",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "project_setup_configuration",
    "description": "Project initialization and configuration best practices",
    "pattern": "doppler setup --project auth-service --config dev",
    "category": "configuration",
    "type": "project_initialization",
    "complexity": "low",
    "safety": "safe",
    "filename": "workplace-structure.md",
    "lineNumber": 178,
    "section": "Set up auth service",
    "subsection": "Architecture Patterns",
    "usage": "Initialize new projects with proper Doppler configuration",
    "examples": [
      "doppler setup",
      "doppler configure"
    ],
    "recommendations": [
      "Use doppler setup for new projects",
      "Configure default environments"
    ],
    "warnings": [
      "Ensure proper project selection before configuration"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "doppler setup --project auth-service --config dev",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "workplace-structure.md",
    "lineNumber": 178,
    "section": "Set up auth service",
    "subsection": "Architecture Patterns",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "cli_setup_--project",
    "description": "CLI command: setup --project command",
    "pattern": "doppler setup --project auth-service --config dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "workplace-structure.md",
    "lineNumber": 178,
    "section": "Set up auth service",
    "subsection": "Architecture Patterns",
    "usage": "Use doppler setup --project for setup operations",
    "examples": [
      "doppler setup --project auth-service --config dev",
      "doppler setup --project --help"
    ],
    "recommendations": [
      "Check command documentation",
      "Use appropriate flags"
    ],
    "warnings": []
  },
  {
    "name": "command_setup_--project",
    "description": "Doppler CLI command: setup --project",
    "pattern": "doppler setup --project auth-service --config dev",
    "category": "api_usage",
    "type": "cli_command",
    "complexity": "low",
    "safety": "safe",
    "filename": "workplace-structure.md",
    "lineNumber": 178,
    "section": "Set up auth service",
    "subsection": "Architecture Patterns",
    "usage": "Execute setup operations via CLI",
    "examples": [
      "doppler setup --project auth-service --config dev"
    ],
    "recommendations": [
      "Check command help: doppler --help",
      "Use appropriate authentication"
    ],
    "warnings": [
      "Some commands require specific permissions"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "DATABASE_URL: ${shared-config.staging.DATABASE_URL}",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "workplace-structure.md",
    "lineNumber": 181,
    "section": "Reference shared secrets",
    "subsection": "Architecture Patterns",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "DATABASE_URL: ${shared-config.staging.DATABASE_URL}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "workplace-structure.md",
    "lineNumber": 181,
    "section": "Reference shared secrets",
    "subsection": "Architecture Patterns",
    "usage": "Use as template for integration configuration",
    "examples": [
      "DATABASE_URL: ${shared-config.staging.DATABASE_URL}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "environment_configuration_strategy",
    "description": "Environment-specific configuration management patterns",
    "pattern": "REDIS_URL: ${shared-config.staging.REDIS_URL}",
    "category": "configuration",
    "type": "environment_setup",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "workplace-structure.md",
    "lineNumber": 182,
    "section": "Reference shared secrets",
    "subsection": "Architecture Patterns",
    "usage": "Configure environments with appropriate inheritance and overrides",
    "examples": [
      "dev -> staging -> production hierarchy",
      "Environment-specific overrides for DATABASE_URL"
    ],
    "recommendations": [
      "Use inheritance for common secrets",
      "Override environment-specific values"
    ],
    "warnings": [
      "Test configuration changes in staging first"
    ]
  },
  {
    "name": "configuration_template",
    "description": "Configuration template for various integration scenarios",
    "pattern": "REDIS_URL: ${shared-config.staging.REDIS_URL}",
    "category": "templates",
    "type": "configuration_template",
    "complexity": "moderate",
    "safety": "safe",
    "filename": "workplace-structure.md",
    "lineNumber": 182,
    "section": "Reference shared secrets",
    "subsection": "Architecture Patterns",
    "usage": "Use as template for integration configuration",
    "examples": [
      "REDIS_URL: ${shared-config.staging.REDIS_URL}"
    ],
    "recommendations": [
      "Customize for your specific use case",
      "Validate configuration syntax"
    ],
    "warnings": [
      "Review security settings before deployment"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "### Pattern 3: Multi-Region Deployment",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "workplace-structure.md",
    "lineNumber": 201,
    "section": "Reference shared secrets",
    "subsection": "Architecture Patterns",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "### 1. Naming Conventions",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "workplace-structure.md",
    "lineNumber": 275,
    "section": "Reference shared secrets",
    "subsection": "Best Practices",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "secret_naming_conventions",
    "description": "Standardized naming conventions for secrets management",
    "pattern": "- Mix naming patterns",
    "category": "best_practices",
    "type": "organization",
    "complexity": "low",
    "safety": "safe",
    "filename": "workplace-structure.md",
    "lineNumber": 286,
    "section": "Reference shared secrets",
    "subsection": "Best Practices",
    "usage": "Use consistent naming patterns for secrets across environments",
    "examples": [
      "DATABASE_URL, API_KEY, STRIPE_SECRET_KEY",
      "PREFIX_SERVICE_ENVIRONMENT pattern"
    ],
    "recommendations": [
      "ALL_CAPS with underscores",
      "Descriptive but concise names"
    ],
    "warnings": [
      "Avoid revealing sensitive information in secret names"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "- Mix deployment stages",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "workplace-structure.md",
    "lineNumber": 313,
    "section": "Reference shared secrets",
    "subsection": "Best Practices",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "deployment_workflow",
    "description": "Deployment workflow integration with secret management",
    "pattern": "### Scenario 3: Blue-Green Deployment",
    "category": "workflows",
    "type": "deployment_process",
    "complexity": "high",
    "safety": "careful",
    "filename": "workplace-structure.md",
    "lineNumber": 357,
    "section": "Scaled Structure (Growth)",
    "subsection": "Common Scenarios",
    "usage": "Integrate secret management into deployment workflows",
    "examples": [
      "doppler run -- npm run deploy",
      "Pre-deployment secret validation"
    ],
    "recommendations": [
      "Validate secrets before deployment",
      "Use environment-specific tokens"
    ],
    "warnings": [
      "Failed secret injection can break deployments"
    ]
  },
  {
    "name": "file_workplace_structure",
    "description": "Comprehensive guide: workplace-structure.md",
    "pattern": "Documentation file: workplace-structure.md",
    "category": "configuration",
    "type": "documentation",
    "complexity": "expert",
    "safety": "safe",
    "filename": "workplace-structure.md",
    "lineNumber": 1,
    "section": "file_overview",
    "subsection": "",
    "usage": "Reference guide for workplace structure",
    "examples": [
      "Study workplace-structure.md for detailed information"
    ],
    "recommendations": [
      "Follow practices outlined in workplace-structure.md"
    ],
    "warnings": [],
    "topics": [
      "Overview",
      "Organizational Hierarchy",
      "Core Concepts",
      "Project Naming Strategies",
      "Environment Configuration",
      "Architecture Patterns",
      "Access Control Patterns",
      "Best Practices",
      "Common Scenarios",
      "Migration Strategies"
    ]
  }
];

export const INTELLIGENCE_CATEGORIES = {
  SECURITY: 'security',
  INTEGRATION: 'integration',
  BEST_PRACTICES: 'best_practices',
  TROUBLESHOOTING: 'troubleshooting',
  CONFIGURATION: 'configuration',
  INSTALLATION: 'installation',
  API_USAGE: 'api_usage',
  PERFORMANCE: 'performance',
  WORKFLOWS: 'workflows',
  TEMPLATES: 'templates'
} as const;

export const COMPLEXITY_LEVELS = {
  LOW: 'low',
  MODERATE: 'moderate',
  HIGH: 'high',
  EXPERT: 'expert'
} as const;

export const SAFETY_LEVELS = {
  SAFE: 'safe',
  MODERATE: 'moderate',
  CAREFUL: 'careful',
  CRITICAL: 'critical'
} as const;

export const INTELLIGENCE_STATS = {
  totalPatterns: 1899,
  filesProcessed: 20,
  categoryCounts: {
  "security": 110,
  "integration": 47,
  "best_practices": 68,
  "troubleshooting": 80,
  "configuration": 212,
  "installation": 3,
  "api_usage": 828,
  "performance": 0,
  "workflows": 107,
  "templates": 444
},
  complexityCounts: {
  "low": 1029,
  "moderate": 744,
  "high": 112,
  "expert": 14
},
  safetyLevels: {
  "safe": 1529,
  "moderate": 205,
  "careful": 135,
  "critical": 30
},
  lastUpdate: '2025-06-22T12:08:05.132Z'
};

// Category-based access helpers
export const getPatternsByCategory = (category: string): DopplerIntelligencePattern[] => {
  return DOPPLER_INTELLIGENCE_PATTERNS.filter(p => p.category === category);
};

export const getPatternsByComplexity = (complexity: string): DopplerIntelligencePattern[] => {
  return DOPPLER_INTELLIGENCE_PATTERNS.filter(p => p.complexity === complexity);
};

export const getPatternsBySafety = (safety: string): DopplerIntelligencePattern[] => {
  return DOPPLER_INTELLIGENCE_PATTERNS.filter(p => p.safety === safety);
};

export const searchPatterns = (query: string): DopplerIntelligencePattern[] => {
  const searchTerm = query.toLowerCase();
  return DOPPLER_INTELLIGENCE_PATTERNS.filter(p => 
    p.name.toLowerCase().includes(searchTerm) ||
    p.description.toLowerCase().includes(searchTerm) ||
    p.pattern.toLowerCase().includes(searchTerm) ||
    p.usage.toLowerCase().includes(searchTerm) ||
    p.examples.some(ex => ex.toLowerCase().includes(searchTerm))
  );
};
